/* raylib header file for Hot Soup Processor. */
/* This file was generated by raylibhsp. */

#ifndef raylibhsp

/* callfuncex_module.hsp */

#ifndef callfuncex_module

#module callfuncex_module

#ifndef __hsp64__@
#uselib "kernel32.dll"
#func VirtualProtect "VirtualProtect" int, int, int, int
#endif

#enum global CALLFUNCEX_RETURN_VOID = 0
#enum global CALLFUNCEX_RETURN_INT
#enum global CALLFUNCEX_RETURN_INT64
#enum global CALLFUNCEX_RETURN_DOUBLE
#enum global CALLFUNCEX_RETURN_FLOAT
#enum global CALLFUNCEX_RETURN_POINTER
#enum global CALLFUNCEX_RETURN_STRUCT

#deffunc callfuncex_init
    #ifdef __hsp64__@
    sys_pointer=int64(0)
    #else
    sys_pointer=int(0)
    sys_getdouble_code=$0424448b,$04c218dd,$00000000
    sys_getdouble_res=0
    #endif
    sys_param_size=0
    sdim sys_param_data
    sys_return_type=-1
    sys_return_size=0
    return

#ifndef __hsp64__@
#deffunc local getdouble local fret,local prm
    VirtualProtect varptr(sys_getdouble_code), length(sys_getdouble_code)*4, $40, varptr(sys_getdouble_res)
    fret=0.0
	prm = varptr(fret)
	sys_getdouble_res = callfunc(prm, varptr(sys_getdouble_code), 1)
	return fret
#endif

#defcfunc callfuncex_d2f double p1, local temp
    temp = p1
    return lpeek(temp)>>29&7|(p1<0)<<31|lpeek(temp,4)-(p1!0)*0x38000000<<3

#defcfunc callfuncex_f2d int p1, local temp
    temp = 0.0
    lpoke temp, 4, (p1 & 0x80000000) | (((p1 & 0x7fffffff) >> 3) + ((p1 & 0x7fffffff) ! 0) * 0x38000000)
    lpoke temp, 0, p1 << 29
    return temp

#deffunc local callfuncex_func var p_pointer,int p_return_type,int p_return_size
#ifdef __hsp64__@
#define global callfuncex_func(%1,%2=CALLFUNCEX_RETURN_VOID@,%3=0) dummy@callfuncex_module=varptr64(%1):callfuncex_func@callfuncex_module dummy@callfuncex_module,%2,%3
#else
#define global callfuncex_func(%1,%2=CALLFUNCEX_RETURN_VOID@,%3=0) dummy@callfuncex_module=varptr(%1):callfuncex_func@callfuncex_module dummy@callfuncex_module,%2,%3
#endif
#define global callfuncex_func_void(%1,%2=0) callfuncex_func@ %1,CALLFUNCEX_RETURN_VOID@,%2
#define global callfuncex_func_int(%1,%2=0) callfuncex_func@ %1,CALLFUNCEX_RETURN_INT@,%2
#define global callfuncex_func_int64(%1,%2=0) callfuncex_func@ %1,CALLFUNCEX_RETURN_INT64@,%2
#define global callfuncex_func_double(%1,%2=0) callfuncex_func@ %1,CALLFUNCEX_RETURN_DOUBLE@,%2
#define global callfuncex_func_float(%1,%2=0) callfuncex_func@ %1,CALLFUNCEX_RETURN_FLOAT@,%2
#define global callfuncex_func_pointer(%1,%2=0) callfuncex_func@ %1,CALLFUNCEX_RETURN_POINTER@,%2
#define global callfuncex_func_struct(%1,%2=0) callfuncex_func@ %1,CALLFUNCEX_RETURN_STRUCT@,%2
    callfuncex_init
    #ifdef __hsp64__@
    sys_pointer=int64(p_pointer)
    #else
    sys_pointer=int(p_pointer)
    #endif
    sys_return_type=p_return_type
    sys_return_size=p_return_size
    if sys_return_size<=0:{
        switch sys_return_type
        case CALLFUNCEX_RETURN_VOID@:sys_return_size=0:swbreak
        case CALLFUNCEX_RETURN_INT@:sys_return_size=4:swbreak
        case CALLFUNCEX_RETURN_INT64@:sys_return_size=8:swbreak
        case CALLFUNCEX_RETURN_DOUBLE@:sys_return_size=8:swbreak
        case CALLFUNCEX_RETURN_FLOAT@:sys_return_size=4:swbreak
        #ifdef __hsp64__@
        case CALLFUNCEX_RETURN_POINTER@:sys_return_size=8:swbreak
        #else
        case CALLFUNCEX_RETURN_POINTER@:sys_return_size=4:swbreak
        #endif
        case CALLFUNCEX_RETURN_STRUCT@:sys_return_size=-1:swbreak
        default:sys_return_size=0:swbreak
        swend
    }
    return

#deffunc local callfuncex_p var p_data,int p_size, local temp_size,local temp_pointer
#define global callfuncex_p(%1,%2=0) callfuncex_p@callfuncex_module %1,%2
#define global callfuncex_p_value(%1,%2=0) dummy@callfuncex_module=%1:callfuncex_p@callfuncex_module dummy@callfuncex_module,%2
    temp_size=0
    if p_size<=0:{
        temp_size=varsize(p_data)
    } else {
        temp_size=p_size
    }
    #ifdef __hsp64__@
    memexpand sys_param_data,sys_param_size+8
    if temp_size==1 || temp_size==2 || temp_size==4 || temp_size==8:{
        memcpy sys_param_data,p_data,temp_size,sys_param_size,0
    } else {
        temp_pointer=varptr64(p_data)
        memcpy sys_param_data,temp_pointer,8,sys_param_size,0
    }
    sys_param_size+=8
    #else
    memexpand sys_param_data,sys_param_size+temp_size
    memcpy sys_param_data,p_data,temp_size,sys_param_size,0
    if (temp_size\4)==0:{
        sys_param_size+=temp_size
    } else {
        sys_param_size+=temp_size/4*4+4
    }
    #endif
    return

#deffunc callfuncex_call var p_return, local temp_return,local temp_count,local temp_param,local temp_param_with_struct
    temp_return=0
    #ifdef __hsp64__@
    if sys_pointer!=int64(0):{
        temp_count=sys_param_size/8
        if (sys_param_size\8)!=0:temp_count+=1
        dim64 temp_param,temp_count+1
        memcpy temp_param,sys_param_data,sys_param_size,0,0

        switch sys_return_type
        case CALLFUNCEX_RETURN_VOID@
        case CALLFUNCEX_RETURN_INT@
        case CALLFUNCEX_RETURN_INT64@
        case CALLFUNCEX_RETURN_POINTER@
        case CALLFUNCEX_RETURN_STRUCT@
        temp_return=callfunc64i(temp_param,sys_pointer,temp_count)
        if sys_return_type!=CALLFUNCEX_RETURN_INT64@ && sys_return_type!=CALLFUNCEX_RETURN_POINTER@:{
            temp_return=int(temp_return)
        }
        if sys_return_type==CALLFUNCEX_RETURN_VOID@:temp_return=0
        swbreak
        case CALLFUNCEX_RETURN_FLOAT@
        temp_return=int(callfunc64f(temp_param,sys_pointer,temp_count))
        swbreak
        case CALLFUNCEX_RETURN_DOUBLE@
        temp_return=callfunc64d(temp_param,sys_pointer,temp_count)
        swbreak
        swend
    }
    #else
    if sys_pointer!=0:{
        temp_count=sys_param_size/4
        if (sys_param_size\4)!=0:temp_count+=1
        dim temp_param,temp_count
        memcpy temp_param,sys_param_data,sys_param_size,0,0

        switch sys_return_type
        case CALLFUNCEX_RETURN_VOID@
        case CALLFUNCEX_RETURN_INT@
        case CALLFUNCEX_RETURN_INT64@
        case CALLFUNCEX_RETURN_POINTER@
        case CALLFUNCEX_RETURN_STRUCT@
        temp_return=callfunc(temp_param,sys_pointer,temp_count)
        if sys_return_type==CALLFUNCEX_RETURN_VOID@:temp_return=0
        swbreak
        case CALLFUNCEX_RETURN_DOUBLE@
        case CALLFUNCEX_RETURN_FLOAT@
        temp_return=callfunc(temp_param,sys_pointer,temp_count)
        getdouble
        temp_return=refdval
        if sys_return_type==CALLFUNCEX_RETURN_FLOAT@:temp_return=callfuncex_d2f(temp_return)
        swbreak
        swend
    }
    #endif

    switch sys_return_type
    case CALLFUNCEX_RETURN_VOID@
    p_return=0
    swbreak
    case CALLFUNCEX_RETURN_DOUBLE@
    case CALLFUNCEX_RETURN_FLOAT@
    case CALLFUNCEX_RETURN_POINTER@
    case CALLFUNCEX_RETURN_STRUCT@
    p_return=temp_return
    swbreak
    default
        switch sys_return_size
        case 1:p_return=peek(temp_return,0):swbreak
        case 2:p_return=wpeek(temp_return,0):swbreak
        case 4:p_return=temp_return:swbreak
        #ifdef __hsp64__@
        case 8:p_return=int64(temp_return):swbreak
        #endif
        default:p_return=temp_return:swbreak
        swend
    swend

    callfuncex_init
    return

#global
callfuncex_init

#endif

/* struct_module.hsp */

#ifndef struct_module

#module struct_module

#defcfunc local struct_fixalignment int p_size,int p_alignment, local temp_return
    temp_return=0
    if p_alignment<=0:{
        temp_return=p_size
    } else {
        temp_return=p_alignment
    }
    return temp_return
#defcfunc local struct_checkalignment int p_a,int p_b, local temp_return
    temp_return=0
    if p_a<p_b:{
        temp_return=p_b
    } else {
        temp_return=p_a
    }
    return temp_return
#defcfunc local struct_calcoffset int p_current_offset,int p_size,int p_alignment, local temp_return,local temp_alignment
    temp_return=0

    temp_alignment=struct_fixalignment(p_size,p_alignment)
    if temp_alignment>0:{
        if p_current_offset\temp_alignment==0:{
            temp_return=p_current_offset
        } else {
            temp_return=p_current_offset/temp_alignment*temp_alignment+temp_alignment
        }
    }
    return temp_return

#define global struct_init(%1) %1__total@=0:%1__max_alignment@=0
#define global struct_member(%1,%2,%3,%4=0) %1__%2__size@=%3:%1__%2__alignment@=struct_fixalignment@struct_module(%3,%4):%1__%2__offset@=struct_calcoffset@struct_module(%1__total@,%1__%2__size@,%1__%2__alignment@):%1__total@=%1__%2__offset@+%1__%2__size@:%1__max_alignment@=struct_checkalignment@struct_module(%1__max_alignment@,%1__%2__alignment@)
#define global struct_done(%1) %1__total@=struct_calcoffset@struct_module(%1__total@,%1__total@,%1__max_alignment@)
#define global ctype struct_gettotal(%1) (%1__total@)
#define global ctype struct_getsize(%1,%2) (%1__%2__size@)
#define global ctype struct_getoffset(%1,%2) (%1__%2__offset@)
#define global ctype struct_getalignment(%1,%2) (%1__%2__alignment@)
#define global ctype struct_getmaxalignment(%1) (%1__max_alignment@)
#define global struct_getdata(%1,%2,%3,%4) memcpy %4,%3,struct_getsize(%1,%2),0,struct_getoffset(%1,%2)
#define global struct_setdata(%1,%2,%3,%4) memcpy %3,%4,struct_getsize(%1,%2),struct_getoffset(%1,%2),0
#define global struct_setvalue(%1,%2,%3,%4) dummy@struct_module=%4:struct_setdata %1,%2,%3,dummy@struct_module
#define global struct_make(%1,%2) sdim %2,%1__total@

#define global ctype struct_typesize(%1) (struct_gettotal(type_%1))

#deffunc struct_module_init
    ;https://learn.microsoft.com/ja-jp/cpp/cpp/data-type-ranges?view=msvc-170

    struct_init type_unsigned_int:struct_member type_unsigned_int,value,4:struct_done type_unsigned_int
    struct_init type_unsigned:struct_member type_unsigned,value,4:struct_done type_unsigned

    struct_init type___int8:struct_member type___int8,value,1:struct_done type___int8
    struct_init type_char:struct_member type_char,value,1:struct_done type_char

    struct_init type_unsigned___int8:struct_member type_unsigned___int8,value,1:struct_done type_unsigned___int8
    struct_init type_unsigned_char:struct_member type_unsigned_char,value,1:struct_done type_unsigned_char

    struct_init type___int16:struct_member type___int16,value,2:struct_done type___int16
    struct_init type_short:struct_member type_short,value,2:struct_done type_short
    struct_init type_short_int:struct_member type_short_int,value,2:struct_done type_short_int
    struct_init type_signed_short_int:struct_member type_signed_short_int,value,2:struct_done type_signed_short_int

    struct_init type_unsigned___int16:struct_member type_unsigned___int16,value,2:struct_done type_unsigned___int16
    struct_init type_unsigned_short:struct_member type_unsigned_short,value,2:struct_done type_unsigned_short
    struct_init type_unsigned_short_int:struct_member type_unsigned_short_int,value,2:struct_done type_unsigned_short_int

    struct_init type___int32:struct_member type___int32,value,4:struct_done type___int32
    struct_init type_signed:struct_member type_signed,value,4:struct_done type_signed
    struct_init type_signed_int:struct_member type_signed_int,value,4:struct_done type_signed_int
    struct_init type_int:struct_member type_int,value,4:struct_done type_int

    struct_init type_unsigned___int32:struct_member type_unsigned___int32,value,4:struct_done type_unsigned___int32

    struct_init type___int64:struct_member type___int64,value,8:struct_done type___int64
    struct_init type_long_long:struct_member type_long_long,value,8:struct_done type_long_long
    struct_init type_signed_long_long:struct_member type_signed_long_long,value,8:struct_done type_signed_long_long

    struct_init type_unsigned___int64:struct_member type_unsigned___int64,value,8:struct_done type_unsigned___int64
    struct_init type_unsigned_long_long:struct_member type_unsigned_long_long,value,8:struct_done type_unsigned_long_long

    struct_init type_bool:struct_member type_bool,value,1:struct_done type_bool

    struct_init type_signed_char:struct_member type_signed_char,value,1:struct_done type_signed_char

    struct_init type_long:struct_member type_long,value,4:struct_done type_long
    struct_init type_long_int:struct_member type_long_int,value,4:struct_done type_long_int
    struct_init type_signed_long_int:struct_member type_signed_long_int,value,4:struct_done type_signed_long_int

    struct_init type_unsigned_long:struct_member type_unsigned_long,value,4:struct_done type_unsigned_long
    struct_init type_unsigned_long_int:struct_member type_unsigned_long_int,value,4:struct_done type_unsigned_long_int

    struct_init type_float:struct_member type_float,value,4:struct_done type_float

    struct_init type_double:struct_member type_double,value,8:struct_done type_double

    struct_init type_long_double:struct_member type_long_double,value,8:struct_done type_long_double

    struct_init type_wchar_t:struct_member type_wchar_t,value,2:struct_done type_wchar_t
    struct_init type___wchar_t:struct_member type___wchar_t,value,2:struct_done type___wchar_t

    struct_init type_void:struct_member type_void,value,0:struct_done type_void

    #ifdef __hsp64__@
    struct_init type_pointer:struct_member type_pointer,value,8:struct_done type_pointer
    #else
    struct_init type_pointer:struct_member type_pointer,value,4:struct_done type_pointer
    #endif
    return

#global
struct_module_init

#endif


/* defines */

#define global rl_RAYLIB_VERSION_MAJOR 4
#define global rl_RAYLIB_VERSION_MINOR 5
#define global rl_RAYLIB_VERSION_PATCH 0
#define global rl_RAYLIB_VERSION "4.5"
#define global rl_PI 3.14159265358979323846
#define global rl_MOUSE_LEFT_BUTTON rl_MOUSE_BUTTON_LEFT
#define global rl_MOUSE_RIGHT_BUTTON rl_MOUSE_BUTTON_RIGHT
#define global rl_MOUSE_MIDDLE_BUTTON rl_MOUSE_BUTTON_MIDDLE
#define global rl_MATERIAL_MAP_DIFFUSE rl_MATERIAL_MAP_ALBEDO
#define global rl_MATERIAL_MAP_SPECULAR rl_MATERIAL_MAP_METALNESS
#define global rl_SHADER_LOC_MAP_DIFFUSE rl_SHADER_LOC_MAP_ALBEDO
#define global rl_SHADER_LOC_MAP_SPECULAR rl_SHADER_LOC_MAP_METALNESS
#define global rlgl_RLGL_VERSION "4.5"
#define global rlgl_RL_DEFAULT_BATCH_BUFFER_ELEMENTS 8192
#define global rlgl_RL_DEFAULT_BATCH_BUFFERS 1
#define global rlgl_RL_DEFAULT_BATCH_DRAWCALLS 256
#define global rlgl_RL_DEFAULT_BATCH_MAX_TEXTURE_UNITS 4
#define global rlgl_RL_MAX_MATRIX_STACK_SIZE 32
#define global rlgl_RL_MAX_SHADER_LOCATIONS 32
#define global rlgl_RL_CULL_DISTANCE_NEAR 0.01
#define global rlgl_RL_CULL_DISTANCE_FAR 1000.0
#define global rlgl_RL_TEXTURE_WRAP_S 10242
#define global rlgl_RL_TEXTURE_WRAP_T 10243
#define global rlgl_RL_TEXTURE_MAG_FILTER 10240
#define global rlgl_RL_TEXTURE_MIN_FILTER 10241
#define global rlgl_RL_TEXTURE_FILTER_NEAREST 9728
#define global rlgl_RL_TEXTURE_FILTER_LINEAR 9729
#define global rlgl_RL_TEXTURE_FILTER_MIP_NEAREST 9984
#define global rlgl_RL_TEXTURE_FILTER_NEAREST_MIP_LINEAR 9986
#define global rlgl_RL_TEXTURE_FILTER_LINEAR_MIP_NEAREST 9985
#define global rlgl_RL_TEXTURE_FILTER_MIP_LINEAR 9987
#define global rlgl_RL_TEXTURE_FILTER_ANISOTROPIC 12288
#define global rlgl_RL_TEXTURE_MIPMAP_BIAS_RATIO 16384
#define global rlgl_RL_TEXTURE_WRAP_REPEAT 10497
#define global rlgl_RL_TEXTURE_WRAP_CLAMP 33071
#define global rlgl_RL_TEXTURE_WRAP_MIRROR_REPEAT 33648
#define global rlgl_RL_TEXTURE_WRAP_MIRROR_CLAMP 34626
#define global rlgl_RL_MODELVIEW 5888
#define global rlgl_RL_PROJECTION 5889
#define global rlgl_RL_TEXTURE 5890
#define global rlgl_RL_LINES 1
#define global rlgl_RL_TRIANGLES 4
#define global rlgl_RL_QUADS 7
#define global rlgl_RL_UNSIGNED_BYTE 5121
#define global rlgl_RL_FLOAT 5126
#define global rlgl_RL_STREAM_DRAW 35040
#define global rlgl_RL_STREAM_READ 35041
#define global rlgl_RL_STREAM_COPY 35042
#define global rlgl_RL_STATIC_DRAW 35044
#define global rlgl_RL_STATIC_READ 35045
#define global rlgl_RL_STATIC_COPY 35046
#define global rlgl_RL_DYNAMIC_DRAW 35048
#define global rlgl_RL_DYNAMIC_READ 35049
#define global rlgl_RL_DYNAMIC_COPY 35050
#define global rlgl_RL_FRAGMENT_SHADER 35632
#define global rlgl_RL_VERTEX_SHADER 35633
#define global rlgl_RL_COMPUTE_SHADER 37305
#define global rlgl_RL_ZERO 0
#define global rlgl_RL_ONE 1
#define global rlgl_RL_SRC_COLOR 768
#define global rlgl_RL_ONE_MINUS_SRC_COLOR 769
#define global rlgl_RL_SRC_ALPHA 770
#define global rlgl_RL_ONE_MINUS_SRC_ALPHA 771
#define global rlgl_RL_DST_ALPHA 772
#define global rlgl_RL_ONE_MINUS_DST_ALPHA 773
#define global rlgl_RL_DST_COLOR 774
#define global rlgl_RL_ONE_MINUS_DST_COLOR 775
#define global rlgl_RL_SRC_ALPHA_SATURATE 776
#define global rlgl_RL_CONSTANT_COLOR 32769
#define global rlgl_RL_ONE_MINUS_CONSTANT_COLOR 32770
#define global rlgl_RL_CONSTANT_ALPHA 32771
#define global rlgl_RL_ONE_MINUS_CONSTANT_ALPHA 32772
#define global rlgl_RL_FUNC_ADD 32774
#define global rlgl_RL_MIN 32775
#define global rlgl_RL_MAX 32776
#define global rlgl_RL_FUNC_SUBTRACT 32778
#define global rlgl_RL_FUNC_REVERSE_SUBTRACT 32779
#define global rlgl_RL_BLEND_EQUATION 32777
#define global rlgl_RL_BLEND_EQUATION_RGB 32777
#define global rlgl_RL_BLEND_EQUATION_ALPHA 34877
#define global rlgl_RL_BLEND_DST_RGB 32968
#define global rlgl_RL_BLEND_SRC_RGB 32969
#define global rlgl_RL_BLEND_DST_ALPHA 32970
#define global rlgl_RL_BLEND_SRC_ALPHA 32971
#define global rlgl_RL_BLEND_COLOR 32773
#define global rlgl_RL_SHADER_LOC_MAP_DIFFUSE rlgl_RL_SHADER_LOC_MAP_ALBEDO
#define global rlgl_RL_SHADER_LOC_MAP_SPECULAR rlgl_RL_SHADER_LOC_MAP_METALNESS
#define global raymath_PI 3.14159265358979323846
#define global raymath_EPSILON 0.000001

/* enums */

struct_init rl_ConfigFlags
struct_member rl_ConfigFlags,value,struct_typesize(int)
struct_done rl_ConfigFlags
#enum global rl_FLAG_VSYNC_HINT = 64
#enum global rl_FLAG_FULLSCREEN_MODE = 2
#enum global rl_FLAG_WINDOW_RESIZABLE = 4
#enum global rl_FLAG_WINDOW_UNDECORATED = 8
#enum global rl_FLAG_WINDOW_HIDDEN = 128
#enum global rl_FLAG_WINDOW_MINIMIZED = 512
#enum global rl_FLAG_WINDOW_MAXIMIZED = 1024
#enum global rl_FLAG_WINDOW_UNFOCUSED = 2048
#enum global rl_FLAG_WINDOW_TOPMOST = 4096
#enum global rl_FLAG_WINDOW_ALWAYS_RUN = 256
#enum global rl_FLAG_WINDOW_TRANSPARENT = 16
#enum global rl_FLAG_WINDOW_HIGHDPI = 8192
#enum global rl_FLAG_WINDOW_MOUSE_PASSTHROUGH = 16384
#enum global rl_FLAG_MSAA_4X_HINT = 32
#enum global rl_FLAG_INTERLACED_HINT = 65536

struct_init rl_TraceLogLevel
struct_member rl_TraceLogLevel,value,struct_typesize(int)
struct_done rl_TraceLogLevel
#enum global rl_LOG_ALL = 0
#enum global rl_LOG_TRACE = 1
#enum global rl_LOG_DEBUG = 2
#enum global rl_LOG_INFO = 3
#enum global rl_LOG_WARNING = 4
#enum global rl_LOG_ERROR = 5
#enum global rl_LOG_FATAL = 6
#enum global rl_LOG_NONE = 7

struct_init rl_KeyboardKey
struct_member rl_KeyboardKey,value,struct_typesize(int)
struct_done rl_KeyboardKey
#enum global rl_KEY_NULL = 0
#enum global rl_KEY_APOSTROPHE = 39
#enum global rl_KEY_COMMA = 44
#enum global rl_KEY_MINUS = 45
#enum global rl_KEY_PERIOD = 46
#enum global rl_KEY_SLASH = 47
#enum global rl_KEY_ZERO = 48
#enum global rl_KEY_ONE = 49
#enum global rl_KEY_TWO = 50
#enum global rl_KEY_THREE = 51
#enum global rl_KEY_FOUR = 52
#enum global rl_KEY_FIVE = 53
#enum global rl_KEY_SIX = 54
#enum global rl_KEY_SEVEN = 55
#enum global rl_KEY_EIGHT = 56
#enum global rl_KEY_NINE = 57
#enum global rl_KEY_SEMICOLON = 59
#enum global rl_KEY_EQUAL = 61
#enum global rl_KEY_A = 65
#enum global rl_KEY_B = 66
#enum global rl_KEY_C = 67
#enum global rl_KEY_D = 68
#enum global rl_KEY_E = 69
#enum global rl_KEY_F = 70
#enum global rl_KEY_G = 71
#enum global rl_KEY_H = 72
#enum global rl_KEY_I = 73
#enum global rl_KEY_J = 74
#enum global rl_KEY_K = 75
#enum global rl_KEY_L = 76
#enum global rl_KEY_M = 77
#enum global rl_KEY_N = 78
#enum global rl_KEY_O = 79
#enum global rl_KEY_P = 80
#enum global rl_KEY_Q = 81
#enum global rl_KEY_R = 82
#enum global rl_KEY_S = 83
#enum global rl_KEY_T = 84
#enum global rl_KEY_U = 85
#enum global rl_KEY_V = 86
#enum global rl_KEY_W = 87
#enum global rl_KEY_X = 88
#enum global rl_KEY_Y = 89
#enum global rl_KEY_Z = 90
#enum global rl_KEY_LEFT_BRACKET = 91
#enum global rl_KEY_BACKSLASH = 92
#enum global rl_KEY_RIGHT_BRACKET = 93
#enum global rl_KEY_GRAVE = 96
#enum global rl_KEY_SPACE = 32
#enum global rl_KEY_ESCAPE = 256
#enum global rl_KEY_ENTER = 257
#enum global rl_KEY_TAB = 258
#enum global rl_KEY_BACKSPACE = 259
#enum global rl_KEY_INSERT = 260
#enum global rl_KEY_DELETE = 261
#enum global rl_KEY_RIGHT = 262
#enum global rl_KEY_LEFT = 263
#enum global rl_KEY_DOWN = 264
#enum global rl_KEY_UP = 265
#enum global rl_KEY_PAGE_UP = 266
#enum global rl_KEY_PAGE_DOWN = 267
#enum global rl_KEY_HOME = 268
#enum global rl_KEY_END = 269
#enum global rl_KEY_CAPS_LOCK = 280
#enum global rl_KEY_SCROLL_LOCK = 281
#enum global rl_KEY_NUM_LOCK = 282
#enum global rl_KEY_PRINT_SCREEN = 283
#enum global rl_KEY_PAUSE = 284
#enum global rl_KEY_F1 = 290
#enum global rl_KEY_F2 = 291
#enum global rl_KEY_F3 = 292
#enum global rl_KEY_F4 = 293
#enum global rl_KEY_F5 = 294
#enum global rl_KEY_F6 = 295
#enum global rl_KEY_F7 = 296
#enum global rl_KEY_F8 = 297
#enum global rl_KEY_F9 = 298
#enum global rl_KEY_F10 = 299
#enum global rl_KEY_F11 = 300
#enum global rl_KEY_F12 = 301
#enum global rl_KEY_LEFT_SHIFT = 340
#enum global rl_KEY_LEFT_CONTROL = 341
#enum global rl_KEY_LEFT_ALT = 342
#enum global rl_KEY_LEFT_SUPER = 343
#enum global rl_KEY_RIGHT_SHIFT = 344
#enum global rl_KEY_RIGHT_CONTROL = 345
#enum global rl_KEY_RIGHT_ALT = 346
#enum global rl_KEY_RIGHT_SUPER = 347
#enum global rl_KEY_KB_MENU = 348
#enum global rl_KEY_KP_0 = 320
#enum global rl_KEY_KP_1 = 321
#enum global rl_KEY_KP_2 = 322
#enum global rl_KEY_KP_3 = 323
#enum global rl_KEY_KP_4 = 324
#enum global rl_KEY_KP_5 = 325
#enum global rl_KEY_KP_6 = 326
#enum global rl_KEY_KP_7 = 327
#enum global rl_KEY_KP_8 = 328
#enum global rl_KEY_KP_9 = 329
#enum global rl_KEY_KP_DECIMAL = 330
#enum global rl_KEY_KP_DIVIDE = 331
#enum global rl_KEY_KP_MULTIPLY = 332
#enum global rl_KEY_KP_SUBTRACT = 333
#enum global rl_KEY_KP_ADD = 334
#enum global rl_KEY_KP_ENTER = 335
#enum global rl_KEY_KP_EQUAL = 336
#enum global rl_KEY_BACK = 4
#enum global rl_KEY_MENU = 82
#enum global rl_KEY_VOLUME_UP = 24
#enum global rl_KEY_VOLUME_DOWN = 25

struct_init rl_MouseButton
struct_member rl_MouseButton,value,struct_typesize(int)
struct_done rl_MouseButton
#enum global rl_MOUSE_BUTTON_LEFT = 0
#enum global rl_MOUSE_BUTTON_RIGHT = 1
#enum global rl_MOUSE_BUTTON_MIDDLE = 2
#enum global rl_MOUSE_BUTTON_SIDE = 3
#enum global rl_MOUSE_BUTTON_EXTRA = 4
#enum global rl_MOUSE_BUTTON_FORWARD = 5
#enum global rl_MOUSE_BUTTON_BACK = 6

struct_init rl_MouseCursor
struct_member rl_MouseCursor,value,struct_typesize(int)
struct_done rl_MouseCursor
#enum global rl_MOUSE_CURSOR_DEFAULT = 0
#enum global rl_MOUSE_CURSOR_ARROW = 1
#enum global rl_MOUSE_CURSOR_IBEAM = 2
#enum global rl_MOUSE_CURSOR_CROSSHAIR = 3
#enum global rl_MOUSE_CURSOR_POINTING_HAND = 4
#enum global rl_MOUSE_CURSOR_RESIZE_EW = 5
#enum global rl_MOUSE_CURSOR_RESIZE_NS = 6
#enum global rl_MOUSE_CURSOR_RESIZE_NWSE = 7
#enum global rl_MOUSE_CURSOR_RESIZE_NESW = 8
#enum global rl_MOUSE_CURSOR_RESIZE_ALL = 9
#enum global rl_MOUSE_CURSOR_NOT_ALLOWED = 10

struct_init rl_GamepadButton
struct_member rl_GamepadButton,value,struct_typesize(int)
struct_done rl_GamepadButton
#enum global rl_GAMEPAD_BUTTON_UNKNOWN = 0
#enum global rl_GAMEPAD_BUTTON_LEFT_FACE_UP = 1
#enum global rl_GAMEPAD_BUTTON_LEFT_FACE_RIGHT = 2
#enum global rl_GAMEPAD_BUTTON_LEFT_FACE_DOWN = 3
#enum global rl_GAMEPAD_BUTTON_LEFT_FACE_LEFT = 4
#enum global rl_GAMEPAD_BUTTON_RIGHT_FACE_UP = 5
#enum global rl_GAMEPAD_BUTTON_RIGHT_FACE_RIGHT = 6
#enum global rl_GAMEPAD_BUTTON_RIGHT_FACE_DOWN = 7
#enum global rl_GAMEPAD_BUTTON_RIGHT_FACE_LEFT = 8
#enum global rl_GAMEPAD_BUTTON_LEFT_TRIGGER_1 = 9
#enum global rl_GAMEPAD_BUTTON_LEFT_TRIGGER_2 = 10
#enum global rl_GAMEPAD_BUTTON_RIGHT_TRIGGER_1 = 11
#enum global rl_GAMEPAD_BUTTON_RIGHT_TRIGGER_2 = 12
#enum global rl_GAMEPAD_BUTTON_MIDDLE_LEFT = 13
#enum global rl_GAMEPAD_BUTTON_MIDDLE = 14
#enum global rl_GAMEPAD_BUTTON_MIDDLE_RIGHT = 15
#enum global rl_GAMEPAD_BUTTON_LEFT_THUMB = 16
#enum global rl_GAMEPAD_BUTTON_RIGHT_THUMB = 17

struct_init rl_GamepadAxis
struct_member rl_GamepadAxis,value,struct_typesize(int)
struct_done rl_GamepadAxis
#enum global rl_GAMEPAD_AXIS_LEFT_X = 0
#enum global rl_GAMEPAD_AXIS_LEFT_Y = 1
#enum global rl_GAMEPAD_AXIS_RIGHT_X = 2
#enum global rl_GAMEPAD_AXIS_RIGHT_Y = 3
#enum global rl_GAMEPAD_AXIS_LEFT_TRIGGER = 4
#enum global rl_GAMEPAD_AXIS_RIGHT_TRIGGER = 5

struct_init rl_MaterialMapIndex
struct_member rl_MaterialMapIndex,value,struct_typesize(int)
struct_done rl_MaterialMapIndex
#enum global rl_MATERIAL_MAP_ALBEDO = 0
#enum global rl_MATERIAL_MAP_METALNESS = 1
#enum global rl_MATERIAL_MAP_NORMAL = 2
#enum global rl_MATERIAL_MAP_ROUGHNESS = 3
#enum global rl_MATERIAL_MAP_OCCLUSION = 4
#enum global rl_MATERIAL_MAP_EMISSION = 5
#enum global rl_MATERIAL_MAP_HEIGHT = 6
#enum global rl_MATERIAL_MAP_CUBEMAP = 7
#enum global rl_MATERIAL_MAP_IRRADIANCE = 8
#enum global rl_MATERIAL_MAP_PREFILTER = 9
#enum global rl_MATERIAL_MAP_BRDF = 10

struct_init rl_ShaderLocationIndex
struct_member rl_ShaderLocationIndex,value,struct_typesize(int)
struct_done rl_ShaderLocationIndex
#enum global rl_SHADER_LOC_VERTEX_POSITION = 0
#enum global rl_SHADER_LOC_VERTEX_TEXCOORD01 = 1
#enum global rl_SHADER_LOC_VERTEX_TEXCOORD02 = 2
#enum global rl_SHADER_LOC_VERTEX_NORMAL = 3
#enum global rl_SHADER_LOC_VERTEX_TANGENT = 4
#enum global rl_SHADER_LOC_VERTEX_COLOR = 5
#enum global rl_SHADER_LOC_MATRIX_MVP = 6
#enum global rl_SHADER_LOC_MATRIX_VIEW = 7
#enum global rl_SHADER_LOC_MATRIX_PROJECTION = 8
#enum global rl_SHADER_LOC_MATRIX_MODEL = 9
#enum global rl_SHADER_LOC_MATRIX_NORMAL = 10
#enum global rl_SHADER_LOC_VECTOR_VIEW = 11
#enum global rl_SHADER_LOC_COLOR_DIFFUSE = 12
#enum global rl_SHADER_LOC_COLOR_SPECULAR = 13
#enum global rl_SHADER_LOC_COLOR_AMBIENT = 14
#enum global rl_SHADER_LOC_MAP_ALBEDO = 15
#enum global rl_SHADER_LOC_MAP_METALNESS = 16
#enum global rl_SHADER_LOC_MAP_NORMAL = 17
#enum global rl_SHADER_LOC_MAP_ROUGHNESS = 18
#enum global rl_SHADER_LOC_MAP_OCCLUSION = 19
#enum global rl_SHADER_LOC_MAP_EMISSION = 20
#enum global rl_SHADER_LOC_MAP_HEIGHT = 21
#enum global rl_SHADER_LOC_MAP_CUBEMAP = 22
#enum global rl_SHADER_LOC_MAP_IRRADIANCE = 23
#enum global rl_SHADER_LOC_MAP_PREFILTER = 24
#enum global rl_SHADER_LOC_MAP_BRDF = 25

struct_init rl_ShaderUniformDataType
struct_member rl_ShaderUniformDataType,value,struct_typesize(int)
struct_done rl_ShaderUniformDataType
#enum global rl_SHADER_UNIFORM_FLOAT = 0
#enum global rl_SHADER_UNIFORM_VEC2 = 1
#enum global rl_SHADER_UNIFORM_VEC3 = 2
#enum global rl_SHADER_UNIFORM_VEC4 = 3
#enum global rl_SHADER_UNIFORM_INT = 4
#enum global rl_SHADER_UNIFORM_IVEC2 = 5
#enum global rl_SHADER_UNIFORM_IVEC3 = 6
#enum global rl_SHADER_UNIFORM_IVEC4 = 7
#enum global rl_SHADER_UNIFORM_SAMPLER2D = 8

struct_init rl_ShaderAttributeDataType
struct_member rl_ShaderAttributeDataType,value,struct_typesize(int)
struct_done rl_ShaderAttributeDataType
#enum global rl_SHADER_ATTRIB_FLOAT = 0
#enum global rl_SHADER_ATTRIB_VEC2 = 1
#enum global rl_SHADER_ATTRIB_VEC3 = 2
#enum global rl_SHADER_ATTRIB_VEC4 = 3

struct_init rl_PixelFormat
struct_member rl_PixelFormat,value,struct_typesize(int)
struct_done rl_PixelFormat
#enum global rl_PIXELFORMAT_UNCOMPRESSED_GRAYSCALE = 1
#enum global rl_PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA = 2
#enum global rl_PIXELFORMAT_UNCOMPRESSED_R5G6B5 = 3
#enum global rl_PIXELFORMAT_UNCOMPRESSED_R8G8B8 = 4
#enum global rl_PIXELFORMAT_UNCOMPRESSED_R5G5B5A1 = 5
#enum global rl_PIXELFORMAT_UNCOMPRESSED_R4G4B4A4 = 6
#enum global rl_PIXELFORMAT_UNCOMPRESSED_R8G8B8A8 = 7
#enum global rl_PIXELFORMAT_UNCOMPRESSED_R32 = 8
#enum global rl_PIXELFORMAT_UNCOMPRESSED_R32G32B32 = 9
#enum global rl_PIXELFORMAT_UNCOMPRESSED_R32G32B32A32 = 10
#enum global rl_PIXELFORMAT_COMPRESSED_DXT1_RGB = 11
#enum global rl_PIXELFORMAT_COMPRESSED_DXT1_RGBA = 12
#enum global rl_PIXELFORMAT_COMPRESSED_DXT3_RGBA = 13
#enum global rl_PIXELFORMAT_COMPRESSED_DXT5_RGBA = 14
#enum global rl_PIXELFORMAT_COMPRESSED_ETC1_RGB = 15
#enum global rl_PIXELFORMAT_COMPRESSED_ETC2_RGB = 16
#enum global rl_PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA = 17
#enum global rl_PIXELFORMAT_COMPRESSED_PVRT_RGB = 18
#enum global rl_PIXELFORMAT_COMPRESSED_PVRT_RGBA = 19
#enum global rl_PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA = 20
#enum global rl_PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA = 21

struct_init rl_TextureFilter
struct_member rl_TextureFilter,value,struct_typesize(int)
struct_done rl_TextureFilter
#enum global rl_TEXTURE_FILTER_POINT = 0
#enum global rl_TEXTURE_FILTER_BILINEAR = 1
#enum global rl_TEXTURE_FILTER_TRILINEAR = 2
#enum global rl_TEXTURE_FILTER_ANISOTROPIC_4X = 3
#enum global rl_TEXTURE_FILTER_ANISOTROPIC_8X = 4
#enum global rl_TEXTURE_FILTER_ANISOTROPIC_16X = 5

struct_init rl_TextureWrap
struct_member rl_TextureWrap,value,struct_typesize(int)
struct_done rl_TextureWrap
#enum global rl_TEXTURE_WRAP_REPEAT = 0
#enum global rl_TEXTURE_WRAP_CLAMP = 1
#enum global rl_TEXTURE_WRAP_MIRROR_REPEAT = 2
#enum global rl_TEXTURE_WRAP_MIRROR_CLAMP = 3

struct_init rl_CubemapLayout
struct_member rl_CubemapLayout,value,struct_typesize(int)
struct_done rl_CubemapLayout
#enum global rl_CUBEMAP_LAYOUT_AUTO_DETECT = 0
#enum global rl_CUBEMAP_LAYOUT_LINE_VERTICAL = 1
#enum global rl_CUBEMAP_LAYOUT_LINE_HORIZONTAL = 2
#enum global rl_CUBEMAP_LAYOUT_CROSS_THREE_BY_FOUR = 3
#enum global rl_CUBEMAP_LAYOUT_CROSS_FOUR_BY_THREE = 4
#enum global rl_CUBEMAP_LAYOUT_PANORAMA = 5

struct_init rl_FontType
struct_member rl_FontType,value,struct_typesize(int)
struct_done rl_FontType
#enum global rl_FONT_DEFAULT = 0
#enum global rl_FONT_BITMAP = 1
#enum global rl_FONT_SDF = 2

struct_init rl_BlendMode
struct_member rl_BlendMode,value,struct_typesize(int)
struct_done rl_BlendMode
#enum global rl_BLEND_ALPHA = 0
#enum global rl_BLEND_ADDITIVE = 1
#enum global rl_BLEND_MULTIPLIED = 2
#enum global rl_BLEND_ADD_COLORS = 3
#enum global rl_BLEND_SUBTRACT_COLORS = 4
#enum global rl_BLEND_ALPHA_PREMULTIPLY = 5
#enum global rl_BLEND_CUSTOM = 6
#enum global rl_BLEND_CUSTOM_SEPARATE = 7

struct_init rl_Gesture
struct_member rl_Gesture,value,struct_typesize(int)
struct_done rl_Gesture
#enum global rl_GESTURE_NONE = 0
#enum global rl_GESTURE_TAP = 1
#enum global rl_GESTURE_DOUBLETAP = 2
#enum global rl_GESTURE_HOLD = 4
#enum global rl_GESTURE_DRAG = 8
#enum global rl_GESTURE_SWIPE_RIGHT = 16
#enum global rl_GESTURE_SWIPE_LEFT = 32
#enum global rl_GESTURE_SWIPE_UP = 64
#enum global rl_GESTURE_SWIPE_DOWN = 128
#enum global rl_GESTURE_PINCH_IN = 256
#enum global rl_GESTURE_PINCH_OUT = 512

struct_init rl_CameraMode
struct_member rl_CameraMode,value,struct_typesize(int)
struct_done rl_CameraMode
#enum global rl_CAMERA_CUSTOM = 0
#enum global rl_CAMERA_FREE = 1
#enum global rl_CAMERA_ORBITAL = 2
#enum global rl_CAMERA_FIRST_PERSON = 3
#enum global rl_CAMERA_THIRD_PERSON = 4

struct_init rl_CameraProjection
struct_member rl_CameraProjection,value,struct_typesize(int)
struct_done rl_CameraProjection
#enum global rl_CAMERA_PERSPECTIVE = 0
#enum global rl_CAMERA_ORTHOGRAPHIC = 1

struct_init rl_NPatchLayout
struct_member rl_NPatchLayout,value,struct_typesize(int)
struct_done rl_NPatchLayout
#enum global rl_NPATCH_NINE_PATCH = 0
#enum global rl_NPATCH_THREE_PATCH_VERTICAL = 1
#enum global rl_NPATCH_THREE_PATCH_HORIZONTAL = 2

struct_init rlgl_rlGlVersion
struct_member rlgl_rlGlVersion,value,struct_typesize(int)
struct_done rlgl_rlGlVersion
#enum global rlgl_RL_OPENGL_11 = 1
#enum global rlgl_RL_OPENGL_21 = 2
#enum global rlgl_RL_OPENGL_33 = 3
#enum global rlgl_RL_OPENGL_43 = 4
#enum global rlgl_RL_OPENGL_ES_20 = 5

struct_init rlgl_rlTraceLogLevel
struct_member rlgl_rlTraceLogLevel,value,struct_typesize(int)
struct_done rlgl_rlTraceLogLevel
#enum global rlgl_RL_LOG_ALL = 0
#enum global rlgl_RL_LOG_TRACE = 1
#enum global rlgl_RL_LOG_DEBUG = 2
#enum global rlgl_RL_LOG_INFO = 3
#enum global rlgl_RL_LOG_WARNING = 4
#enum global rlgl_RL_LOG_ERROR = 5
#enum global rlgl_RL_LOG_FATAL = 6
#enum global rlgl_RL_LOG_NONE = 7

struct_init rlgl_rlPixelFormat
struct_member rlgl_rlPixelFormat,value,struct_typesize(int)
struct_done rlgl_rlPixelFormat
#enum global rlgl_RL_PIXELFORMAT_UNCOMPRESSED_GRAYSCALE = 1
#enum global rlgl_RL_PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA = 2
#enum global rlgl_RL_PIXELFORMAT_UNCOMPRESSED_R5G6B5 = 3
#enum global rlgl_RL_PIXELFORMAT_UNCOMPRESSED_R8G8B8 = 4
#enum global rlgl_RL_PIXELFORMAT_UNCOMPRESSED_R5G5B5A1 = 5
#enum global rlgl_RL_PIXELFORMAT_UNCOMPRESSED_R4G4B4A4 = 6
#enum global rlgl_RL_PIXELFORMAT_UNCOMPRESSED_R8G8B8A8 = 7
#enum global rlgl_RL_PIXELFORMAT_UNCOMPRESSED_R32 = 8
#enum global rlgl_RL_PIXELFORMAT_UNCOMPRESSED_R32G32B32 = 9
#enum global rlgl_RL_PIXELFORMAT_UNCOMPRESSED_R32G32B32A32 = 10
#enum global rlgl_RL_PIXELFORMAT_COMPRESSED_DXT1_RGB = 11
#enum global rlgl_RL_PIXELFORMAT_COMPRESSED_DXT1_RGBA = 12
#enum global rlgl_RL_PIXELFORMAT_COMPRESSED_DXT3_RGBA = 13
#enum global rlgl_RL_PIXELFORMAT_COMPRESSED_DXT5_RGBA = 14
#enum global rlgl_RL_PIXELFORMAT_COMPRESSED_ETC1_RGB = 15
#enum global rlgl_RL_PIXELFORMAT_COMPRESSED_ETC2_RGB = 16
#enum global rlgl_RL_PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA = 17
#enum global rlgl_RL_PIXELFORMAT_COMPRESSED_PVRT_RGB = 18
#enum global rlgl_RL_PIXELFORMAT_COMPRESSED_PVRT_RGBA = 19
#enum global rlgl_RL_PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA = 20
#enum global rlgl_RL_PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA = 21

struct_init rlgl_rlTextureFilter
struct_member rlgl_rlTextureFilter,value,struct_typesize(int)
struct_done rlgl_rlTextureFilter
#enum global rlgl_RL_TEXTURE_FILTER_POINT = 0
#enum global rlgl_RL_TEXTURE_FILTER_BILINEAR = 1
#enum global rlgl_RL_TEXTURE_FILTER_TRILINEAR = 2
#enum global rlgl_RL_TEXTURE_FILTER_ANISOTROPIC_4X = 3
#enum global rlgl_RL_TEXTURE_FILTER_ANISOTROPIC_8X = 4
#enum global rlgl_RL_TEXTURE_FILTER_ANISOTROPIC_16X = 5

struct_init rlgl_rlBlendMode
struct_member rlgl_rlBlendMode,value,struct_typesize(int)
struct_done rlgl_rlBlendMode
#enum global rlgl_RL_BLEND_ALPHA = 0
#enum global rlgl_RL_BLEND_ADDITIVE = 1
#enum global rlgl_RL_BLEND_MULTIPLIED = 2
#enum global rlgl_RL_BLEND_ADD_COLORS = 3
#enum global rlgl_RL_BLEND_SUBTRACT_COLORS = 4
#enum global rlgl_RL_BLEND_ALPHA_PREMULTIPLY = 5
#enum global rlgl_RL_BLEND_CUSTOM = 6
#enum global rlgl_RL_BLEND_CUSTOM_SEPARATE = 7

struct_init rlgl_rlShaderLocationIndex
struct_member rlgl_rlShaderLocationIndex,value,struct_typesize(int)
struct_done rlgl_rlShaderLocationIndex
#enum global rlgl_RL_SHADER_LOC_VERTEX_POSITION = 0
#enum global rlgl_RL_SHADER_LOC_VERTEX_TEXCOORD01 = 1
#enum global rlgl_RL_SHADER_LOC_VERTEX_TEXCOORD02 = 2
#enum global rlgl_RL_SHADER_LOC_VERTEX_NORMAL = 3
#enum global rlgl_RL_SHADER_LOC_VERTEX_TANGENT = 4
#enum global rlgl_RL_SHADER_LOC_VERTEX_COLOR = 5
#enum global rlgl_RL_SHADER_LOC_MATRIX_MVP = 6
#enum global rlgl_RL_SHADER_LOC_MATRIX_VIEW = 7
#enum global rlgl_RL_SHADER_LOC_MATRIX_PROJECTION = 8
#enum global rlgl_RL_SHADER_LOC_MATRIX_MODEL = 9
#enum global rlgl_RL_SHADER_LOC_MATRIX_NORMAL = 10
#enum global rlgl_RL_SHADER_LOC_VECTOR_VIEW = 11
#enum global rlgl_RL_SHADER_LOC_COLOR_DIFFUSE = 12
#enum global rlgl_RL_SHADER_LOC_COLOR_SPECULAR = 13
#enum global rlgl_RL_SHADER_LOC_COLOR_AMBIENT = 14
#enum global rlgl_RL_SHADER_LOC_MAP_ALBEDO = 15
#enum global rlgl_RL_SHADER_LOC_MAP_METALNESS = 16
#enum global rlgl_RL_SHADER_LOC_MAP_NORMAL = 17
#enum global rlgl_RL_SHADER_LOC_MAP_ROUGHNESS = 18
#enum global rlgl_RL_SHADER_LOC_MAP_OCCLUSION = 19
#enum global rlgl_RL_SHADER_LOC_MAP_EMISSION = 20
#enum global rlgl_RL_SHADER_LOC_MAP_HEIGHT = 21
#enum global rlgl_RL_SHADER_LOC_MAP_CUBEMAP = 22
#enum global rlgl_RL_SHADER_LOC_MAP_IRRADIANCE = 23
#enum global rlgl_RL_SHADER_LOC_MAP_PREFILTER = 24
#enum global rlgl_RL_SHADER_LOC_MAP_BRDF = 25

struct_init rlgl_rlShaderUniformDataType
struct_member rlgl_rlShaderUniformDataType,value,struct_typesize(int)
struct_done rlgl_rlShaderUniformDataType
#enum global rlgl_RL_SHADER_UNIFORM_FLOAT = 0
#enum global rlgl_RL_SHADER_UNIFORM_VEC2 = 1
#enum global rlgl_RL_SHADER_UNIFORM_VEC3 = 2
#enum global rlgl_RL_SHADER_UNIFORM_VEC4 = 3
#enum global rlgl_RL_SHADER_UNIFORM_INT = 4
#enum global rlgl_RL_SHADER_UNIFORM_IVEC2 = 5
#enum global rlgl_RL_SHADER_UNIFORM_IVEC3 = 6
#enum global rlgl_RL_SHADER_UNIFORM_IVEC4 = 7
#enum global rlgl_RL_SHADER_UNIFORM_SAMPLER2D = 8

struct_init rlgl_rlShaderAttributeDataType
struct_member rlgl_rlShaderAttributeDataType,value,struct_typesize(int)
struct_done rlgl_rlShaderAttributeDataType
#enum global rlgl_RL_SHADER_ATTRIB_FLOAT = 0
#enum global rlgl_RL_SHADER_ATTRIB_VEC2 = 1
#enum global rlgl_RL_SHADER_ATTRIB_VEC3 = 2
#enum global rlgl_RL_SHADER_ATTRIB_VEC4 = 3

struct_init rlgl_rlFramebufferAttachType
struct_member rlgl_rlFramebufferAttachType,value,struct_typesize(int)
struct_done rlgl_rlFramebufferAttachType
#enum global rlgl_RL_ATTACHMENT_COLOR_CHANNEL0 = 0
#enum global rlgl_RL_ATTACHMENT_COLOR_CHANNEL1 = 1
#enum global rlgl_RL_ATTACHMENT_COLOR_CHANNEL2 = 2
#enum global rlgl_RL_ATTACHMENT_COLOR_CHANNEL3 = 3
#enum global rlgl_RL_ATTACHMENT_COLOR_CHANNEL4 = 4
#enum global rlgl_RL_ATTACHMENT_COLOR_CHANNEL5 = 5
#enum global rlgl_RL_ATTACHMENT_COLOR_CHANNEL6 = 6
#enum global rlgl_RL_ATTACHMENT_COLOR_CHANNEL7 = 7
#enum global rlgl_RL_ATTACHMENT_DEPTH = 100
#enum global rlgl_RL_ATTACHMENT_STENCIL = 200

struct_init rlgl_rlFramebufferAttachTextureType
struct_member rlgl_rlFramebufferAttachTextureType,value,struct_typesize(int)
struct_done rlgl_rlFramebufferAttachTextureType
#enum global rlgl_RL_ATTACHMENT_CUBEMAP_POSITIVE_X = 0
#enum global rlgl_RL_ATTACHMENT_CUBEMAP_NEGATIVE_X = 1
#enum global rlgl_RL_ATTACHMENT_CUBEMAP_POSITIVE_Y = 2
#enum global rlgl_RL_ATTACHMENT_CUBEMAP_NEGATIVE_Y = 3
#enum global rlgl_RL_ATTACHMENT_CUBEMAP_POSITIVE_Z = 4
#enum global rlgl_RL_ATTACHMENT_CUBEMAP_NEGATIVE_Z = 5
#enum global rlgl_RL_ATTACHMENT_TEXTURE2D = 100
#enum global rlgl_RL_ATTACHMENT_RENDERBUFFER = 200

struct_init rlgl_rlCullMode
struct_member rlgl_rlCullMode,value,struct_typesize(int)
struct_done rlgl_rlCullMode
#enum global rlgl_RL_CULL_FACE_FRONT = 0
#enum global rlgl_RL_CULL_FACE_BACK = 1


/* structs */


struct_init rl_Vector2
struct_member rl_Vector2,x,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Vector2,y,struct_typesize(float)*1,struct_typesize(float)
struct_done rl_Vector2

struct_init rl_Vector3
struct_member rl_Vector3,x,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Vector3,y,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Vector3,z,struct_typesize(float)*1,struct_typesize(float)
struct_done rl_Vector3

struct_init rl_Vector4
struct_member rl_Vector4,x,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Vector4,y,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Vector4,z,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Vector4,w,struct_typesize(float)*1,struct_typesize(float)
struct_done rl_Vector4
struct_init rl_Quaternion
struct_member rl_Quaternion,x,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Quaternion,y,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Quaternion,z,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Quaternion,w,struct_typesize(float)*1,struct_typesize(float)
struct_done rl_Quaternion

struct_init rl_Matrix
struct_member rl_Matrix,m0,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Matrix,m4,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Matrix,m8,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Matrix,m12,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Matrix,m1,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Matrix,m5,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Matrix,m9,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Matrix,m13,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Matrix,m2,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Matrix,m6,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Matrix,m10,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Matrix,m14,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Matrix,m3,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Matrix,m7,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Matrix,m11,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Matrix,m15,struct_typesize(float)*1,struct_typesize(float)
struct_done rl_Matrix

struct_init rl_Color
struct_member rl_Color,r,struct_typesize(unsigned_char)*1,struct_typesize(unsigned_char)
struct_member rl_Color,g,struct_typesize(unsigned_char)*1,struct_typesize(unsigned_char)
struct_member rl_Color,b,struct_typesize(unsigned_char)*1,struct_typesize(unsigned_char)
struct_member rl_Color,a,struct_typesize(unsigned_char)*1,struct_typesize(unsigned_char)
struct_done rl_Color

struct_init rl_Rectangle
struct_member rl_Rectangle,x,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Rectangle,y,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Rectangle,width,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Rectangle,height,struct_typesize(float)*1,struct_typesize(float)
struct_done rl_Rectangle

struct_init rl_Image
struct_member rl_Image,data,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Image,width,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Image,height,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Image,mipmaps,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Image,format,struct_typesize(int)*1,struct_typesize(int)
struct_done rl_Image

struct_init rl_Texture
struct_member rl_Texture,id,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_member rl_Texture,width,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Texture,height,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Texture,mipmaps,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Texture,format,struct_typesize(int)*1,struct_typesize(int)
struct_done rl_Texture
struct_init rl_Texture2D
struct_member rl_Texture2D,id,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_member rl_Texture2D,width,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Texture2D,height,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Texture2D,mipmaps,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Texture2D,format,struct_typesize(int)*1,struct_typesize(int)
struct_done rl_Texture2D

struct_init rl_RenderTexture
struct_member rl_RenderTexture,id,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_member rl_RenderTexture,texture,struct_gettotal(rl_Texture)*1,struct_getmaxalignment(rl_Texture)
struct_member rl_RenderTexture,depth,struct_gettotal(rl_Texture)*1,struct_getmaxalignment(rl_Texture)
struct_done rl_RenderTexture
struct_init rl_RenderTexture2D
struct_member rl_RenderTexture2D,id,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_member rl_RenderTexture2D,texture,struct_gettotal(rl_Texture)*1,struct_getmaxalignment(rl_Texture)
struct_member rl_RenderTexture2D,depth,struct_gettotal(rl_Texture)*1,struct_getmaxalignment(rl_Texture)
struct_done rl_RenderTexture2D

struct_init rl_NPatchInfo
struct_member rl_NPatchInfo,source,struct_gettotal(rl_Rectangle)*1,struct_getmaxalignment(rl_Rectangle)
struct_member rl_NPatchInfo,left,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_NPatchInfo,top,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_NPatchInfo,right,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_NPatchInfo,bottom,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_NPatchInfo,layout,struct_typesize(int)*1,struct_typesize(int)
struct_done rl_NPatchInfo

struct_init rl_GlyphInfo
struct_member rl_GlyphInfo,value,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_GlyphInfo,offsetX,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_GlyphInfo,offsetY,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_GlyphInfo,advanceX,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_GlyphInfo,image,struct_gettotal(rl_Image)*1,struct_getmaxalignment(rl_Image)
struct_done rl_GlyphInfo

struct_init rl_Font
struct_member rl_Font,baseSize,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Font,glyphCount,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Font,glyphPadding,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Font,texture,struct_gettotal(rl_Texture2D)*1,struct_getmaxalignment(rl_Texture2D)
struct_member rl_Font,recs,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Font,glyphs,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_done rl_Font

struct_init rl_Camera3D
struct_member rl_Camera3D,position,struct_gettotal(rl_Vector3)*1,struct_getmaxalignment(rl_Vector3)
struct_member rl_Camera3D,target,struct_gettotal(rl_Vector3)*1,struct_getmaxalignment(rl_Vector3)
struct_member rl_Camera3D,up,struct_gettotal(rl_Vector3)*1,struct_getmaxalignment(rl_Vector3)
struct_member rl_Camera3D,fovy,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Camera3D,projection,struct_typesize(int)*1,struct_typesize(int)
struct_done rl_Camera3D
struct_init rl_Camera
struct_member rl_Camera,position,struct_gettotal(rl_Vector3)*1,struct_getmaxalignment(rl_Vector3)
struct_member rl_Camera,target,struct_gettotal(rl_Vector3)*1,struct_getmaxalignment(rl_Vector3)
struct_member rl_Camera,up,struct_gettotal(rl_Vector3)*1,struct_getmaxalignment(rl_Vector3)
struct_member rl_Camera,fovy,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Camera,projection,struct_typesize(int)*1,struct_typesize(int)
struct_done rl_Camera

struct_init rl_Camera2D
struct_member rl_Camera2D,offset,struct_gettotal(rl_Vector2)*1,struct_getmaxalignment(rl_Vector2)
struct_member rl_Camera2D,target,struct_gettotal(rl_Vector2)*1,struct_getmaxalignment(rl_Vector2)
struct_member rl_Camera2D,rotation,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_Camera2D,zoom,struct_typesize(float)*1,struct_typesize(float)
struct_done rl_Camera2D

struct_init rl_Mesh
struct_member rl_Mesh,vertexCount,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Mesh,triangleCount,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Mesh,vertices,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Mesh,texcoords,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Mesh,texcoords2,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Mesh,normals,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Mesh,tangents,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Mesh,colors,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Mesh,indices,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Mesh,animVertices,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Mesh,animNormals,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Mesh,boneIds,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Mesh,boneWeights,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Mesh,vaoId,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_member rl_Mesh,vboId,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_done rl_Mesh

struct_init rl_Shader
struct_member rl_Shader,id,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_member rl_Shader,locs,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_done rl_Shader

struct_init rl_MaterialMap
struct_member rl_MaterialMap,texture,struct_gettotal(rl_Texture2D)*1,struct_getmaxalignment(rl_Texture2D)
struct_member rl_MaterialMap,color,struct_gettotal(rl_Color)*1,struct_getmaxalignment(rl_Color)
struct_member rl_MaterialMap,value,struct_typesize(float)*1,struct_typesize(float)
struct_done rl_MaterialMap

struct_init rl_Material
struct_member rl_Material,shader,struct_gettotal(rl_Shader)*1,struct_getmaxalignment(rl_Shader)
struct_member rl_Material,maps,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Material,params,struct_typesize(float)*4,struct_typesize(float)
struct_done rl_Material

struct_init rl_Transform
struct_member rl_Transform,translation,struct_gettotal(rl_Vector3)*1,struct_getmaxalignment(rl_Vector3)
struct_member rl_Transform,rotation,struct_gettotal(rl_Quaternion)*1,struct_getmaxalignment(rl_Quaternion)
struct_member rl_Transform,scale,struct_gettotal(rl_Vector3)*1,struct_getmaxalignment(rl_Vector3)
struct_done rl_Transform

struct_init rl_BoneInfo
struct_member rl_BoneInfo,name,struct_typesize(char)*32,struct_typesize(char)
struct_member rl_BoneInfo,parent,struct_typesize(int)*1,struct_typesize(int)
struct_done rl_BoneInfo

struct_init rl_Model
struct_member rl_Model,transform,struct_gettotal(rl_Matrix)*1,struct_getmaxalignment(rl_Matrix)
struct_member rl_Model,meshCount,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Model,materialCount,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Model,meshes,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Model,materials,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Model,meshMaterial,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Model,boneCount,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Model,bones,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_Model,bindPose,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_done rl_Model

struct_init rl_ModelAnimation
struct_member rl_ModelAnimation,boneCount,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_ModelAnimation,frameCount,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_ModelAnimation,bones,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_ModelAnimation,framePoses,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_done rl_ModelAnimation

struct_init rl_Ray
struct_member rl_Ray,position,struct_gettotal(rl_Vector3)*1,struct_getmaxalignment(rl_Vector3)
struct_member rl_Ray,direction,struct_gettotal(rl_Vector3)*1,struct_getmaxalignment(rl_Vector3)
struct_done rl_Ray

struct_init rl_RayCollision
struct_member rl_RayCollision,hit,struct_typesize(bool)*1,struct_typesize(bool)
struct_member rl_RayCollision,distance,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_RayCollision,point,struct_gettotal(rl_Vector3)*1,struct_getmaxalignment(rl_Vector3)
struct_member rl_RayCollision,normal,struct_gettotal(rl_Vector3)*1,struct_getmaxalignment(rl_Vector3)
struct_done rl_RayCollision

struct_init rl_BoundingBox
struct_member rl_BoundingBox,min,struct_gettotal(rl_Vector3)*1,struct_getmaxalignment(rl_Vector3)
struct_member rl_BoundingBox,max,struct_gettotal(rl_Vector3)*1,struct_getmaxalignment(rl_Vector3)
struct_done rl_BoundingBox

struct_init rl_Wave
struct_member rl_Wave,frameCount,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_member rl_Wave,sampleRate,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_member rl_Wave,sampleSize,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_member rl_Wave,channels,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_member rl_Wave,data,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_done rl_Wave

struct_init rl_AudioStream
struct_member rl_AudioStream,buffer,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_AudioStream,processor,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rl_AudioStream,sampleRate,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_member rl_AudioStream,sampleSize,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_member rl_AudioStream,channels,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_done rl_AudioStream

struct_init rl_Sound
struct_member rl_Sound,stream,struct_gettotal(rl_AudioStream)*1,struct_getmaxalignment(rl_AudioStream)
struct_member rl_Sound,frameCount,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_done rl_Sound

struct_init rl_Music
struct_member rl_Music,stream,struct_gettotal(rl_AudioStream)*1,struct_getmaxalignment(rl_AudioStream)
struct_member rl_Music,frameCount,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_member rl_Music,looping,struct_typesize(bool)*1,struct_typesize(bool)
struct_member rl_Music,ctxType,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_Music,ctxData,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_done rl_Music

struct_init rl_VrDeviceInfo
struct_member rl_VrDeviceInfo,hResolution,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_VrDeviceInfo,vResolution,struct_typesize(int)*1,struct_typesize(int)
struct_member rl_VrDeviceInfo,hScreenSize,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_VrDeviceInfo,vScreenSize,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_VrDeviceInfo,vScreenCenter,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_VrDeviceInfo,eyeToScreenDistance,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_VrDeviceInfo,lensSeparationDistance,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_VrDeviceInfo,interpupillaryDistance,struct_typesize(float)*1,struct_typesize(float)
struct_member rl_VrDeviceInfo,lensDistortionValues,struct_typesize(float)*4,struct_typesize(float)
struct_member rl_VrDeviceInfo,chromaAbCorrection,struct_typesize(float)*4,struct_typesize(float)
struct_done rl_VrDeviceInfo

struct_init rl_VrStereoConfig
struct_member rl_VrStereoConfig,projection,struct_gettotal(rl_Matrix)*2,struct_getmaxalignment(rl_Matrix)
struct_member rl_VrStereoConfig,viewOffset,struct_gettotal(rl_Matrix)*2,struct_getmaxalignment(rl_Matrix)
struct_member rl_VrStereoConfig,leftLensCenter,struct_typesize(float)*2,struct_typesize(float)
struct_member rl_VrStereoConfig,rightLensCenter,struct_typesize(float)*2,struct_typesize(float)
struct_member rl_VrStereoConfig,leftScreenCenter,struct_typesize(float)*2,struct_typesize(float)
struct_member rl_VrStereoConfig,rightScreenCenter,struct_typesize(float)*2,struct_typesize(float)
struct_member rl_VrStereoConfig,scale,struct_typesize(float)*2,struct_typesize(float)
struct_member rl_VrStereoConfig,scaleIn,struct_typesize(float)*2,struct_typesize(float)
struct_done rl_VrStereoConfig

struct_init rl_FilePathList
struct_member rl_FilePathList,capacity,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_member rl_FilePathList,count,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_member rl_FilePathList,paths,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_done rl_FilePathList

struct_init rlgl_Matrix
struct_member rlgl_Matrix,m0,struct_typesize(float)*1,struct_typesize(float)
struct_member rlgl_Matrix,m4,struct_typesize(float)*1,struct_typesize(float)
struct_member rlgl_Matrix,m8,struct_typesize(float)*1,struct_typesize(float)
struct_member rlgl_Matrix,m12,struct_typesize(float)*1,struct_typesize(float)
struct_member rlgl_Matrix,m1,struct_typesize(float)*1,struct_typesize(float)
struct_member rlgl_Matrix,m5,struct_typesize(float)*1,struct_typesize(float)
struct_member rlgl_Matrix,m9,struct_typesize(float)*1,struct_typesize(float)
struct_member rlgl_Matrix,m13,struct_typesize(float)*1,struct_typesize(float)
struct_member rlgl_Matrix,m2,struct_typesize(float)*1,struct_typesize(float)
struct_member rlgl_Matrix,m6,struct_typesize(float)*1,struct_typesize(float)
struct_member rlgl_Matrix,m10,struct_typesize(float)*1,struct_typesize(float)
struct_member rlgl_Matrix,m14,struct_typesize(float)*1,struct_typesize(float)
struct_member rlgl_Matrix,m3,struct_typesize(float)*1,struct_typesize(float)
struct_member rlgl_Matrix,m7,struct_typesize(float)*1,struct_typesize(float)
struct_member rlgl_Matrix,m11,struct_typesize(float)*1,struct_typesize(float)
struct_member rlgl_Matrix,m15,struct_typesize(float)*1,struct_typesize(float)
struct_done rlgl_Matrix

struct_init rlgl_rlVertexBuffer
struct_member rlgl_rlVertexBuffer,elementCount,struct_typesize(int)*1,struct_typesize(int)
struct_member rlgl_rlVertexBuffer,vertices,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rlgl_rlVertexBuffer,texcoords,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rlgl_rlVertexBuffer,colors,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rlgl_rlVertexBuffer,indices,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rlgl_rlVertexBuffer,vaoId,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_member rlgl_rlVertexBuffer,vboId,struct_typesize(unsigned_int)*4,struct_typesize(unsigned_int)
struct_done rlgl_rlVertexBuffer

struct_init rlgl_rlDrawCall
struct_member rlgl_rlDrawCall,mode,struct_typesize(int)*1,struct_typesize(int)
struct_member rlgl_rlDrawCall,vertexCount,struct_typesize(int)*1,struct_typesize(int)
struct_member rlgl_rlDrawCall,vertexAlignment,struct_typesize(int)*1,struct_typesize(int)
struct_member rlgl_rlDrawCall,textureId,struct_typesize(unsigned_int)*1,struct_typesize(unsigned_int)
struct_done rlgl_rlDrawCall

struct_init rlgl_rlRenderBatch
struct_member rlgl_rlRenderBatch,bufferCount,struct_typesize(int)*1,struct_typesize(int)
struct_member rlgl_rlRenderBatch,currentBuffer,struct_typesize(int)*1,struct_typesize(int)
struct_member rlgl_rlRenderBatch,vertexBuffer,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rlgl_rlRenderBatch,draws,struct_typesize(pointer)*1,struct_typesize(pointer)
struct_member rlgl_rlRenderBatch,drawCounter,struct_typesize(int)*1,struct_typesize(int)
struct_member rlgl_rlRenderBatch,currentDepth,struct_typesize(float)*1,struct_typesize(float)
struct_done rlgl_rlRenderBatch

struct_init raymath_Vector2
struct_member raymath_Vector2,x,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Vector2,y,struct_typesize(float)*1,struct_typesize(float)
struct_done raymath_Vector2

struct_init raymath_Vector3
struct_member raymath_Vector3,x,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Vector3,y,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Vector3,z,struct_typesize(float)*1,struct_typesize(float)
struct_done raymath_Vector3

struct_init raymath_Vector4
struct_member raymath_Vector4,x,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Vector4,y,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Vector4,z,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Vector4,w,struct_typesize(float)*1,struct_typesize(float)
struct_done raymath_Vector4
struct_init raymath_Quaternion
struct_member raymath_Quaternion,x,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Quaternion,y,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Quaternion,z,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Quaternion,w,struct_typesize(float)*1,struct_typesize(float)
struct_done raymath_Quaternion

struct_init raymath_Matrix
struct_member raymath_Matrix,m0,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Matrix,m4,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Matrix,m8,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Matrix,m12,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Matrix,m1,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Matrix,m5,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Matrix,m9,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Matrix,m13,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Matrix,m2,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Matrix,m6,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Matrix,m10,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Matrix,m14,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Matrix,m3,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Matrix,m7,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Matrix,m11,struct_typesize(float)*1,struct_typesize(float)
struct_member raymath_Matrix,m15,struct_typesize(float)*1,struct_typesize(float)
struct_done raymath_Matrix

struct_init raymath_float3
struct_member raymath_float3,v,struct_typesize(float)*3,struct_typesize(float)
struct_done raymath_float3

struct_init raymath_float16
struct_member raymath_float16,v,struct_typesize(float)*16,struct_typesize(float)
struct_done raymath_float16


/* functions */

#module raylibhsp

#uselib "raylib.dll"

#func _rl_InitWindow "InitWindow"
#deffunc local __rl_InitWindow var p_width,var p_height,var p_title,local return_value
#define global rl_InitWindow(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_InitWindow@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_InitWindow@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p_value p_title,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_WindowShouldClose "WindowShouldClose"
#deffunc local __rl_WindowShouldClose local return_value
#define global rl_WindowShouldClose __rl_WindowShouldClose@raylibhsp
callfuncex_func _rl_WindowShouldClose@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_call return_value
return return_value

#func _rl_CloseWindow "CloseWindow"
#deffunc local __rl_CloseWindow local return_value
#define global rl_CloseWindow __rl_CloseWindow@raylibhsp
callfuncex_func _rl_CloseWindow@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_IsWindowReady "IsWindowReady"
#deffunc local __rl_IsWindowReady local return_value
#define global rl_IsWindowReady __rl_IsWindowReady@raylibhsp
callfuncex_func _rl_IsWindowReady@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_call return_value
return return_value

#func _rl_IsWindowFullscreen "IsWindowFullscreen"
#deffunc local __rl_IsWindowFullscreen local return_value
#define global rl_IsWindowFullscreen __rl_IsWindowFullscreen@raylibhsp
callfuncex_func _rl_IsWindowFullscreen@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_call return_value
return return_value

#func _rl_IsWindowHidden "IsWindowHidden"
#deffunc local __rl_IsWindowHidden local return_value
#define global rl_IsWindowHidden __rl_IsWindowHidden@raylibhsp
callfuncex_func _rl_IsWindowHidden@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_call return_value
return return_value

#func _rl_IsWindowMinimized "IsWindowMinimized"
#deffunc local __rl_IsWindowMinimized local return_value
#define global rl_IsWindowMinimized __rl_IsWindowMinimized@raylibhsp
callfuncex_func _rl_IsWindowMinimized@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_call return_value
return return_value

#func _rl_IsWindowMaximized "IsWindowMaximized"
#deffunc local __rl_IsWindowMaximized local return_value
#define global rl_IsWindowMaximized __rl_IsWindowMaximized@raylibhsp
callfuncex_func _rl_IsWindowMaximized@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_call return_value
return return_value

#func _rl_IsWindowFocused "IsWindowFocused"
#deffunc local __rl_IsWindowFocused local return_value
#define global rl_IsWindowFocused __rl_IsWindowFocused@raylibhsp
callfuncex_func _rl_IsWindowFocused@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_call return_value
return return_value

#func _rl_IsWindowResized "IsWindowResized"
#deffunc local __rl_IsWindowResized local return_value
#define global rl_IsWindowResized __rl_IsWindowResized@raylibhsp
callfuncex_func _rl_IsWindowResized@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_call return_value
return return_value

#func _rl_IsWindowState "IsWindowState"
#deffunc local __rl_IsWindowState var p_flag,local return_value
#define global rl_IsWindowState(%1) dummy_p1@raylibhsp=%1:__rl_IsWindowState@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_IsWindowState@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_flag,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rl_SetWindowState "SetWindowState"
#deffunc local __rl_SetWindowState var p_flags,local return_value
#define global rl_SetWindowState(%1) dummy_p1@raylibhsp=%1:__rl_SetWindowState@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_SetWindowState@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_flags,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rl_ClearWindowState "ClearWindowState"
#deffunc local __rl_ClearWindowState var p_flags,local return_value
#define global rl_ClearWindowState(%1) dummy_p1@raylibhsp=%1:__rl_ClearWindowState@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_ClearWindowState@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_flags,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rl_ToggleFullscreen "ToggleFullscreen"
#deffunc local __rl_ToggleFullscreen local return_value
#define global rl_ToggleFullscreen __rl_ToggleFullscreen@raylibhsp
callfuncex_func _rl_ToggleFullscreen@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_MaximizeWindow "MaximizeWindow"
#deffunc local __rl_MaximizeWindow local return_value
#define global rl_MaximizeWindow __rl_MaximizeWindow@raylibhsp
callfuncex_func _rl_MaximizeWindow@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_MinimizeWindow "MinimizeWindow"
#deffunc local __rl_MinimizeWindow local return_value
#define global rl_MinimizeWindow __rl_MinimizeWindow@raylibhsp
callfuncex_func _rl_MinimizeWindow@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_RestoreWindow "RestoreWindow"
#deffunc local __rl_RestoreWindow local return_value
#define global rl_RestoreWindow __rl_RestoreWindow@raylibhsp
callfuncex_func _rl_RestoreWindow@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_SetWindowIcon "SetWindowIcon"
#deffunc local __rl_SetWindowIcon var p_image,local return_value
#define global rl_SetWindowIcon(%1) __rl_SetWindowIcon@raylibhsp %1
callfuncex_func _rl_SetWindowIcon@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_image,struct_gettotal(rl_Image)*1
callfuncex_call return_value
return return_value

#func _rl_SetWindowIcons "SetWindowIcons"
#deffunc local __rl_SetWindowIcons var p_images,var p_count,local return_value
#define global rl_SetWindowIcons(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_SetWindowIcons@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_SetWindowIcons@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_images,struct_typesize(pointer)*1
callfuncex_p_value p_count,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_SetWindowTitle "SetWindowTitle"
#deffunc local __rl_SetWindowTitle var p_title,local return_value
#define global rl_SetWindowTitle(%1) dummy_p1@raylibhsp=%1:__rl_SetWindowTitle@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_SetWindowTitle@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_title,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_SetWindowPosition "SetWindowPosition"
#deffunc local __rl_SetWindowPosition var p_x,var p_y,local return_value
#define global rl_SetWindowPosition(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_SetWindowPosition@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_SetWindowPosition@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_x,struct_typesize(int)*1
callfuncex_p_value p_y,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_SetWindowMonitor "SetWindowMonitor"
#deffunc local __rl_SetWindowMonitor var p_monitor,local return_value
#define global rl_SetWindowMonitor(%1) dummy_p1@raylibhsp=%1:__rl_SetWindowMonitor@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_SetWindowMonitor@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_monitor,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_SetWindowMinSize "SetWindowMinSize"
#deffunc local __rl_SetWindowMinSize var p_width,var p_height,local return_value
#define global rl_SetWindowMinSize(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_SetWindowMinSize@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_SetWindowMinSize@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_SetWindowSize "SetWindowSize"
#deffunc local __rl_SetWindowSize var p_width,var p_height,local return_value
#define global rl_SetWindowSize(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_SetWindowSize@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_SetWindowSize@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_SetWindowOpacity "SetWindowOpacity"
#deffunc local __rl_SetWindowOpacity var p_opacity,local return_value
#define global rl_SetWindowOpacity(%1) dummy_p1@raylibhsp=%1:__rl_SetWindowOpacity@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_SetWindowOpacity@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_opacity,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_GetWindowHandle "GetWindowHandle"
#deffunc local __rl_GetWindowHandle var return_var,local return_value
#define global rl_GetWindowHandle(%1)  __rl_GetWindowHandle@raylibhsp %1
callfuncex_func _rl_GetWindowHandle@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_call return_var
return

#func _rl_GetScreenWidth "GetScreenWidth"
#deffunc local __rl_GetScreenWidth local return_value
#define global rl_GetScreenWidth __rl_GetScreenWidth@raylibhsp
callfuncex_func _rl_GetScreenWidth@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rl_GetScreenHeight "GetScreenHeight"
#deffunc local __rl_GetScreenHeight local return_value
#define global rl_GetScreenHeight __rl_GetScreenHeight@raylibhsp
callfuncex_func _rl_GetScreenHeight@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rl_GetRenderWidth "GetRenderWidth"
#deffunc local __rl_GetRenderWidth local return_value
#define global rl_GetRenderWidth __rl_GetRenderWidth@raylibhsp
callfuncex_func _rl_GetRenderWidth@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rl_GetRenderHeight "GetRenderHeight"
#deffunc local __rl_GetRenderHeight local return_value
#define global rl_GetRenderHeight __rl_GetRenderHeight@raylibhsp
callfuncex_func _rl_GetRenderHeight@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rl_GetMonitorCount "GetMonitorCount"
#deffunc local __rl_GetMonitorCount local return_value
#define global rl_GetMonitorCount __rl_GetMonitorCount@raylibhsp
callfuncex_func _rl_GetMonitorCount@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rl_GetCurrentMonitor "GetCurrentMonitor"
#deffunc local __rl_GetCurrentMonitor local return_value
#define global rl_GetCurrentMonitor __rl_GetCurrentMonitor@raylibhsp
callfuncex_func _rl_GetCurrentMonitor@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rl_GetMonitorPosition "GetMonitorPosition"
#deffunc local __rl_GetMonitorPosition var return_var,var p_monitor,local return_value
#define global rl_GetMonitorPosition(%1,%2) dummy_p2@raylibhsp=%2:__rl_GetMonitorPosition@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_GetMonitorPosition@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_monitor,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetMonitorWidth "GetMonitorWidth"
#deffunc local __rl_GetMonitorWidth var p_monitor,local return_value
#define global rl_GetMonitorWidth(%1) dummy_p1@raylibhsp=%1:__rl_GetMonitorWidth@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_GetMonitorWidth@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_monitor,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetMonitorHeight "GetMonitorHeight"
#deffunc local __rl_GetMonitorHeight var p_monitor,local return_value
#define global rl_GetMonitorHeight(%1) dummy_p1@raylibhsp=%1:__rl_GetMonitorHeight@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_GetMonitorHeight@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_monitor,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetMonitorPhysicalWidth "GetMonitorPhysicalWidth"
#deffunc local __rl_GetMonitorPhysicalWidth var p_monitor,local return_value
#define global rl_GetMonitorPhysicalWidth(%1) dummy_p1@raylibhsp=%1:__rl_GetMonitorPhysicalWidth@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_GetMonitorPhysicalWidth@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_monitor,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetMonitorPhysicalHeight "GetMonitorPhysicalHeight"
#deffunc local __rl_GetMonitorPhysicalHeight var p_monitor,local return_value
#define global rl_GetMonitorPhysicalHeight(%1) dummy_p1@raylibhsp=%1:__rl_GetMonitorPhysicalHeight@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_GetMonitorPhysicalHeight@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_monitor,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetMonitorRefreshRate "GetMonitorRefreshRate"
#deffunc local __rl_GetMonitorRefreshRate var p_monitor,local return_value
#define global rl_GetMonitorRefreshRate(%1) dummy_p1@raylibhsp=%1:__rl_GetMonitorRefreshRate@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_GetMonitorRefreshRate@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_monitor,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetWindowPosition "GetWindowPosition"
#deffunc local __rl_GetWindowPosition var return_var,local return_value
#define global rl_GetWindowPosition(%1)  __rl_GetWindowPosition@raylibhsp %1
callfuncex_func _rl_GetWindowPosition@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _rl_GetWindowScaleDPI "GetWindowScaleDPI"
#deffunc local __rl_GetWindowScaleDPI var return_var,local return_value
#define global rl_GetWindowScaleDPI(%1)  __rl_GetWindowScaleDPI@raylibhsp %1
callfuncex_func _rl_GetWindowScaleDPI@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _rl_GetMonitorName "GetMonitorName"
#deffunc local __rl_GetMonitorName var return_var,var p_monitor,local return_value
#define global rl_GetMonitorName(%1,%2) dummy_p2@raylibhsp=%2:__rl_GetMonitorName@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_GetMonitorName@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_monitor,struct_typesize(int)*1
callfuncex_call return_var
return

#func _rl_SetClipboardText "SetClipboardText"
#deffunc local __rl_SetClipboardText var p_text,local return_value
#define global rl_SetClipboardText(%1) dummy_p1@raylibhsp=%1:__rl_SetClipboardText@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_SetClipboardText@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_GetClipboardText "GetClipboardText"
#deffunc local __rl_GetClipboardText var return_var,local return_value
#define global rl_GetClipboardText(%1)  __rl_GetClipboardText@raylibhsp %1
callfuncex_func _rl_GetClipboardText@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_call return_var
return

#func _rl_EnableEventWaiting "EnableEventWaiting"
#deffunc local __rl_EnableEventWaiting local return_value
#define global rl_EnableEventWaiting __rl_EnableEventWaiting@raylibhsp
callfuncex_func _rl_EnableEventWaiting@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_DisableEventWaiting "DisableEventWaiting"
#deffunc local __rl_DisableEventWaiting local return_value
#define global rl_DisableEventWaiting __rl_DisableEventWaiting@raylibhsp
callfuncex_func _rl_DisableEventWaiting@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_SwapScreenBuffer "SwapScreenBuffer"
#deffunc local __rl_SwapScreenBuffer local return_value
#define global rl_SwapScreenBuffer __rl_SwapScreenBuffer@raylibhsp
callfuncex_func _rl_SwapScreenBuffer@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_PollInputEvents "PollInputEvents"
#deffunc local __rl_PollInputEvents local return_value
#define global rl_PollInputEvents __rl_PollInputEvents@raylibhsp
callfuncex_func _rl_PollInputEvents@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_WaitTime "WaitTime"
#deffunc local __rl_WaitTime var p_seconds,local return_value
#define global rl_WaitTime(%1) dummy_p1@raylibhsp=%1:__rl_WaitTime@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_WaitTime@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_seconds,struct_typesize(double)*1
callfuncex_call return_value
return return_value

#func _rl_ShowCursor "ShowCursor"
#deffunc local __rl_ShowCursor local return_value
#define global rl_ShowCursor __rl_ShowCursor@raylibhsp
callfuncex_func _rl_ShowCursor@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_HideCursor "HideCursor"
#deffunc local __rl_HideCursor local return_value
#define global rl_HideCursor __rl_HideCursor@raylibhsp
callfuncex_func _rl_HideCursor@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_IsCursorHidden "IsCursorHidden"
#deffunc local __rl_IsCursorHidden local return_value
#define global rl_IsCursorHidden __rl_IsCursorHidden@raylibhsp
callfuncex_func _rl_IsCursorHidden@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_call return_value
return return_value

#func _rl_EnableCursor "EnableCursor"
#deffunc local __rl_EnableCursor local return_value
#define global rl_EnableCursor __rl_EnableCursor@raylibhsp
callfuncex_func _rl_EnableCursor@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_DisableCursor "DisableCursor"
#deffunc local __rl_DisableCursor local return_value
#define global rl_DisableCursor __rl_DisableCursor@raylibhsp
callfuncex_func _rl_DisableCursor@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_IsCursorOnScreen "IsCursorOnScreen"
#deffunc local __rl_IsCursorOnScreen local return_value
#define global rl_IsCursorOnScreen __rl_IsCursorOnScreen@raylibhsp
callfuncex_func _rl_IsCursorOnScreen@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_call return_value
return return_value

#func _rl_ClearBackground "ClearBackground"
#deffunc local __rl_ClearBackground var p_color,local return_value
#define global rl_ClearBackground(%1) __rl_ClearBackground@raylibhsp %1
callfuncex_func _rl_ClearBackground@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_BeginDrawing "BeginDrawing"
#deffunc local __rl_BeginDrawing local return_value
#define global rl_BeginDrawing __rl_BeginDrawing@raylibhsp
callfuncex_func _rl_BeginDrawing@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_EndDrawing "EndDrawing"
#deffunc local __rl_EndDrawing local return_value
#define global rl_EndDrawing __rl_EndDrawing@raylibhsp
callfuncex_func _rl_EndDrawing@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_BeginMode2D "BeginMode2D"
#deffunc local __rl_BeginMode2D var p_camera,local return_value
#define global rl_BeginMode2D(%1) __rl_BeginMode2D@raylibhsp %1
callfuncex_func _rl_BeginMode2D@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_camera,struct_gettotal(rl_Camera2D)*1
callfuncex_call return_value
return return_value

#func _rl_EndMode2D "EndMode2D"
#deffunc local __rl_EndMode2D local return_value
#define global rl_EndMode2D __rl_EndMode2D@raylibhsp
callfuncex_func _rl_EndMode2D@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_BeginMode3D "BeginMode3D"
#deffunc local __rl_BeginMode3D var p_camera,local return_value
#define global rl_BeginMode3D(%1) __rl_BeginMode3D@raylibhsp %1
callfuncex_func _rl_BeginMode3D@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_camera,struct_gettotal(rl_Camera3D)*1
callfuncex_call return_value
return return_value

#func _rl_EndMode3D "EndMode3D"
#deffunc local __rl_EndMode3D local return_value
#define global rl_EndMode3D __rl_EndMode3D@raylibhsp
callfuncex_func _rl_EndMode3D@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_BeginTextureMode "BeginTextureMode"
#deffunc local __rl_BeginTextureMode var p_target,local return_value
#define global rl_BeginTextureMode(%1) __rl_BeginTextureMode@raylibhsp %1
callfuncex_func _rl_BeginTextureMode@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_target,struct_gettotal(rl_RenderTexture2D)*1
callfuncex_call return_value
return return_value

#func _rl_EndTextureMode "EndTextureMode"
#deffunc local __rl_EndTextureMode local return_value
#define global rl_EndTextureMode __rl_EndTextureMode@raylibhsp
callfuncex_func _rl_EndTextureMode@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_BeginShaderMode "BeginShaderMode"
#deffunc local __rl_BeginShaderMode var p_shader,local return_value
#define global rl_BeginShaderMode(%1) __rl_BeginShaderMode@raylibhsp %1
callfuncex_func _rl_BeginShaderMode@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_shader,struct_gettotal(rl_Shader)*1
callfuncex_call return_value
return return_value

#func _rl_EndShaderMode "EndShaderMode"
#deffunc local __rl_EndShaderMode local return_value
#define global rl_EndShaderMode __rl_EndShaderMode@raylibhsp
callfuncex_func _rl_EndShaderMode@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_BeginBlendMode "BeginBlendMode"
#deffunc local __rl_BeginBlendMode var p_mode,local return_value
#define global rl_BeginBlendMode(%1) dummy_p1@raylibhsp=%1:__rl_BeginBlendMode@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_BeginBlendMode@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_mode,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_EndBlendMode "EndBlendMode"
#deffunc local __rl_EndBlendMode local return_value
#define global rl_EndBlendMode __rl_EndBlendMode@raylibhsp
callfuncex_func _rl_EndBlendMode@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_BeginScissorMode "BeginScissorMode"
#deffunc local __rl_BeginScissorMode var p_x,var p_y,var p_width,var p_height,local return_value
#define global rl_BeginScissorMode(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_BeginScissorMode@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_BeginScissorMode@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_x,struct_typesize(int)*1
callfuncex_p_value p_y,struct_typesize(int)*1
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_EndScissorMode "EndScissorMode"
#deffunc local __rl_EndScissorMode local return_value
#define global rl_EndScissorMode __rl_EndScissorMode@raylibhsp
callfuncex_func _rl_EndScissorMode@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_BeginVrStereoMode "BeginVrStereoMode"
#deffunc local __rl_BeginVrStereoMode var p_config,local return_value
#define global rl_BeginVrStereoMode(%1) __rl_BeginVrStereoMode@raylibhsp %1
callfuncex_func _rl_BeginVrStereoMode@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_config,struct_gettotal(rl_VrStereoConfig)*1
callfuncex_call return_value
return return_value

#func _rl_EndVrStereoMode "EndVrStereoMode"
#deffunc local __rl_EndVrStereoMode local return_value
#define global rl_EndVrStereoMode __rl_EndVrStereoMode@raylibhsp
callfuncex_func _rl_EndVrStereoMode@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_LoadVrStereoConfig "LoadVrStereoConfig"
#deffunc local __rl_LoadVrStereoConfig var return_var,var p_device,local return_value
#define global rl_LoadVrStereoConfig(%1,%2) __rl_LoadVrStereoConfig@raylibhsp %1,%2
callfuncex_func _rl_LoadVrStereoConfig@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_VrStereoConfig)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_device,struct_gettotal(rl_VrDeviceInfo)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadVrStereoConfig "UnloadVrStereoConfig"
#deffunc local __rl_UnloadVrStereoConfig var p_config,local return_value
#define global rl_UnloadVrStereoConfig(%1) __rl_UnloadVrStereoConfig@raylibhsp %1
callfuncex_func _rl_UnloadVrStereoConfig@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_config,struct_gettotal(rl_VrStereoConfig)*1
callfuncex_call return_value
return return_value

#func _rl_LoadShader "LoadShader"
#deffunc local __rl_LoadShader var return_var,var p_vsFileName,var p_fsFileName,local return_value
#define global rl_LoadShader(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_LoadShader@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_LoadShader@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Shader)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_vsFileName,struct_typesize(pointer)*1
callfuncex_p_value p_fsFileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_LoadShaderFromMemory "LoadShaderFromMemory"
#deffunc local __rl_LoadShaderFromMemory var return_var,var p_vsCode,var p_fsCode,local return_value
#define global rl_LoadShaderFromMemory(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_LoadShaderFromMemory@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_LoadShaderFromMemory@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Shader)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_vsCode,struct_typesize(pointer)*1
callfuncex_p_value p_fsCode,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_IsShaderReady "IsShaderReady"
#deffunc local __rl_IsShaderReady var p_shader,local return_value
#define global rl_IsShaderReady(%1) __rl_IsShaderReady@raylibhsp %1
callfuncex_func _rl_IsShaderReady@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_shader,struct_gettotal(rl_Shader)*1
callfuncex_call return_value
return return_value

#func _rl_GetShaderLocation "GetShaderLocation"
#deffunc local __rl_GetShaderLocation var p_shader,var p_uniformName,local return_value
#define global rl_GetShaderLocation(%1,%2) dummy_p2@raylibhsp=%2:__rl_GetShaderLocation@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_GetShaderLocation@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p p_shader,struct_gettotal(rl_Shader)*1
callfuncex_p_value p_uniformName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_GetShaderLocationAttrib "GetShaderLocationAttrib"
#deffunc local __rl_GetShaderLocationAttrib var p_shader,var p_attribName,local return_value
#define global rl_GetShaderLocationAttrib(%1,%2) dummy_p2@raylibhsp=%2:__rl_GetShaderLocationAttrib@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_GetShaderLocationAttrib@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p p_shader,struct_gettotal(rl_Shader)*1
callfuncex_p_value p_attribName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_SetShaderValue "SetShaderValue"
#deffunc local __rl_SetShaderValue var p_shader,var p_locIndex,var p_value,var p_uniformType,local return_value
#define global rl_SetShaderValue(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_SetShaderValue@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_SetShaderValue@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_shader,struct_gettotal(rl_Shader)*1
callfuncex_p_value p_locIndex,struct_typesize(int)*1
callfuncex_p_value p_value,struct_typesize(pointer)*1
callfuncex_p_value p_uniformType,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_SetShaderValueV "SetShaderValueV"
#deffunc local __rl_SetShaderValueV var p_shader,var p_locIndex,var p_value,var p_uniformType,var p_count,local return_value
#define global rl_SetShaderValueV(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_SetShaderValueV@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp
callfuncex_func _rl_SetShaderValueV@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_shader,struct_gettotal(rl_Shader)*1
callfuncex_p_value p_locIndex,struct_typesize(int)*1
callfuncex_p_value p_value,struct_typesize(pointer)*1
callfuncex_p_value p_uniformType,struct_typesize(int)*1
callfuncex_p_value p_count,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_SetShaderValueMatrix "SetShaderValueMatrix"
#deffunc local __rl_SetShaderValueMatrix var p_shader,var p_locIndex,var p_mat,local return_value
#define global rl_SetShaderValueMatrix(%1,%2,%3) dummy_p2@raylibhsp=%2:__rl_SetShaderValueMatrix@raylibhsp %1,dummy_p2@raylibhsp,%3
callfuncex_func _rl_SetShaderValueMatrix@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_shader,struct_gettotal(rl_Shader)*1
callfuncex_p_value p_locIndex,struct_typesize(int)*1
callfuncex_p p_mat,struct_gettotal(rl_Matrix)*1
callfuncex_call return_value
return return_value

#func _rl_SetShaderValueTexture "SetShaderValueTexture"
#deffunc local __rl_SetShaderValueTexture var p_shader,var p_locIndex,var p_texture,local return_value
#define global rl_SetShaderValueTexture(%1,%2,%3) dummy_p2@raylibhsp=%2:__rl_SetShaderValueTexture@raylibhsp %1,dummy_p2@raylibhsp,%3
callfuncex_func _rl_SetShaderValueTexture@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_shader,struct_gettotal(rl_Shader)*1
callfuncex_p_value p_locIndex,struct_typesize(int)*1
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadShader "UnloadShader"
#deffunc local __rl_UnloadShader var p_shader,local return_value
#define global rl_UnloadShader(%1) __rl_UnloadShader@raylibhsp %1
callfuncex_func _rl_UnloadShader@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_shader,struct_gettotal(rl_Shader)*1
callfuncex_call return_value
return return_value

#func _rl_GetMouseRay "GetMouseRay"
#deffunc local __rl_GetMouseRay var return_var,var p_mousePosition,var p_camera,local return_value
#define global rl_GetMouseRay(%1,%2,%3) __rl_GetMouseRay@raylibhsp %1,%2,%3
callfuncex_func _rl_GetMouseRay@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Ray)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_mousePosition,struct_gettotal(rl_Vector2)*1
callfuncex_p p_camera,struct_gettotal(rl_Camera)*1
callfuncex_call return_value
return return_value

#func _rl_GetCameraMatrix "GetCameraMatrix"
#deffunc local __rl_GetCameraMatrix var return_var,var p_camera,local return_value
#define global rl_GetCameraMatrix(%1,%2) __rl_GetCameraMatrix@raylibhsp %1,%2
callfuncex_func _rl_GetCameraMatrix@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_camera,struct_gettotal(rl_Camera)*1
callfuncex_call return_value
return return_value

#func _rl_GetCameraMatrix2D "GetCameraMatrix2D"
#deffunc local __rl_GetCameraMatrix2D var return_var,var p_camera,local return_value
#define global rl_GetCameraMatrix2D(%1,%2) __rl_GetCameraMatrix2D@raylibhsp %1,%2
callfuncex_func _rl_GetCameraMatrix2D@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_camera,struct_gettotal(rl_Camera2D)*1
callfuncex_call return_value
return return_value

#func _rl_GetWorldToScreen "GetWorldToScreen"
#deffunc local __rl_GetWorldToScreen var return_var,var p_position,var p_camera,local return_value
#define global rl_GetWorldToScreen(%1,%2,%3) __rl_GetWorldToScreen@raylibhsp %1,%2,%3
callfuncex_func _rl_GetWorldToScreen@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_position,struct_gettotal(rl_Vector3)*1
callfuncex_p p_camera,struct_gettotal(rl_Camera)*1
callfuncex_call return_value
return return_value

#func _rl_GetScreenToWorld2D "GetScreenToWorld2D"
#deffunc local __rl_GetScreenToWorld2D var return_var,var p_position,var p_camera,local return_value
#define global rl_GetScreenToWorld2D(%1,%2,%3) __rl_GetScreenToWorld2D@raylibhsp %1,%2,%3
callfuncex_func _rl_GetScreenToWorld2D@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_position,struct_gettotal(rl_Vector2)*1
callfuncex_p p_camera,struct_gettotal(rl_Camera2D)*1
callfuncex_call return_value
return return_value

#func _rl_GetWorldToScreenEx "GetWorldToScreenEx"
#deffunc local __rl_GetWorldToScreenEx var return_var,var p_position,var p_camera,var p_width,var p_height,local return_value
#define global rl_GetWorldToScreenEx(%1,%2,%3,%4,%5) dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_GetWorldToScreenEx@raylibhsp %1,%2,%3,dummy_p4@raylibhsp,dummy_p5@raylibhsp
callfuncex_func _rl_GetWorldToScreenEx@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_position,struct_gettotal(rl_Vector3)*1
callfuncex_p p_camera,struct_gettotal(rl_Camera)*1
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetWorldToScreen2D "GetWorldToScreen2D"
#deffunc local __rl_GetWorldToScreen2D var return_var,var p_position,var p_camera,local return_value
#define global rl_GetWorldToScreen2D(%1,%2,%3) __rl_GetWorldToScreen2D@raylibhsp %1,%2,%3
callfuncex_func _rl_GetWorldToScreen2D@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_position,struct_gettotal(rl_Vector2)*1
callfuncex_p p_camera,struct_gettotal(rl_Camera2D)*1
callfuncex_call return_value
return return_value

#func _rl_SetTargetFPS "SetTargetFPS"
#deffunc local __rl_SetTargetFPS var p_fps,local return_value
#define global rl_SetTargetFPS(%1) dummy_p1@raylibhsp=%1:__rl_SetTargetFPS@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_SetTargetFPS@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_fps,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetFPS "GetFPS"
#deffunc local __rl_GetFPS local return_value
#define global rl_GetFPS __rl_GetFPS@raylibhsp
callfuncex_func _rl_GetFPS@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rl_GetFrameTime "GetFrameTime"
#deffunc local __rl_GetFrameTime local return_value
#define global rl_GetFrameTime __rl_GetFrameTime@raylibhsp
callfuncex_func _rl_GetFrameTime@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_call return_value
return return_value

#func _rl_GetTime "GetTime"
#deffunc local __rl_GetTime local return_value
#define global rl_GetTime __rl_GetTime@raylibhsp
callfuncex_func _rl_GetTime@raylibhsp,CALLFUNCEX_RETURN_DOUBLE,struct_typesize(double)
callfuncex_call return_value
return return_value

#func _rl_GetRandomValue "GetRandomValue"
#deffunc local __rl_GetRandomValue var p_min,var p_max,local return_value
#define global rl_GetRandomValue(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_GetRandomValue@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_GetRandomValue@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_min,struct_typesize(int)*1
callfuncex_p_value p_max,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_SetRandomSeed "SetRandomSeed"
#deffunc local __rl_SetRandomSeed var p_seed,local return_value
#define global rl_SetRandomSeed(%1) dummy_p1@raylibhsp=%1:__rl_SetRandomSeed@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_SetRandomSeed@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_seed,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rl_TakeScreenshot "TakeScreenshot"
#deffunc local __rl_TakeScreenshot var p_fileName,local return_value
#define global rl_TakeScreenshot(%1) dummy_p1@raylibhsp=%1:__rl_TakeScreenshot@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_TakeScreenshot@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_SetConfigFlags "SetConfigFlags"
#deffunc local __rl_SetConfigFlags var p_flags,local return_value
#define global rl_SetConfigFlags(%1) dummy_p1@raylibhsp=%1:__rl_SetConfigFlags@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_SetConfigFlags@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_flags,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rl_TraceLog "TraceLog"
#deffunc local __rl_TraceLog var p_logLevel,var p_text,var p_args,local return_value
#define global rl_TraceLog(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_TraceLog@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_TraceLog@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_logLevel,struct_typesize(int)*1
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_args,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_SetTraceLogLevel "SetTraceLogLevel"
#deffunc local __rl_SetTraceLogLevel var p_logLevel,local return_value
#define global rl_SetTraceLogLevel(%1) dummy_p1@raylibhsp=%1:__rl_SetTraceLogLevel@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_SetTraceLogLevel@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_logLevel,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_MemAlloc "MemAlloc"
#deffunc local __rl_MemAlloc var return_var,var p_size,local return_value
#define global rl_MemAlloc(%1,%2) dummy_p2@raylibhsp=%2:__rl_MemAlloc@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_MemAlloc@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_size,struct_typesize(unsigned_int)*1
callfuncex_call return_var
return

#func _rl_MemRealloc "MemRealloc"
#deffunc local __rl_MemRealloc var return_var,var p_ptr,var p_size,local return_value
#define global rl_MemRealloc(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_MemRealloc@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_MemRealloc@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_ptr,struct_typesize(pointer)*1
callfuncex_p_value p_size,struct_typesize(unsigned_int)*1
callfuncex_call return_var
return

#func _rl_MemFree "MemFree"
#deffunc local __rl_MemFree var p_ptr,local return_value
#define global rl_MemFree(%1) dummy_p1@raylibhsp=%1:__rl_MemFree@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_MemFree@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_ptr,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_OpenURL "OpenURL"
#deffunc local __rl_OpenURL var p_url,local return_value
#define global rl_OpenURL(%1) dummy_p1@raylibhsp=%1:__rl_OpenURL@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_OpenURL@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_url,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_SetTraceLogCallback "SetTraceLogCallback"
#deffunc local __rl_SetTraceLogCallback var p_callback,local return_value
#define global rl_SetTraceLogCallback(%1) __rl_SetTraceLogCallback@raylibhsp %1
callfuncex_func _rl_SetTraceLogCallback@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_callback,struct_gettotal(rl_TraceLogCallback)*1
callfuncex_call return_value
return return_value

#func _rl_SetLoadFileDataCallback "SetLoadFileDataCallback"
#deffunc local __rl_SetLoadFileDataCallback var p_callback,local return_value
#define global rl_SetLoadFileDataCallback(%1) __rl_SetLoadFileDataCallback@raylibhsp %1
callfuncex_func _rl_SetLoadFileDataCallback@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_callback,struct_gettotal(rl_LoadFileDataCallback)*1
callfuncex_call return_value
return return_value

#func _rl_SetSaveFileDataCallback "SetSaveFileDataCallback"
#deffunc local __rl_SetSaveFileDataCallback var p_callback,local return_value
#define global rl_SetSaveFileDataCallback(%1) __rl_SetSaveFileDataCallback@raylibhsp %1
callfuncex_func _rl_SetSaveFileDataCallback@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_callback,struct_gettotal(rl_SaveFileDataCallback)*1
callfuncex_call return_value
return return_value

#func _rl_SetLoadFileTextCallback "SetLoadFileTextCallback"
#deffunc local __rl_SetLoadFileTextCallback var p_callback,local return_value
#define global rl_SetLoadFileTextCallback(%1) __rl_SetLoadFileTextCallback@raylibhsp %1
callfuncex_func _rl_SetLoadFileTextCallback@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_callback,struct_gettotal(rl_LoadFileTextCallback)*1
callfuncex_call return_value
return return_value

#func _rl_SetSaveFileTextCallback "SetSaveFileTextCallback"
#deffunc local __rl_SetSaveFileTextCallback var p_callback,local return_value
#define global rl_SetSaveFileTextCallback(%1) __rl_SetSaveFileTextCallback@raylibhsp %1
callfuncex_func _rl_SetSaveFileTextCallback@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_callback,struct_gettotal(rl_SaveFileTextCallback)*1
callfuncex_call return_value
return return_value

#func _rl_LoadFileData "LoadFileData"
#deffunc local __rl_LoadFileData var return_var,var p_fileName,var p_bytesRead,local return_value
#define global rl_LoadFileData(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_LoadFileData@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_LoadFileData@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_p_value p_bytesRead,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_UnloadFileData "UnloadFileData"
#deffunc local __rl_UnloadFileData var p_data,local return_value
#define global rl_UnloadFileData(%1) dummy_p1@raylibhsp=%1:__rl_UnloadFileData@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_UnloadFileData@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_data,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_SaveFileData "SaveFileData"
#deffunc local __rl_SaveFileData var p_fileName,var p_data,var p_bytesToWrite,local return_value
#define global rl_SaveFileData(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_SaveFileData@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_SaveFileData@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_p_value p_data,struct_typesize(pointer)*1
callfuncex_p_value p_bytesToWrite,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rl_ExportDataAsCode "ExportDataAsCode"
#deffunc local __rl_ExportDataAsCode var p_data,var p_size,var p_fileName,local return_value
#define global rl_ExportDataAsCode(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_ExportDataAsCode@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_ExportDataAsCode@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_data,struct_typesize(pointer)*1
callfuncex_p_value p_size,struct_typesize(unsigned_int)*1
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_LoadFileText "LoadFileText"
#deffunc local __rl_LoadFileText var return_var,var p_fileName,local return_value
#define global rl_LoadFileText(%1,%2) dummy_p2@raylibhsp=%2:__rl_LoadFileText@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_LoadFileText@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_UnloadFileText "UnloadFileText"
#deffunc local __rl_UnloadFileText var p_text,local return_value
#define global rl_UnloadFileText(%1) dummy_p1@raylibhsp=%1:__rl_UnloadFileText@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_UnloadFileText@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_SaveFileText "SaveFileText"
#deffunc local __rl_SaveFileText var p_fileName,var p_text,local return_value
#define global rl_SaveFileText(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_SaveFileText@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_SaveFileText@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_FileExists "FileExists"
#deffunc local __rl_FileExists var p_fileName,local return_value
#define global rl_FileExists(%1) dummy_p1@raylibhsp=%1:__rl_FileExists@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_FileExists@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_DirectoryExists "DirectoryExists"
#deffunc local __rl_DirectoryExists var p_dirPath,local return_value
#define global rl_DirectoryExists(%1) dummy_p1@raylibhsp=%1:__rl_DirectoryExists@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_DirectoryExists@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_dirPath,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_IsFileExtension "IsFileExtension"
#deffunc local __rl_IsFileExtension var p_fileName,var p_ext,local return_value
#define global rl_IsFileExtension(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_IsFileExtension@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_IsFileExtension@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_p_value p_ext,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_GetFileLength "GetFileLength"
#deffunc local __rl_GetFileLength var p_fileName,local return_value
#define global rl_GetFileLength(%1) dummy_p1@raylibhsp=%1:__rl_GetFileLength@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_GetFileLength@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_GetFileExtension "GetFileExtension"
#deffunc local __rl_GetFileExtension var return_var,var p_fileName,local return_value
#define global rl_GetFileExtension(%1,%2) dummy_p2@raylibhsp=%2:__rl_GetFileExtension@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_GetFileExtension@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_GetFileName "GetFileName"
#deffunc local __rl_GetFileName var return_var,var p_filePath,local return_value
#define global rl_GetFileName(%1,%2) dummy_p2@raylibhsp=%2:__rl_GetFileName@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_GetFileName@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_filePath,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_GetFileNameWithoutExt "GetFileNameWithoutExt"
#deffunc local __rl_GetFileNameWithoutExt var return_var,var p_filePath,local return_value
#define global rl_GetFileNameWithoutExt(%1,%2) dummy_p2@raylibhsp=%2:__rl_GetFileNameWithoutExt@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_GetFileNameWithoutExt@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_filePath,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_GetDirectoryPath "GetDirectoryPath"
#deffunc local __rl_GetDirectoryPath var return_var,var p_filePath,local return_value
#define global rl_GetDirectoryPath(%1,%2) dummy_p2@raylibhsp=%2:__rl_GetDirectoryPath@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_GetDirectoryPath@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_filePath,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_GetPrevDirectoryPath "GetPrevDirectoryPath"
#deffunc local __rl_GetPrevDirectoryPath var return_var,var p_dirPath,local return_value
#define global rl_GetPrevDirectoryPath(%1,%2) dummy_p2@raylibhsp=%2:__rl_GetPrevDirectoryPath@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_GetPrevDirectoryPath@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_dirPath,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_GetWorkingDirectory "GetWorkingDirectory"
#deffunc local __rl_GetWorkingDirectory var return_var,local return_value
#define global rl_GetWorkingDirectory(%1)  __rl_GetWorkingDirectory@raylibhsp %1
callfuncex_func _rl_GetWorkingDirectory@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_call return_var
return

#func _rl_GetApplicationDirectory "GetApplicationDirectory"
#deffunc local __rl_GetApplicationDirectory var return_var,local return_value
#define global rl_GetApplicationDirectory(%1)  __rl_GetApplicationDirectory@raylibhsp %1
callfuncex_func _rl_GetApplicationDirectory@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_call return_var
return

#func _rl_ChangeDirectory "ChangeDirectory"
#deffunc local __rl_ChangeDirectory var p_dir,local return_value
#define global rl_ChangeDirectory(%1) dummy_p1@raylibhsp=%1:__rl_ChangeDirectory@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_ChangeDirectory@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_dir,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_IsPathFile "IsPathFile"
#deffunc local __rl_IsPathFile var p_path,local return_value
#define global rl_IsPathFile(%1) dummy_p1@raylibhsp=%1:__rl_IsPathFile@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_IsPathFile@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_path,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_LoadDirectoryFiles "LoadDirectoryFiles"
#deffunc local __rl_LoadDirectoryFiles var return_var,var p_dirPath,local return_value
#define global rl_LoadDirectoryFiles(%1,%2) dummy_p2@raylibhsp=%2:__rl_LoadDirectoryFiles@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_LoadDirectoryFiles@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_FilePathList)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_dirPath,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_LoadDirectoryFilesEx "LoadDirectoryFilesEx"
#deffunc local __rl_LoadDirectoryFilesEx var return_var,var p_basePath,var p_filter,var p_scanSubdirs,local return_value
#define global rl_LoadDirectoryFilesEx(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_LoadDirectoryFilesEx@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_LoadDirectoryFilesEx@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_FilePathList)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_basePath,struct_typesize(pointer)*1
callfuncex_p_value p_filter,struct_typesize(pointer)*1
callfuncex_p_value p_scanSubdirs,struct_typesize(bool)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadDirectoryFiles "UnloadDirectoryFiles"
#deffunc local __rl_UnloadDirectoryFiles var p_files,local return_value
#define global rl_UnloadDirectoryFiles(%1) __rl_UnloadDirectoryFiles@raylibhsp %1
callfuncex_func _rl_UnloadDirectoryFiles@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_files,struct_gettotal(rl_FilePathList)*1
callfuncex_call return_value
return return_value

#func _rl_IsFileDropped "IsFileDropped"
#deffunc local __rl_IsFileDropped local return_value
#define global rl_IsFileDropped __rl_IsFileDropped@raylibhsp
callfuncex_func _rl_IsFileDropped@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_call return_value
return return_value

#func _rl_LoadDroppedFiles "LoadDroppedFiles"
#deffunc local __rl_LoadDroppedFiles var return_var,local return_value
#define global rl_LoadDroppedFiles(%1)  __rl_LoadDroppedFiles@raylibhsp %1
callfuncex_func _rl_LoadDroppedFiles@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_FilePathList)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _rl_UnloadDroppedFiles "UnloadDroppedFiles"
#deffunc local __rl_UnloadDroppedFiles var p_files,local return_value
#define global rl_UnloadDroppedFiles(%1) __rl_UnloadDroppedFiles@raylibhsp %1
callfuncex_func _rl_UnloadDroppedFiles@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_files,struct_gettotal(rl_FilePathList)*1
callfuncex_call return_value
return return_value

#func _rl_GetFileModTime "GetFileModTime"
#deffunc local __rl_GetFileModTime var p_fileName,local return_value
#define global rl_GetFileModTime(%1) dummy_p1@raylibhsp=%1:__rl_GetFileModTime@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_GetFileModTime@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(long)
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_CompressData "CompressData"
#deffunc local __rl_CompressData var return_var,var p_data,var p_dataSize,var p_compDataSize,local return_value
#define global rl_CompressData(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_CompressData@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_CompressData@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_data,struct_typesize(pointer)*1
callfuncex_p_value p_dataSize,struct_typesize(int)*1
callfuncex_p_value p_compDataSize,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_DecompressData "DecompressData"
#deffunc local __rl_DecompressData var return_var,var p_compData,var p_compDataSize,var p_dataSize,local return_value
#define global rl_DecompressData(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DecompressData@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_DecompressData@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_compData,struct_typesize(pointer)*1
callfuncex_p_value p_compDataSize,struct_typesize(int)*1
callfuncex_p_value p_dataSize,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_EncodeDataBase64 "EncodeDataBase64"
#deffunc local __rl_EncodeDataBase64 var return_var,var p_data,var p_dataSize,var p_outputSize,local return_value
#define global rl_EncodeDataBase64(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_EncodeDataBase64@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_EncodeDataBase64@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_data,struct_typesize(pointer)*1
callfuncex_p_value p_dataSize,struct_typesize(int)*1
callfuncex_p_value p_outputSize,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_DecodeDataBase64 "DecodeDataBase64"
#deffunc local __rl_DecodeDataBase64 var return_var,var p_data,var p_outputSize,local return_value
#define global rl_DecodeDataBase64(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_DecodeDataBase64@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_DecodeDataBase64@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_data,struct_typesize(pointer)*1
callfuncex_p_value p_outputSize,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_IsKeyPressed "IsKeyPressed"
#deffunc local __rl_IsKeyPressed var p_key,local return_value
#define global rl_IsKeyPressed(%1) dummy_p1@raylibhsp=%1:__rl_IsKeyPressed@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_IsKeyPressed@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_key,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_IsKeyDown "IsKeyDown"
#deffunc local __rl_IsKeyDown var p_key,local return_value
#define global rl_IsKeyDown(%1) dummy_p1@raylibhsp=%1:__rl_IsKeyDown@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_IsKeyDown@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_key,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_IsKeyReleased "IsKeyReleased"
#deffunc local __rl_IsKeyReleased var p_key,local return_value
#define global rl_IsKeyReleased(%1) dummy_p1@raylibhsp=%1:__rl_IsKeyReleased@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_IsKeyReleased@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_key,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_IsKeyUp "IsKeyUp"
#deffunc local __rl_IsKeyUp var p_key,local return_value
#define global rl_IsKeyUp(%1) dummy_p1@raylibhsp=%1:__rl_IsKeyUp@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_IsKeyUp@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_key,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_SetExitKey "SetExitKey"
#deffunc local __rl_SetExitKey var p_key,local return_value
#define global rl_SetExitKey(%1) dummy_p1@raylibhsp=%1:__rl_SetExitKey@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_SetExitKey@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_key,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetKeyPressed "GetKeyPressed"
#deffunc local __rl_GetKeyPressed local return_value
#define global rl_GetKeyPressed __rl_GetKeyPressed@raylibhsp
callfuncex_func _rl_GetKeyPressed@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rl_GetCharPressed "GetCharPressed"
#deffunc local __rl_GetCharPressed local return_value
#define global rl_GetCharPressed __rl_GetCharPressed@raylibhsp
callfuncex_func _rl_GetCharPressed@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rl_IsGamepadAvailable "IsGamepadAvailable"
#deffunc local __rl_IsGamepadAvailable var p_gamepad,local return_value
#define global rl_IsGamepadAvailable(%1) dummy_p1@raylibhsp=%1:__rl_IsGamepadAvailable@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_IsGamepadAvailable@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_gamepad,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetGamepadName "GetGamepadName"
#deffunc local __rl_GetGamepadName var return_var,var p_gamepad,local return_value
#define global rl_GetGamepadName(%1,%2) dummy_p2@raylibhsp=%2:__rl_GetGamepadName@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_GetGamepadName@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_gamepad,struct_typesize(int)*1
callfuncex_call return_var
return

#func _rl_IsGamepadButtonPressed "IsGamepadButtonPressed"
#deffunc local __rl_IsGamepadButtonPressed var p_gamepad,var p_button,local return_value
#define global rl_IsGamepadButtonPressed(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_IsGamepadButtonPressed@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_IsGamepadButtonPressed@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_gamepad,struct_typesize(int)*1
callfuncex_p_value p_button,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_IsGamepadButtonDown "IsGamepadButtonDown"
#deffunc local __rl_IsGamepadButtonDown var p_gamepad,var p_button,local return_value
#define global rl_IsGamepadButtonDown(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_IsGamepadButtonDown@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_IsGamepadButtonDown@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_gamepad,struct_typesize(int)*1
callfuncex_p_value p_button,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_IsGamepadButtonReleased "IsGamepadButtonReleased"
#deffunc local __rl_IsGamepadButtonReleased var p_gamepad,var p_button,local return_value
#define global rl_IsGamepadButtonReleased(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_IsGamepadButtonReleased@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_IsGamepadButtonReleased@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_gamepad,struct_typesize(int)*1
callfuncex_p_value p_button,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_IsGamepadButtonUp "IsGamepadButtonUp"
#deffunc local __rl_IsGamepadButtonUp var p_gamepad,var p_button,local return_value
#define global rl_IsGamepadButtonUp(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_IsGamepadButtonUp@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_IsGamepadButtonUp@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_gamepad,struct_typesize(int)*1
callfuncex_p_value p_button,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetGamepadButtonPressed "GetGamepadButtonPressed"
#deffunc local __rl_GetGamepadButtonPressed local return_value
#define global rl_GetGamepadButtonPressed __rl_GetGamepadButtonPressed@raylibhsp
callfuncex_func _rl_GetGamepadButtonPressed@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rl_GetGamepadAxisCount "GetGamepadAxisCount"
#deffunc local __rl_GetGamepadAxisCount var p_gamepad,local return_value
#define global rl_GetGamepadAxisCount(%1) dummy_p1@raylibhsp=%1:__rl_GetGamepadAxisCount@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_GetGamepadAxisCount@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_gamepad,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetGamepadAxisMovement "GetGamepadAxisMovement"
#deffunc local __rl_GetGamepadAxisMovement var p_gamepad,var p_axis,local return_value
#define global rl_GetGamepadAxisMovement(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_GetGamepadAxisMovement@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_GetGamepadAxisMovement@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p_value p_gamepad,struct_typesize(int)*1
callfuncex_p_value p_axis,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_SetGamepadMappings "SetGamepadMappings"
#deffunc local __rl_SetGamepadMappings var p_mappings,local return_value
#define global rl_SetGamepadMappings(%1) dummy_p1@raylibhsp=%1:__rl_SetGamepadMappings@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_SetGamepadMappings@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_mappings,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_IsMouseButtonPressed "IsMouseButtonPressed"
#deffunc local __rl_IsMouseButtonPressed var p_button,local return_value
#define global rl_IsMouseButtonPressed(%1) dummy_p1@raylibhsp=%1:__rl_IsMouseButtonPressed@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_IsMouseButtonPressed@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_button,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_IsMouseButtonDown "IsMouseButtonDown"
#deffunc local __rl_IsMouseButtonDown var p_button,local return_value
#define global rl_IsMouseButtonDown(%1) dummy_p1@raylibhsp=%1:__rl_IsMouseButtonDown@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_IsMouseButtonDown@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_button,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_IsMouseButtonReleased "IsMouseButtonReleased"
#deffunc local __rl_IsMouseButtonReleased var p_button,local return_value
#define global rl_IsMouseButtonReleased(%1) dummy_p1@raylibhsp=%1:__rl_IsMouseButtonReleased@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_IsMouseButtonReleased@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_button,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_IsMouseButtonUp "IsMouseButtonUp"
#deffunc local __rl_IsMouseButtonUp var p_button,local return_value
#define global rl_IsMouseButtonUp(%1) dummy_p1@raylibhsp=%1:__rl_IsMouseButtonUp@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_IsMouseButtonUp@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_button,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetMouseX "GetMouseX"
#deffunc local __rl_GetMouseX local return_value
#define global rl_GetMouseX __rl_GetMouseX@raylibhsp
callfuncex_func _rl_GetMouseX@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rl_GetMouseY "GetMouseY"
#deffunc local __rl_GetMouseY local return_value
#define global rl_GetMouseY __rl_GetMouseY@raylibhsp
callfuncex_func _rl_GetMouseY@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rl_GetMousePosition "GetMousePosition"
#deffunc local __rl_GetMousePosition var return_var,local return_value
#define global rl_GetMousePosition(%1)  __rl_GetMousePosition@raylibhsp %1
callfuncex_func _rl_GetMousePosition@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _rl_GetMouseDelta "GetMouseDelta"
#deffunc local __rl_GetMouseDelta var return_var,local return_value
#define global rl_GetMouseDelta(%1)  __rl_GetMouseDelta@raylibhsp %1
callfuncex_func _rl_GetMouseDelta@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _rl_SetMousePosition "SetMousePosition"
#deffunc local __rl_SetMousePosition var p_x,var p_y,local return_value
#define global rl_SetMousePosition(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_SetMousePosition@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_SetMousePosition@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_x,struct_typesize(int)*1
callfuncex_p_value p_y,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_SetMouseOffset "SetMouseOffset"
#deffunc local __rl_SetMouseOffset var p_offsetX,var p_offsetY,local return_value
#define global rl_SetMouseOffset(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_SetMouseOffset@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_SetMouseOffset@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_offsetX,struct_typesize(int)*1
callfuncex_p_value p_offsetY,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_SetMouseScale "SetMouseScale"
#deffunc local __rl_SetMouseScale var p_scaleX,var p_scaleY,local return_value
#define global rl_SetMouseScale(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_SetMouseScale@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_SetMouseScale@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_scaleX,struct_typesize(float)*1
callfuncex_p_value p_scaleY,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_GetMouseWheelMove "GetMouseWheelMove"
#deffunc local __rl_GetMouseWheelMove local return_value
#define global rl_GetMouseWheelMove __rl_GetMouseWheelMove@raylibhsp
callfuncex_func _rl_GetMouseWheelMove@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_call return_value
return return_value

#func _rl_GetMouseWheelMoveV "GetMouseWheelMoveV"
#deffunc local __rl_GetMouseWheelMoveV var return_var,local return_value
#define global rl_GetMouseWheelMoveV(%1)  __rl_GetMouseWheelMoveV@raylibhsp %1
callfuncex_func _rl_GetMouseWheelMoveV@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _rl_SetMouseCursor "SetMouseCursor"
#deffunc local __rl_SetMouseCursor var p_cursor,local return_value
#define global rl_SetMouseCursor(%1) dummy_p1@raylibhsp=%1:__rl_SetMouseCursor@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_SetMouseCursor@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_cursor,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetTouchX "GetTouchX"
#deffunc local __rl_GetTouchX local return_value
#define global rl_GetTouchX __rl_GetTouchX@raylibhsp
callfuncex_func _rl_GetTouchX@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rl_GetTouchY "GetTouchY"
#deffunc local __rl_GetTouchY local return_value
#define global rl_GetTouchY __rl_GetTouchY@raylibhsp
callfuncex_func _rl_GetTouchY@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rl_GetTouchPosition "GetTouchPosition"
#deffunc local __rl_GetTouchPosition var return_var,var p_index,local return_value
#define global rl_GetTouchPosition(%1,%2) dummy_p2@raylibhsp=%2:__rl_GetTouchPosition@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_GetTouchPosition@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_index,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetTouchPointId "GetTouchPointId"
#deffunc local __rl_GetTouchPointId var p_index,local return_value
#define global rl_GetTouchPointId(%1) dummy_p1@raylibhsp=%1:__rl_GetTouchPointId@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_GetTouchPointId@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_index,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetTouchPointCount "GetTouchPointCount"
#deffunc local __rl_GetTouchPointCount local return_value
#define global rl_GetTouchPointCount __rl_GetTouchPointCount@raylibhsp
callfuncex_func _rl_GetTouchPointCount@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rl_SetGesturesEnabled "SetGesturesEnabled"
#deffunc local __rl_SetGesturesEnabled var p_flags,local return_value
#define global rl_SetGesturesEnabled(%1) dummy_p1@raylibhsp=%1:__rl_SetGesturesEnabled@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_SetGesturesEnabled@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_flags,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rl_IsGestureDetected "IsGestureDetected"
#deffunc local __rl_IsGestureDetected var p_gesture,local return_value
#define global rl_IsGestureDetected(%1) dummy_p1@raylibhsp=%1:__rl_IsGestureDetected@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_IsGestureDetected@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_gesture,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetGestureDetected "GetGestureDetected"
#deffunc local __rl_GetGestureDetected local return_value
#define global rl_GetGestureDetected __rl_GetGestureDetected@raylibhsp
callfuncex_func _rl_GetGestureDetected@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rl_GetGestureHoldDuration "GetGestureHoldDuration"
#deffunc local __rl_GetGestureHoldDuration local return_value
#define global rl_GetGestureHoldDuration __rl_GetGestureHoldDuration@raylibhsp
callfuncex_func _rl_GetGestureHoldDuration@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_call return_value
return return_value

#func _rl_GetGestureDragVector "GetGestureDragVector"
#deffunc local __rl_GetGestureDragVector var return_var,local return_value
#define global rl_GetGestureDragVector(%1)  __rl_GetGestureDragVector@raylibhsp %1
callfuncex_func _rl_GetGestureDragVector@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _rl_GetGestureDragAngle "GetGestureDragAngle"
#deffunc local __rl_GetGestureDragAngle local return_value
#define global rl_GetGestureDragAngle __rl_GetGestureDragAngle@raylibhsp
callfuncex_func _rl_GetGestureDragAngle@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_call return_value
return return_value

#func _rl_GetGesturePinchVector "GetGesturePinchVector"
#deffunc local __rl_GetGesturePinchVector var return_var,local return_value
#define global rl_GetGesturePinchVector(%1)  __rl_GetGesturePinchVector@raylibhsp %1
callfuncex_func _rl_GetGesturePinchVector@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _rl_GetGesturePinchAngle "GetGesturePinchAngle"
#deffunc local __rl_GetGesturePinchAngle local return_value
#define global rl_GetGesturePinchAngle __rl_GetGesturePinchAngle@raylibhsp
callfuncex_func _rl_GetGesturePinchAngle@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_call return_value
return return_value

#func _rl_UpdateCamera "UpdateCamera"
#deffunc local __rl_UpdateCamera var p_camera,var p_mode,local return_value
#define global rl_UpdateCamera(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_UpdateCamera@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_UpdateCamera@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_camera,struct_typesize(pointer)*1
callfuncex_p_value p_mode,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_UpdateCameraPro "UpdateCameraPro"
#deffunc local __rl_UpdateCameraPro var p_camera,var p_movement,var p_rotation,var p_zoom,local return_value
#define global rl_UpdateCameraPro(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p4@raylibhsp=%4:__rl_UpdateCameraPro@raylibhsp dummy_p1@raylibhsp,%2,%3,dummy_p4@raylibhsp
callfuncex_func _rl_UpdateCameraPro@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_camera,struct_typesize(pointer)*1
callfuncex_p p_movement,struct_gettotal(rl_Vector3)*1
callfuncex_p p_rotation,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_zoom,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_SetShapesTexture "SetShapesTexture"
#deffunc local __rl_SetShapesTexture var p_texture,var p_source,local return_value
#define global rl_SetShapesTexture(%1,%2) __rl_SetShapesTexture@raylibhsp %1,%2
callfuncex_func _rl_SetShapesTexture@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_p p_source,struct_gettotal(rl_Rectangle)*1
callfuncex_call return_value
return return_value

#func _rl_DrawPixel "DrawPixel"
#deffunc local __rl_DrawPixel var p_posX,var p_posY,var p_color,local return_value
#define global rl_DrawPixel(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_DrawPixel@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,%3
callfuncex_func _rl_DrawPixel@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_posX,struct_typesize(int)*1
callfuncex_p_value p_posY,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawPixelV "DrawPixelV"
#deffunc local __rl_DrawPixelV var p_position,var p_color,local return_value
#define global rl_DrawPixelV(%1,%2) __rl_DrawPixelV@raylibhsp %1,%2
callfuncex_func _rl_DrawPixelV@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_position,struct_gettotal(rl_Vector2)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawLine "DrawLine"
#deffunc local __rl_DrawLine var p_startPosX,var p_startPosY,var p_endPosX,var p_endPosY,var p_color,local return_value
#define global rl_DrawLine(%1,%2,%3,%4,%5) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DrawLine@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawLine@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_startPosX,struct_typesize(int)*1
callfuncex_p_value p_startPosY,struct_typesize(int)*1
callfuncex_p_value p_endPosX,struct_typesize(int)*1
callfuncex_p_value p_endPosY,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawLineV "DrawLineV"
#deffunc local __rl_DrawLineV var p_startPos,var p_endPos,var p_color,local return_value
#define global rl_DrawLineV(%1,%2,%3) __rl_DrawLineV@raylibhsp %1,%2,%3
callfuncex_func _rl_DrawLineV@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_startPos,struct_gettotal(rl_Vector2)*1
callfuncex_p p_endPos,struct_gettotal(rl_Vector2)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawLineEx "DrawLineEx"
#deffunc local __rl_DrawLineEx var p_startPos,var p_endPos,var p_thick,var p_color,local return_value
#define global rl_DrawLineEx(%1,%2,%3,%4) dummy_p3@raylibhsp=%3:__rl_DrawLineEx@raylibhsp %1,%2,dummy_p3@raylibhsp,%4
callfuncex_func _rl_DrawLineEx@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_startPos,struct_gettotal(rl_Vector2)*1
callfuncex_p p_endPos,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_thick,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawLineBezier "DrawLineBezier"
#deffunc local __rl_DrawLineBezier var p_startPos,var p_endPos,var p_thick,var p_color,local return_value
#define global rl_DrawLineBezier(%1,%2,%3,%4) dummy_p3@raylibhsp=%3:__rl_DrawLineBezier@raylibhsp %1,%2,dummy_p3@raylibhsp,%4
callfuncex_func _rl_DrawLineBezier@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_startPos,struct_gettotal(rl_Vector2)*1
callfuncex_p p_endPos,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_thick,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawLineBezierQuad "DrawLineBezierQuad"
#deffunc local __rl_DrawLineBezierQuad var p_startPos,var p_endPos,var p_controlPos,var p_thick,var p_color,local return_value
#define global rl_DrawLineBezierQuad(%1,%2,%3,%4,%5) dummy_p4@raylibhsp=%4:__rl_DrawLineBezierQuad@raylibhsp %1,%2,%3,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawLineBezierQuad@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_startPos,struct_gettotal(rl_Vector2)*1
callfuncex_p p_endPos,struct_gettotal(rl_Vector2)*1
callfuncex_p p_controlPos,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_thick,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawLineBezierCubic "DrawLineBezierCubic"
#deffunc local __rl_DrawLineBezierCubic var p_startPos,var p_endPos,var p_startControlPos,var p_endControlPos,var p_thick,var p_color,local return_value
#define global rl_DrawLineBezierCubic(%1,%2,%3,%4,%5,%6) dummy_p5@raylibhsp=%5:__rl_DrawLineBezierCubic@raylibhsp %1,%2,%3,%4,dummy_p5@raylibhsp,%6
callfuncex_func _rl_DrawLineBezierCubic@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_startPos,struct_gettotal(rl_Vector2)*1
callfuncex_p p_endPos,struct_gettotal(rl_Vector2)*1
callfuncex_p p_startControlPos,struct_gettotal(rl_Vector2)*1
callfuncex_p p_endControlPos,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_thick,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawLineStrip "DrawLineStrip"
#deffunc local __rl_DrawLineStrip var p_points,var p_pointCount,var p_color,local return_value
#define global rl_DrawLineStrip(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_DrawLineStrip@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,%3
callfuncex_func _rl_DrawLineStrip@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_points,struct_typesize(pointer)*1
callfuncex_p_value p_pointCount,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawCircle "DrawCircle"
#deffunc local __rl_DrawCircle var p_centerX,var p_centerY,var p_radius,var p_color,local return_value
#define global rl_DrawCircle(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_DrawCircle@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,%4
callfuncex_func _rl_DrawCircle@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_centerX,struct_typesize(int)*1
callfuncex_p_value p_centerY,struct_typesize(int)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawCircleSector "DrawCircleSector"
#deffunc local __rl_DrawCircleSector var p_center,var p_radius,var p_startAngle,var p_endAngle,var p_segments,var p_color,local return_value
#define global rl_DrawCircleSector(%1,%2,%3,%4,%5,%6) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_DrawCircleSector@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,%6
callfuncex_func _rl_DrawCircleSector@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_center,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p_value p_startAngle,struct_typesize(float)*1
callfuncex_p_value p_endAngle,struct_typesize(float)*1
callfuncex_p_value p_segments,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawCircleSectorLines "DrawCircleSectorLines"
#deffunc local __rl_DrawCircleSectorLines var p_center,var p_radius,var p_startAngle,var p_endAngle,var p_segments,var p_color,local return_value
#define global rl_DrawCircleSectorLines(%1,%2,%3,%4,%5,%6) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_DrawCircleSectorLines@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,%6
callfuncex_func _rl_DrawCircleSectorLines@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_center,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p_value p_startAngle,struct_typesize(float)*1
callfuncex_p_value p_endAngle,struct_typesize(float)*1
callfuncex_p_value p_segments,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawCircleGradient "DrawCircleGradient"
#deffunc local __rl_DrawCircleGradient var p_centerX,var p_centerY,var p_radius,var p_color1,var p_color2,local return_value
#define global rl_DrawCircleGradient(%1,%2,%3,%4,%5) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_DrawCircleGradient@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,%4,%5
callfuncex_func _rl_DrawCircleGradient@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_centerX,struct_typesize(int)*1
callfuncex_p_value p_centerY,struct_typesize(int)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p p_color1,struct_gettotal(rl_Color)*1
callfuncex_p p_color2,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawCircleV "DrawCircleV"
#deffunc local __rl_DrawCircleV var p_center,var p_radius,var p_color,local return_value
#define global rl_DrawCircleV(%1,%2,%3) dummy_p2@raylibhsp=%2:__rl_DrawCircleV@raylibhsp %1,dummy_p2@raylibhsp,%3
callfuncex_func _rl_DrawCircleV@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_center,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawCircleLines "DrawCircleLines"
#deffunc local __rl_DrawCircleLines var p_centerX,var p_centerY,var p_radius,var p_color,local return_value
#define global rl_DrawCircleLines(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_DrawCircleLines@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,%4
callfuncex_func _rl_DrawCircleLines@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_centerX,struct_typesize(int)*1
callfuncex_p_value p_centerY,struct_typesize(int)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawEllipse "DrawEllipse"
#deffunc local __rl_DrawEllipse var p_centerX,var p_centerY,var p_radiusH,var p_radiusV,var p_color,local return_value
#define global rl_DrawEllipse(%1,%2,%3,%4,%5) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DrawEllipse@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawEllipse@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_centerX,struct_typesize(int)*1
callfuncex_p_value p_centerY,struct_typesize(int)*1
callfuncex_p_value p_radiusH,struct_typesize(float)*1
callfuncex_p_value p_radiusV,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawEllipseLines "DrawEllipseLines"
#deffunc local __rl_DrawEllipseLines var p_centerX,var p_centerY,var p_radiusH,var p_radiusV,var p_color,local return_value
#define global rl_DrawEllipseLines(%1,%2,%3,%4,%5) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DrawEllipseLines@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawEllipseLines@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_centerX,struct_typesize(int)*1
callfuncex_p_value p_centerY,struct_typesize(int)*1
callfuncex_p_value p_radiusH,struct_typesize(float)*1
callfuncex_p_value p_radiusV,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawRing "DrawRing"
#deffunc local __rl_DrawRing var p_center,var p_innerRadius,var p_outerRadius,var p_startAngle,var p_endAngle,var p_segments,var p_color,local return_value
#define global rl_DrawRing(%1,%2,%3,%4,%5,%6,%7) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:dummy_p6@raylibhsp=%6:__rl_DrawRing@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,dummy_p6@raylibhsp,%7
callfuncex_func _rl_DrawRing@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_center,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_innerRadius,struct_typesize(float)*1
callfuncex_p_value p_outerRadius,struct_typesize(float)*1
callfuncex_p_value p_startAngle,struct_typesize(float)*1
callfuncex_p_value p_endAngle,struct_typesize(float)*1
callfuncex_p_value p_segments,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawRingLines "DrawRingLines"
#deffunc local __rl_DrawRingLines var p_center,var p_innerRadius,var p_outerRadius,var p_startAngle,var p_endAngle,var p_segments,var p_color,local return_value
#define global rl_DrawRingLines(%1,%2,%3,%4,%5,%6,%7) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:dummy_p6@raylibhsp=%6:__rl_DrawRingLines@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,dummy_p6@raylibhsp,%7
callfuncex_func _rl_DrawRingLines@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_center,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_innerRadius,struct_typesize(float)*1
callfuncex_p_value p_outerRadius,struct_typesize(float)*1
callfuncex_p_value p_startAngle,struct_typesize(float)*1
callfuncex_p_value p_endAngle,struct_typesize(float)*1
callfuncex_p_value p_segments,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawRectangle "DrawRectangle"
#deffunc local __rl_DrawRectangle var p_posX,var p_posY,var p_width,var p_height,var p_color,local return_value
#define global rl_DrawRectangle(%1,%2,%3,%4,%5) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DrawRectangle@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawRectangle@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_posX,struct_typesize(int)*1
callfuncex_p_value p_posY,struct_typesize(int)*1
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawRectangleV "DrawRectangleV"
#deffunc local __rl_DrawRectangleV var p_position,var p_size,var p_color,local return_value
#define global rl_DrawRectangleV(%1,%2,%3) __rl_DrawRectangleV@raylibhsp %1,%2,%3
callfuncex_func _rl_DrawRectangleV@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_position,struct_gettotal(rl_Vector2)*1
callfuncex_p p_size,struct_gettotal(rl_Vector2)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawRectangleRec "DrawRectangleRec"
#deffunc local __rl_DrawRectangleRec var p_rec,var p_color,local return_value
#define global rl_DrawRectangleRec(%1,%2) __rl_DrawRectangleRec@raylibhsp %1,%2
callfuncex_func _rl_DrawRectangleRec@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_rec,struct_gettotal(rl_Rectangle)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawRectanglePro "DrawRectanglePro"
#deffunc local __rl_DrawRectanglePro var p_rec,var p_origin,var p_rotation,var p_color,local return_value
#define global rl_DrawRectanglePro(%1,%2,%3,%4) dummy_p3@raylibhsp=%3:__rl_DrawRectanglePro@raylibhsp %1,%2,dummy_p3@raylibhsp,%4
callfuncex_func _rl_DrawRectanglePro@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_rec,struct_gettotal(rl_Rectangle)*1
callfuncex_p p_origin,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_rotation,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawRectangleGradientV "DrawRectangleGradientV"
#deffunc local __rl_DrawRectangleGradientV var p_posX,var p_posY,var p_width,var p_height,var p_color1,var p_color2,local return_value
#define global rl_DrawRectangleGradientV(%1,%2,%3,%4,%5,%6) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DrawRectangleGradientV@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5,%6
callfuncex_func _rl_DrawRectangleGradientV@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_posX,struct_typesize(int)*1
callfuncex_p_value p_posY,struct_typesize(int)*1
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p p_color1,struct_gettotal(rl_Color)*1
callfuncex_p p_color2,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawRectangleGradientH "DrawRectangleGradientH"
#deffunc local __rl_DrawRectangleGradientH var p_posX,var p_posY,var p_width,var p_height,var p_color1,var p_color2,local return_value
#define global rl_DrawRectangleGradientH(%1,%2,%3,%4,%5,%6) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DrawRectangleGradientH@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5,%6
callfuncex_func _rl_DrawRectangleGradientH@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_posX,struct_typesize(int)*1
callfuncex_p_value p_posY,struct_typesize(int)*1
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p p_color1,struct_gettotal(rl_Color)*1
callfuncex_p p_color2,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawRectangleGradientEx "DrawRectangleGradientEx"
#deffunc local __rl_DrawRectangleGradientEx var p_rec,var p_col1,var p_col2,var p_col3,var p_col4,local return_value
#define global rl_DrawRectangleGradientEx(%1,%2,%3,%4,%5) __rl_DrawRectangleGradientEx@raylibhsp %1,%2,%3,%4,%5
callfuncex_func _rl_DrawRectangleGradientEx@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_rec,struct_gettotal(rl_Rectangle)*1
callfuncex_p p_col1,struct_gettotal(rl_Color)*1
callfuncex_p p_col2,struct_gettotal(rl_Color)*1
callfuncex_p p_col3,struct_gettotal(rl_Color)*1
callfuncex_p p_col4,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawRectangleLines "DrawRectangleLines"
#deffunc local __rl_DrawRectangleLines var p_posX,var p_posY,var p_width,var p_height,var p_color,local return_value
#define global rl_DrawRectangleLines(%1,%2,%3,%4,%5) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DrawRectangleLines@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawRectangleLines@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_posX,struct_typesize(int)*1
callfuncex_p_value p_posY,struct_typesize(int)*1
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawRectangleLinesEx "DrawRectangleLinesEx"
#deffunc local __rl_DrawRectangleLinesEx var p_rec,var p_lineThick,var p_color,local return_value
#define global rl_DrawRectangleLinesEx(%1,%2,%3) dummy_p2@raylibhsp=%2:__rl_DrawRectangleLinesEx@raylibhsp %1,dummy_p2@raylibhsp,%3
callfuncex_func _rl_DrawRectangleLinesEx@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_rec,struct_gettotal(rl_Rectangle)*1
callfuncex_p_value p_lineThick,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawRectangleRounded "DrawRectangleRounded"
#deffunc local __rl_DrawRectangleRounded var p_rec,var p_roundness,var p_segments,var p_color,local return_value
#define global rl_DrawRectangleRounded(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_DrawRectangleRounded@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,%4
callfuncex_func _rl_DrawRectangleRounded@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_rec,struct_gettotal(rl_Rectangle)*1
callfuncex_p_value p_roundness,struct_typesize(float)*1
callfuncex_p_value p_segments,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawRectangleRoundedLines "DrawRectangleRoundedLines"
#deffunc local __rl_DrawRectangleRoundedLines var p_rec,var p_roundness,var p_segments,var p_lineThick,var p_color,local return_value
#define global rl_DrawRectangleRoundedLines(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DrawRectangleRoundedLines@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawRectangleRoundedLines@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_rec,struct_gettotal(rl_Rectangle)*1
callfuncex_p_value p_roundness,struct_typesize(float)*1
callfuncex_p_value p_segments,struct_typesize(int)*1
callfuncex_p_value p_lineThick,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawTriangle "DrawTriangle"
#deffunc local __rl_DrawTriangle var p_v1,var p_v2,var p_v3,var p_color,local return_value
#define global rl_DrawTriangle(%1,%2,%3,%4) __rl_DrawTriangle@raylibhsp %1,%2,%3,%4
callfuncex_func _rl_DrawTriangle@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_v1,struct_gettotal(rl_Vector2)*1
callfuncex_p p_v2,struct_gettotal(rl_Vector2)*1
callfuncex_p p_v3,struct_gettotal(rl_Vector2)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawTriangleLines "DrawTriangleLines"
#deffunc local __rl_DrawTriangleLines var p_v1,var p_v2,var p_v3,var p_color,local return_value
#define global rl_DrawTriangleLines(%1,%2,%3,%4) __rl_DrawTriangleLines@raylibhsp %1,%2,%3,%4
callfuncex_func _rl_DrawTriangleLines@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_v1,struct_gettotal(rl_Vector2)*1
callfuncex_p p_v2,struct_gettotal(rl_Vector2)*1
callfuncex_p p_v3,struct_gettotal(rl_Vector2)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawTriangleFan "DrawTriangleFan"
#deffunc local __rl_DrawTriangleFan var p_points,var p_pointCount,var p_color,local return_value
#define global rl_DrawTriangleFan(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_DrawTriangleFan@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,%3
callfuncex_func _rl_DrawTriangleFan@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_points,struct_typesize(pointer)*1
callfuncex_p_value p_pointCount,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawTriangleStrip "DrawTriangleStrip"
#deffunc local __rl_DrawTriangleStrip var p_points,var p_pointCount,var p_color,local return_value
#define global rl_DrawTriangleStrip(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_DrawTriangleStrip@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,%3
callfuncex_func _rl_DrawTriangleStrip@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_points,struct_typesize(pointer)*1
callfuncex_p_value p_pointCount,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawPoly "DrawPoly"
#deffunc local __rl_DrawPoly var p_center,var p_sides,var p_radius,var p_rotation,var p_color,local return_value
#define global rl_DrawPoly(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DrawPoly@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawPoly@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_center,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_sides,struct_typesize(int)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p_value p_rotation,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawPolyLines "DrawPolyLines"
#deffunc local __rl_DrawPolyLines var p_center,var p_sides,var p_radius,var p_rotation,var p_color,local return_value
#define global rl_DrawPolyLines(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DrawPolyLines@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawPolyLines@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_center,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_sides,struct_typesize(int)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p_value p_rotation,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawPolyLinesEx "DrawPolyLinesEx"
#deffunc local __rl_DrawPolyLinesEx var p_center,var p_sides,var p_radius,var p_rotation,var p_lineThick,var p_color,local return_value
#define global rl_DrawPolyLinesEx(%1,%2,%3,%4,%5,%6) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_DrawPolyLinesEx@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,%6
callfuncex_func _rl_DrawPolyLinesEx@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_center,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_sides,struct_typesize(int)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p_value p_rotation,struct_typesize(float)*1
callfuncex_p_value p_lineThick,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_CheckCollisionRecs "CheckCollisionRecs"
#deffunc local __rl_CheckCollisionRecs var p_rec1,var p_rec2,local return_value
#define global rl_CheckCollisionRecs(%1,%2) __rl_CheckCollisionRecs@raylibhsp %1,%2
callfuncex_func _rl_CheckCollisionRecs@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_rec1,struct_gettotal(rl_Rectangle)*1
callfuncex_p p_rec2,struct_gettotal(rl_Rectangle)*1
callfuncex_call return_value
return return_value

#func _rl_CheckCollisionCircles "CheckCollisionCircles"
#deffunc local __rl_CheckCollisionCircles var p_center1,var p_radius1,var p_center2,var p_radius2,local return_value
#define global rl_CheckCollisionCircles(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p4@raylibhsp=%4:__rl_CheckCollisionCircles@raylibhsp %1,dummy_p2@raylibhsp,%3,dummy_p4@raylibhsp
callfuncex_func _rl_CheckCollisionCircles@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_center1,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_radius1,struct_typesize(float)*1
callfuncex_p p_center2,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_radius2,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_CheckCollisionCircleRec "CheckCollisionCircleRec"
#deffunc local __rl_CheckCollisionCircleRec var p_center,var p_radius,var p_rec,local return_value
#define global rl_CheckCollisionCircleRec(%1,%2,%3) dummy_p2@raylibhsp=%2:__rl_CheckCollisionCircleRec@raylibhsp %1,dummy_p2@raylibhsp,%3
callfuncex_func _rl_CheckCollisionCircleRec@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_center,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p p_rec,struct_gettotal(rl_Rectangle)*1
callfuncex_call return_value
return return_value

#func _rl_CheckCollisionPointRec "CheckCollisionPointRec"
#deffunc local __rl_CheckCollisionPointRec var p_point,var p_rec,local return_value
#define global rl_CheckCollisionPointRec(%1,%2) __rl_CheckCollisionPointRec@raylibhsp %1,%2
callfuncex_func _rl_CheckCollisionPointRec@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_point,struct_gettotal(rl_Vector2)*1
callfuncex_p p_rec,struct_gettotal(rl_Rectangle)*1
callfuncex_call return_value
return return_value

#func _rl_CheckCollisionPointCircle "CheckCollisionPointCircle"
#deffunc local __rl_CheckCollisionPointCircle var p_point,var p_center,var p_radius,local return_value
#define global rl_CheckCollisionPointCircle(%1,%2,%3) dummy_p3@raylibhsp=%3:__rl_CheckCollisionPointCircle@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _rl_CheckCollisionPointCircle@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_point,struct_gettotal(rl_Vector2)*1
callfuncex_p p_center,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_CheckCollisionPointTriangle "CheckCollisionPointTriangle"
#deffunc local __rl_CheckCollisionPointTriangle var p_point,var p_p1,var p_p2,var p_p3,local return_value
#define global rl_CheckCollisionPointTriangle(%1,%2,%3,%4) __rl_CheckCollisionPointTriangle@raylibhsp %1,%2,%3,%4
callfuncex_func _rl_CheckCollisionPointTriangle@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_point,struct_gettotal(rl_Vector2)*1
callfuncex_p p_p1,struct_gettotal(rl_Vector2)*1
callfuncex_p p_p2,struct_gettotal(rl_Vector2)*1
callfuncex_p p_p3,struct_gettotal(rl_Vector2)*1
callfuncex_call return_value
return return_value

#func _rl_CheckCollisionPointPoly "CheckCollisionPointPoly"
#deffunc local __rl_CheckCollisionPointPoly var p_point,var p_points,var p_pointCount,local return_value
#define global rl_CheckCollisionPointPoly(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_CheckCollisionPointPoly@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_CheckCollisionPointPoly@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_point,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_points,struct_typesize(pointer)*1
callfuncex_p_value p_pointCount,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_CheckCollisionLines "CheckCollisionLines"
#deffunc local __rl_CheckCollisionLines var p_startPos1,var p_endPos1,var p_startPos2,var p_endPos2,var p_collisionPoint,local return_value
#define global rl_CheckCollisionLines(%1,%2,%3,%4,%5) dummy_p5@raylibhsp=%5:__rl_CheckCollisionLines@raylibhsp %1,%2,%3,%4,dummy_p5@raylibhsp
callfuncex_func _rl_CheckCollisionLines@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_startPos1,struct_gettotal(rl_Vector2)*1
callfuncex_p p_endPos1,struct_gettotal(rl_Vector2)*1
callfuncex_p p_startPos2,struct_gettotal(rl_Vector2)*1
callfuncex_p p_endPos2,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_collisionPoint,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_CheckCollisionPointLine "CheckCollisionPointLine"
#deffunc local __rl_CheckCollisionPointLine var p_point,var p_p1,var p_p2,var p_threshold,local return_value
#define global rl_CheckCollisionPointLine(%1,%2,%3,%4) dummy_p4@raylibhsp=%4:__rl_CheckCollisionPointLine@raylibhsp %1,%2,%3,dummy_p4@raylibhsp
callfuncex_func _rl_CheckCollisionPointLine@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_point,struct_gettotal(rl_Vector2)*1
callfuncex_p p_p1,struct_gettotal(rl_Vector2)*1
callfuncex_p p_p2,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_threshold,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetCollisionRec "GetCollisionRec"
#deffunc local __rl_GetCollisionRec var return_var,var p_rec1,var p_rec2,local return_value
#define global rl_GetCollisionRec(%1,%2,%3) __rl_GetCollisionRec@raylibhsp %1,%2,%3
callfuncex_func _rl_GetCollisionRec@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Rectangle)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_rec1,struct_gettotal(rl_Rectangle)*1
callfuncex_p p_rec2,struct_gettotal(rl_Rectangle)*1
callfuncex_call return_value
return return_value

#func _rl_LoadImage "LoadImage"
#deffunc local __rl_LoadImage var return_var,var p_fileName,local return_value
#define global rl_LoadImage(%1,%2) dummy_p2@raylibhsp=%2:__rl_LoadImage@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_LoadImage@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_LoadImageRaw "LoadImageRaw"
#deffunc local __rl_LoadImageRaw var return_var,var p_fileName,var p_width,var p_height,var p_format,var p_headerSize,local return_value
#define global rl_LoadImageRaw(%1,%2,%3,%4,%5,%6) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:dummy_p6@raylibhsp=%6:__rl_LoadImageRaw@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,dummy_p6@raylibhsp
callfuncex_func _rl_LoadImageRaw@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p_value p_format,struct_typesize(int)*1
callfuncex_p_value p_headerSize,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_LoadImageAnim "LoadImageAnim"
#deffunc local __rl_LoadImageAnim var return_var,var p_fileName,var p_frames,local return_value
#define global rl_LoadImageAnim(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_LoadImageAnim@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_LoadImageAnim@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_p_value p_frames,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_LoadImageFromMemory "LoadImageFromMemory"
#deffunc local __rl_LoadImageFromMemory var return_var,var p_fileType,var p_fileData,var p_dataSize,local return_value
#define global rl_LoadImageFromMemory(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_LoadImageFromMemory@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_LoadImageFromMemory@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_fileType,struct_typesize(pointer)*1
callfuncex_p_value p_fileData,struct_typesize(pointer)*1
callfuncex_p_value p_dataSize,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_LoadImageFromTexture "LoadImageFromTexture"
#deffunc local __rl_LoadImageFromTexture var return_var,var p_texture,local return_value
#define global rl_LoadImageFromTexture(%1,%2) __rl_LoadImageFromTexture@raylibhsp %1,%2
callfuncex_func _rl_LoadImageFromTexture@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_call return_value
return return_value

#func _rl_LoadImageFromScreen "LoadImageFromScreen"
#deffunc local __rl_LoadImageFromScreen var return_var,local return_value
#define global rl_LoadImageFromScreen(%1)  __rl_LoadImageFromScreen@raylibhsp %1
callfuncex_func _rl_LoadImageFromScreen@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _rl_IsImageReady "IsImageReady"
#deffunc local __rl_IsImageReady var p_image,local return_value
#define global rl_IsImageReady(%1) __rl_IsImageReady@raylibhsp %1
callfuncex_func _rl_IsImageReady@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_image,struct_gettotal(rl_Image)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadImage "UnloadImage"
#deffunc local __rl_UnloadImage var p_image,local return_value
#define global rl_UnloadImage(%1) __rl_UnloadImage@raylibhsp %1
callfuncex_func _rl_UnloadImage@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_image,struct_gettotal(rl_Image)*1
callfuncex_call return_value
return return_value

#func _rl_ExportImage "ExportImage"
#deffunc local __rl_ExportImage var p_image,var p_fileName,local return_value
#define global rl_ExportImage(%1,%2) dummy_p2@raylibhsp=%2:__rl_ExportImage@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_ExportImage@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_image,struct_gettotal(rl_Image)*1
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_ExportImageAsCode "ExportImageAsCode"
#deffunc local __rl_ExportImageAsCode var p_image,var p_fileName,local return_value
#define global rl_ExportImageAsCode(%1,%2) dummy_p2@raylibhsp=%2:__rl_ExportImageAsCode@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_ExportImageAsCode@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_image,struct_gettotal(rl_Image)*1
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_GenImageColor "GenImageColor"
#deffunc local __rl_GenImageColor var return_var,var p_width,var p_height,var p_color,local return_value
#define global rl_GenImageColor(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_GenImageColor@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,%4
callfuncex_func _rl_GenImageColor@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_GenImageGradientV "GenImageGradientV"
#deffunc local __rl_GenImageGradientV var return_var,var p_width,var p_height,var p_top,var p_bottom,local return_value
#define global rl_GenImageGradientV(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_GenImageGradientV@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,%4,%5
callfuncex_func _rl_GenImageGradientV@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p p_top,struct_gettotal(rl_Color)*1
callfuncex_p p_bottom,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_GenImageGradientH "GenImageGradientH"
#deffunc local __rl_GenImageGradientH var return_var,var p_width,var p_height,var p_left,var p_right,local return_value
#define global rl_GenImageGradientH(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_GenImageGradientH@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,%4,%5
callfuncex_func _rl_GenImageGradientH@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p p_left,struct_gettotal(rl_Color)*1
callfuncex_p p_right,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_GenImageGradientRadial "GenImageGradientRadial"
#deffunc local __rl_GenImageGradientRadial var return_var,var p_width,var p_height,var p_density,var p_inner,var p_outer,local return_value
#define global rl_GenImageGradientRadial(%1,%2,%3,%4,%5,%6) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_GenImageGradientRadial@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5,%6
callfuncex_func _rl_GenImageGradientRadial@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p_value p_density,struct_typesize(float)*1
callfuncex_p p_inner,struct_gettotal(rl_Color)*1
callfuncex_p p_outer,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_GenImageChecked "GenImageChecked"
#deffunc local __rl_GenImageChecked var return_var,var p_width,var p_height,var p_checksX,var p_checksY,var p_col1,var p_col2,local return_value
#define global rl_GenImageChecked(%1,%2,%3,%4,%5,%6,%7) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_GenImageChecked@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,%6,%7
callfuncex_func _rl_GenImageChecked@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p_value p_checksX,struct_typesize(int)*1
callfuncex_p_value p_checksY,struct_typesize(int)*1
callfuncex_p p_col1,struct_gettotal(rl_Color)*1
callfuncex_p p_col2,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_GenImageWhiteNoise "GenImageWhiteNoise"
#deffunc local __rl_GenImageWhiteNoise var return_var,var p_width,var p_height,var p_factor,local return_value
#define global rl_GenImageWhiteNoise(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_GenImageWhiteNoise@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_GenImageWhiteNoise@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p_value p_factor,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_GenImagePerlinNoise "GenImagePerlinNoise"
#deffunc local __rl_GenImagePerlinNoise var return_var,var p_width,var p_height,var p_offsetX,var p_offsetY,var p_scale,local return_value
#define global rl_GenImagePerlinNoise(%1,%2,%3,%4,%5,%6) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:dummy_p6@raylibhsp=%6:__rl_GenImagePerlinNoise@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,dummy_p6@raylibhsp
callfuncex_func _rl_GenImagePerlinNoise@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p_value p_offsetX,struct_typesize(int)*1
callfuncex_p_value p_offsetY,struct_typesize(int)*1
callfuncex_p_value p_scale,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_GenImageCellular "GenImageCellular"
#deffunc local __rl_GenImageCellular var return_var,var p_width,var p_height,var p_tileSize,local return_value
#define global rl_GenImageCellular(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_GenImageCellular@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_GenImageCellular@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p_value p_tileSize,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GenImageText "GenImageText"
#deffunc local __rl_GenImageText var return_var,var p_width,var p_height,var p_text,local return_value
#define global rl_GenImageText(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_GenImageText@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_GenImageText@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_ImageCopy "ImageCopy"
#deffunc local __rl_ImageCopy var return_var,var p_image,local return_value
#define global rl_ImageCopy(%1,%2) __rl_ImageCopy@raylibhsp %1,%2
callfuncex_func _rl_ImageCopy@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_image,struct_gettotal(rl_Image)*1
callfuncex_call return_value
return return_value

#func _rl_ImageFromImage "ImageFromImage"
#deffunc local __rl_ImageFromImage var return_var,var p_image,var p_rec,local return_value
#define global rl_ImageFromImage(%1,%2,%3) __rl_ImageFromImage@raylibhsp %1,%2,%3
callfuncex_func _rl_ImageFromImage@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_image,struct_gettotal(rl_Image)*1
callfuncex_p p_rec,struct_gettotal(rl_Rectangle)*1
callfuncex_call return_value
return return_value

#func _rl_ImageText "ImageText"
#deffunc local __rl_ImageText var return_var,var p_text,var p_fontSize,var p_color,local return_value
#define global rl_ImageText(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_ImageText@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,%4
callfuncex_func _rl_ImageText@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_fontSize,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageTextEx "ImageTextEx"
#deffunc local __rl_ImageTextEx var return_var,var p_font,var p_text,var p_fontSize,var p_spacing,var p_tint,local return_value
#define global rl_ImageTextEx(%1,%2,%3,%4,%5,%6) dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_ImageTextEx@raylibhsp %1,%2,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,%6
callfuncex_func _rl_ImageTextEx@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_font,struct_gettotal(rl_Font)*1
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_fontSize,struct_typesize(float)*1
callfuncex_p_value p_spacing,struct_typesize(float)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageFormat "ImageFormat"
#deffunc local __rl_ImageFormat var p_image,var p_newFormat,local return_value
#define global rl_ImageFormat(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_ImageFormat@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_ImageFormat@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_p_value p_newFormat,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_ImageToPOT "ImageToPOT"
#deffunc local __rl_ImageToPOT var p_image,var p_fill,local return_value
#define global rl_ImageToPOT(%1,%2) dummy_p1@raylibhsp=%1:__rl_ImageToPOT@raylibhsp dummy_p1@raylibhsp,%2
callfuncex_func _rl_ImageToPOT@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_p p_fill,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageCrop "ImageCrop"
#deffunc local __rl_ImageCrop var p_image,var p_crop,local return_value
#define global rl_ImageCrop(%1,%2) dummy_p1@raylibhsp=%1:__rl_ImageCrop@raylibhsp dummy_p1@raylibhsp,%2
callfuncex_func _rl_ImageCrop@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_p p_crop,struct_gettotal(rl_Rectangle)*1
callfuncex_call return_value
return return_value

#func _rl_ImageAlphaCrop "ImageAlphaCrop"
#deffunc local __rl_ImageAlphaCrop var p_image,var p_threshold,local return_value
#define global rl_ImageAlphaCrop(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_ImageAlphaCrop@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_ImageAlphaCrop@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_p_value p_threshold,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_ImageAlphaClear "ImageAlphaClear"
#deffunc local __rl_ImageAlphaClear var p_image,var p_color,var p_threshold,local return_value
#define global rl_ImageAlphaClear(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p3@raylibhsp=%3:__rl_ImageAlphaClear@raylibhsp dummy_p1@raylibhsp,%2,dummy_p3@raylibhsp
callfuncex_func _rl_ImageAlphaClear@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_p_value p_threshold,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_ImageAlphaMask "ImageAlphaMask"
#deffunc local __rl_ImageAlphaMask var p_image,var p_alphaMask,local return_value
#define global rl_ImageAlphaMask(%1,%2) dummy_p1@raylibhsp=%1:__rl_ImageAlphaMask@raylibhsp dummy_p1@raylibhsp,%2
callfuncex_func _rl_ImageAlphaMask@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_p p_alphaMask,struct_gettotal(rl_Image)*1
callfuncex_call return_value
return return_value

#func _rl_ImageAlphaPremultiply "ImageAlphaPremultiply"
#deffunc local __rl_ImageAlphaPremultiply var p_image,local return_value
#define global rl_ImageAlphaPremultiply(%1) dummy_p1@raylibhsp=%1:__rl_ImageAlphaPremultiply@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_ImageAlphaPremultiply@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_ImageBlurGaussian "ImageBlurGaussian"
#deffunc local __rl_ImageBlurGaussian var p_image,var p_blurSize,local return_value
#define global rl_ImageBlurGaussian(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_ImageBlurGaussian@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_ImageBlurGaussian@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_p_value p_blurSize,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_ImageResize "ImageResize"
#deffunc local __rl_ImageResize var p_image,var p_newWidth,var p_newHeight,local return_value
#define global rl_ImageResize(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_ImageResize@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_ImageResize@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_p_value p_newWidth,struct_typesize(int)*1
callfuncex_p_value p_newHeight,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_ImageResizeNN "ImageResizeNN"
#deffunc local __rl_ImageResizeNN var p_image,var p_newWidth,var p_newHeight,local return_value
#define global rl_ImageResizeNN(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_ImageResizeNN@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_ImageResizeNN@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_p_value p_newWidth,struct_typesize(int)*1
callfuncex_p_value p_newHeight,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_ImageResizeCanvas "ImageResizeCanvas"
#deffunc local __rl_ImageResizeCanvas var p_image,var p_newWidth,var p_newHeight,var p_offsetX,var p_offsetY,var p_fill,local return_value
#define global rl_ImageResizeCanvas(%1,%2,%3,%4,%5,%6) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_ImageResizeCanvas@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,%6
callfuncex_func _rl_ImageResizeCanvas@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_p_value p_newWidth,struct_typesize(int)*1
callfuncex_p_value p_newHeight,struct_typesize(int)*1
callfuncex_p_value p_offsetX,struct_typesize(int)*1
callfuncex_p_value p_offsetY,struct_typesize(int)*1
callfuncex_p p_fill,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageMipmaps "ImageMipmaps"
#deffunc local __rl_ImageMipmaps var p_image,local return_value
#define global rl_ImageMipmaps(%1) dummy_p1@raylibhsp=%1:__rl_ImageMipmaps@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_ImageMipmaps@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_ImageDither "ImageDither"
#deffunc local __rl_ImageDither var p_image,var p_rBpp,var p_gBpp,var p_bBpp,var p_aBpp,local return_value
#define global rl_ImageDither(%1,%2,%3,%4,%5) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_ImageDither@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp
callfuncex_func _rl_ImageDither@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_p_value p_rBpp,struct_typesize(int)*1
callfuncex_p_value p_gBpp,struct_typesize(int)*1
callfuncex_p_value p_bBpp,struct_typesize(int)*1
callfuncex_p_value p_aBpp,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_ImageFlipVertical "ImageFlipVertical"
#deffunc local __rl_ImageFlipVertical var p_image,local return_value
#define global rl_ImageFlipVertical(%1) dummy_p1@raylibhsp=%1:__rl_ImageFlipVertical@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_ImageFlipVertical@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_ImageFlipHorizontal "ImageFlipHorizontal"
#deffunc local __rl_ImageFlipHorizontal var p_image,local return_value
#define global rl_ImageFlipHorizontal(%1) dummy_p1@raylibhsp=%1:__rl_ImageFlipHorizontal@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_ImageFlipHorizontal@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_ImageRotateCW "ImageRotateCW"
#deffunc local __rl_ImageRotateCW var p_image,local return_value
#define global rl_ImageRotateCW(%1) dummy_p1@raylibhsp=%1:__rl_ImageRotateCW@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_ImageRotateCW@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_ImageRotateCCW "ImageRotateCCW"
#deffunc local __rl_ImageRotateCCW var p_image,local return_value
#define global rl_ImageRotateCCW(%1) dummy_p1@raylibhsp=%1:__rl_ImageRotateCCW@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_ImageRotateCCW@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_ImageColorTint "ImageColorTint"
#deffunc local __rl_ImageColorTint var p_image,var p_color,local return_value
#define global rl_ImageColorTint(%1,%2) dummy_p1@raylibhsp=%1:__rl_ImageColorTint@raylibhsp dummy_p1@raylibhsp,%2
callfuncex_func _rl_ImageColorTint@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageColorInvert "ImageColorInvert"
#deffunc local __rl_ImageColorInvert var p_image,local return_value
#define global rl_ImageColorInvert(%1) dummy_p1@raylibhsp=%1:__rl_ImageColorInvert@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_ImageColorInvert@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_ImageColorGrayscale "ImageColorGrayscale"
#deffunc local __rl_ImageColorGrayscale var p_image,local return_value
#define global rl_ImageColorGrayscale(%1) dummy_p1@raylibhsp=%1:__rl_ImageColorGrayscale@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_ImageColorGrayscale@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_ImageColorContrast "ImageColorContrast"
#deffunc local __rl_ImageColorContrast var p_image,var p_contrast,local return_value
#define global rl_ImageColorContrast(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_ImageColorContrast@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_ImageColorContrast@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_p_value p_contrast,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_ImageColorBrightness "ImageColorBrightness"
#deffunc local __rl_ImageColorBrightness var p_image,var p_brightness,local return_value
#define global rl_ImageColorBrightness(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_ImageColorBrightness@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_ImageColorBrightness@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_p_value p_brightness,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_ImageColorReplace "ImageColorReplace"
#deffunc local __rl_ImageColorReplace var p_image,var p_color,var p_replace,local return_value
#define global rl_ImageColorReplace(%1,%2,%3) dummy_p1@raylibhsp=%1:__rl_ImageColorReplace@raylibhsp dummy_p1@raylibhsp,%2,%3
callfuncex_func _rl_ImageColorReplace@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_image,struct_typesize(pointer)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_p p_replace,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_LoadImageColors "LoadImageColors"
#deffunc local __rl_LoadImageColors var return_var,var p_image,local return_value
#define global rl_LoadImageColors(%1,%2) __rl_LoadImageColors@raylibhsp %1,%2
callfuncex_func _rl_LoadImageColors@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p p_image,struct_gettotal(rl_Image)*1
callfuncex_call return_var
return

#func _rl_LoadImagePalette "LoadImagePalette"
#deffunc local __rl_LoadImagePalette var return_var,var p_image,var p_maxPaletteSize,var p_colorCount,local return_value
#define global rl_LoadImagePalette(%1,%2,%3,%4) dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_LoadImagePalette@raylibhsp %1,%2,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_LoadImagePalette@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p p_image,struct_gettotal(rl_Image)*1
callfuncex_p_value p_maxPaletteSize,struct_typesize(int)*1
callfuncex_p_value p_colorCount,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_UnloadImageColors "UnloadImageColors"
#deffunc local __rl_UnloadImageColors var p_colors,local return_value
#define global rl_UnloadImageColors(%1) dummy_p1@raylibhsp=%1:__rl_UnloadImageColors@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_UnloadImageColors@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_colors,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadImagePalette "UnloadImagePalette"
#deffunc local __rl_UnloadImagePalette var p_colors,local return_value
#define global rl_UnloadImagePalette(%1) dummy_p1@raylibhsp=%1:__rl_UnloadImagePalette@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_UnloadImagePalette@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_colors,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_GetImageAlphaBorder "GetImageAlphaBorder"
#deffunc local __rl_GetImageAlphaBorder var return_var,var p_image,var p_threshold,local return_value
#define global rl_GetImageAlphaBorder(%1,%2,%3) dummy_p3@raylibhsp=%3:__rl_GetImageAlphaBorder@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _rl_GetImageAlphaBorder@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Rectangle)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_image,struct_gettotal(rl_Image)*1
callfuncex_p_value p_threshold,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_GetImageColor "GetImageColor"
#deffunc local __rl_GetImageColor var return_var,var p_image,var p_x,var p_y,local return_value
#define global rl_GetImageColor(%1,%2,%3,%4) dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_GetImageColor@raylibhsp %1,%2,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_GetImageColor@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Color)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_image,struct_gettotal(rl_Image)*1
callfuncex_p_value p_x,struct_typesize(int)*1
callfuncex_p_value p_y,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_ImageClearBackground "ImageClearBackground"
#deffunc local __rl_ImageClearBackground var p_dst,var p_color,local return_value
#define global rl_ImageClearBackground(%1,%2) dummy_p1@raylibhsp=%1:__rl_ImageClearBackground@raylibhsp dummy_p1@raylibhsp,%2
callfuncex_func _rl_ImageClearBackground@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_dst,struct_typesize(pointer)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageDrawPixel "ImageDrawPixel"
#deffunc local __rl_ImageDrawPixel var p_dst,var p_posX,var p_posY,var p_color,local return_value
#define global rl_ImageDrawPixel(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_ImageDrawPixel@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,%4
callfuncex_func _rl_ImageDrawPixel@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_dst,struct_typesize(pointer)*1
callfuncex_p_value p_posX,struct_typesize(int)*1
callfuncex_p_value p_posY,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageDrawPixelV "ImageDrawPixelV"
#deffunc local __rl_ImageDrawPixelV var p_dst,var p_position,var p_color,local return_value
#define global rl_ImageDrawPixelV(%1,%2,%3) dummy_p1@raylibhsp=%1:__rl_ImageDrawPixelV@raylibhsp dummy_p1@raylibhsp,%2,%3
callfuncex_func _rl_ImageDrawPixelV@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_dst,struct_typesize(pointer)*1
callfuncex_p p_position,struct_gettotal(rl_Vector2)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageDrawLine "ImageDrawLine"
#deffunc local __rl_ImageDrawLine var p_dst,var p_startPosX,var p_startPosY,var p_endPosX,var p_endPosY,var p_color,local return_value
#define global rl_ImageDrawLine(%1,%2,%3,%4,%5,%6) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_ImageDrawLine@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,%6
callfuncex_func _rl_ImageDrawLine@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_dst,struct_typesize(pointer)*1
callfuncex_p_value p_startPosX,struct_typesize(int)*1
callfuncex_p_value p_startPosY,struct_typesize(int)*1
callfuncex_p_value p_endPosX,struct_typesize(int)*1
callfuncex_p_value p_endPosY,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageDrawLineV "ImageDrawLineV"
#deffunc local __rl_ImageDrawLineV var p_dst,var p_start,var p_end,var p_color,local return_value
#define global rl_ImageDrawLineV(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:__rl_ImageDrawLineV@raylibhsp dummy_p1@raylibhsp,%2,%3,%4
callfuncex_func _rl_ImageDrawLineV@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_dst,struct_typesize(pointer)*1
callfuncex_p p_start,struct_gettotal(rl_Vector2)*1
callfuncex_p p_end,struct_gettotal(rl_Vector2)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageDrawCircle "ImageDrawCircle"
#deffunc local __rl_ImageDrawCircle var p_dst,var p_centerX,var p_centerY,var p_radius,var p_color,local return_value
#define global rl_ImageDrawCircle(%1,%2,%3,%4,%5) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_ImageDrawCircle@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5
callfuncex_func _rl_ImageDrawCircle@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_dst,struct_typesize(pointer)*1
callfuncex_p_value p_centerX,struct_typesize(int)*1
callfuncex_p_value p_centerY,struct_typesize(int)*1
callfuncex_p_value p_radius,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageDrawCircleV "ImageDrawCircleV"
#deffunc local __rl_ImageDrawCircleV var p_dst,var p_center,var p_radius,var p_color,local return_value
#define global rl_ImageDrawCircleV(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p3@raylibhsp=%3:__rl_ImageDrawCircleV@raylibhsp dummy_p1@raylibhsp,%2,dummy_p3@raylibhsp,%4
callfuncex_func _rl_ImageDrawCircleV@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_dst,struct_typesize(pointer)*1
callfuncex_p p_center,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_radius,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageDrawCircleLines "ImageDrawCircleLines"
#deffunc local __rl_ImageDrawCircleLines var p_dst,var p_centerX,var p_centerY,var p_radius,var p_color,local return_value
#define global rl_ImageDrawCircleLines(%1,%2,%3,%4,%5) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_ImageDrawCircleLines@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5
callfuncex_func _rl_ImageDrawCircleLines@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_dst,struct_typesize(pointer)*1
callfuncex_p_value p_centerX,struct_typesize(int)*1
callfuncex_p_value p_centerY,struct_typesize(int)*1
callfuncex_p_value p_radius,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageDrawCircleLinesV "ImageDrawCircleLinesV"
#deffunc local __rl_ImageDrawCircleLinesV var p_dst,var p_center,var p_radius,var p_color,local return_value
#define global rl_ImageDrawCircleLinesV(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p3@raylibhsp=%3:__rl_ImageDrawCircleLinesV@raylibhsp dummy_p1@raylibhsp,%2,dummy_p3@raylibhsp,%4
callfuncex_func _rl_ImageDrawCircleLinesV@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_dst,struct_typesize(pointer)*1
callfuncex_p p_center,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_radius,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageDrawRectangle "ImageDrawRectangle"
#deffunc local __rl_ImageDrawRectangle var p_dst,var p_posX,var p_posY,var p_width,var p_height,var p_color,local return_value
#define global rl_ImageDrawRectangle(%1,%2,%3,%4,%5,%6) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_ImageDrawRectangle@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,%6
callfuncex_func _rl_ImageDrawRectangle@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_dst,struct_typesize(pointer)*1
callfuncex_p_value p_posX,struct_typesize(int)*1
callfuncex_p_value p_posY,struct_typesize(int)*1
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageDrawRectangleV "ImageDrawRectangleV"
#deffunc local __rl_ImageDrawRectangleV var p_dst,var p_position,var p_size,var p_color,local return_value
#define global rl_ImageDrawRectangleV(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:__rl_ImageDrawRectangleV@raylibhsp dummy_p1@raylibhsp,%2,%3,%4
callfuncex_func _rl_ImageDrawRectangleV@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_dst,struct_typesize(pointer)*1
callfuncex_p p_position,struct_gettotal(rl_Vector2)*1
callfuncex_p p_size,struct_gettotal(rl_Vector2)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageDrawRectangleRec "ImageDrawRectangleRec"
#deffunc local __rl_ImageDrawRectangleRec var p_dst,var p_rec,var p_color,local return_value
#define global rl_ImageDrawRectangleRec(%1,%2,%3) dummy_p1@raylibhsp=%1:__rl_ImageDrawRectangleRec@raylibhsp dummy_p1@raylibhsp,%2,%3
callfuncex_func _rl_ImageDrawRectangleRec@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_dst,struct_typesize(pointer)*1
callfuncex_p p_rec,struct_gettotal(rl_Rectangle)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageDrawRectangleLines "ImageDrawRectangleLines"
#deffunc local __rl_ImageDrawRectangleLines var p_dst,var p_rec,var p_thick,var p_color,local return_value
#define global rl_ImageDrawRectangleLines(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p3@raylibhsp=%3:__rl_ImageDrawRectangleLines@raylibhsp dummy_p1@raylibhsp,%2,dummy_p3@raylibhsp,%4
callfuncex_func _rl_ImageDrawRectangleLines@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_dst,struct_typesize(pointer)*1
callfuncex_p p_rec,struct_gettotal(rl_Rectangle)*1
callfuncex_p_value p_thick,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageDraw "ImageDraw"
#deffunc local __rl_ImageDraw var p_dst,var p_src,var p_srcRec,var p_dstRec,var p_tint,local return_value
#define global rl_ImageDraw(%1,%2,%3,%4,%5) dummy_p1@raylibhsp=%1:__rl_ImageDraw@raylibhsp dummy_p1@raylibhsp,%2,%3,%4,%5
callfuncex_func _rl_ImageDraw@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_dst,struct_typesize(pointer)*1
callfuncex_p p_src,struct_gettotal(rl_Image)*1
callfuncex_p p_srcRec,struct_gettotal(rl_Rectangle)*1
callfuncex_p p_dstRec,struct_gettotal(rl_Rectangle)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageDrawText "ImageDrawText"
#deffunc local __rl_ImageDrawText var p_dst,var p_text,var p_posX,var p_posY,var p_fontSize,var p_color,local return_value
#define global rl_ImageDrawText(%1,%2,%3,%4,%5,%6) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_ImageDrawText@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,%6
callfuncex_func _rl_ImageDrawText@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_dst,struct_typesize(pointer)*1
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_posX,struct_typesize(int)*1
callfuncex_p_value p_posY,struct_typesize(int)*1
callfuncex_p_value p_fontSize,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ImageDrawTextEx "ImageDrawTextEx"
#deffunc local __rl_ImageDrawTextEx var p_dst,var p_font,var p_text,var p_position,var p_fontSize,var p_spacing,var p_tint,local return_value
#define global rl_ImageDrawTextEx(%1,%2,%3,%4,%5,%6,%7) dummy_p1@raylibhsp=%1:dummy_p3@raylibhsp=%3:dummy_p5@raylibhsp=%5:dummy_p6@raylibhsp=%6:__rl_ImageDrawTextEx@raylibhsp dummy_p1@raylibhsp,%2,dummy_p3@raylibhsp,%4,dummy_p5@raylibhsp,dummy_p6@raylibhsp,%7
callfuncex_func _rl_ImageDrawTextEx@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_dst,struct_typesize(pointer)*1
callfuncex_p p_font,struct_gettotal(rl_Font)*1
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p p_position,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_fontSize,struct_typesize(float)*1
callfuncex_p_value p_spacing,struct_typesize(float)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_LoadTexture "LoadTexture"
#deffunc local __rl_LoadTexture var return_var,var p_fileName,local return_value
#define global rl_LoadTexture(%1,%2) dummy_p2@raylibhsp=%2:__rl_LoadTexture@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_LoadTexture@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Texture2D)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_LoadTextureFromImage "LoadTextureFromImage"
#deffunc local __rl_LoadTextureFromImage var return_var,var p_image,local return_value
#define global rl_LoadTextureFromImage(%1,%2) __rl_LoadTextureFromImage@raylibhsp %1,%2
callfuncex_func _rl_LoadTextureFromImage@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Texture2D)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_image,struct_gettotal(rl_Image)*1
callfuncex_call return_value
return return_value

#func _rl_LoadTextureCubemap "LoadTextureCubemap"
#deffunc local __rl_LoadTextureCubemap var return_var,var p_image,var p_layout,local return_value
#define global rl_LoadTextureCubemap(%1,%2,%3) dummy_p3@raylibhsp=%3:__rl_LoadTextureCubemap@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _rl_LoadTextureCubemap@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_TextureCubemap)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_image,struct_gettotal(rl_Image)*1
callfuncex_p_value p_layout,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_LoadRenderTexture "LoadRenderTexture"
#deffunc local __rl_LoadRenderTexture var return_var,var p_width,var p_height,local return_value
#define global rl_LoadRenderTexture(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_LoadRenderTexture@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_LoadRenderTexture@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_RenderTexture2D)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_IsTextureReady "IsTextureReady"
#deffunc local __rl_IsTextureReady var p_texture,local return_value
#define global rl_IsTextureReady(%1) __rl_IsTextureReady@raylibhsp %1
callfuncex_func _rl_IsTextureReady@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadTexture "UnloadTexture"
#deffunc local __rl_UnloadTexture var p_texture,local return_value
#define global rl_UnloadTexture(%1) __rl_UnloadTexture@raylibhsp %1
callfuncex_func _rl_UnloadTexture@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_call return_value
return return_value

#func _rl_IsRenderTextureReady "IsRenderTextureReady"
#deffunc local __rl_IsRenderTextureReady var p_target,local return_value
#define global rl_IsRenderTextureReady(%1) __rl_IsRenderTextureReady@raylibhsp %1
callfuncex_func _rl_IsRenderTextureReady@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_target,struct_gettotal(rl_RenderTexture2D)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadRenderTexture "UnloadRenderTexture"
#deffunc local __rl_UnloadRenderTexture var p_target,local return_value
#define global rl_UnloadRenderTexture(%1) __rl_UnloadRenderTexture@raylibhsp %1
callfuncex_func _rl_UnloadRenderTexture@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_target,struct_gettotal(rl_RenderTexture2D)*1
callfuncex_call return_value
return return_value

#func _rl_UpdateTexture "UpdateTexture"
#deffunc local __rl_UpdateTexture var p_texture,var p_pixels,local return_value
#define global rl_UpdateTexture(%1,%2) dummy_p2@raylibhsp=%2:__rl_UpdateTexture@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_UpdateTexture@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_p_value p_pixels,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_UpdateTextureRec "UpdateTextureRec"
#deffunc local __rl_UpdateTextureRec var p_texture,var p_rec,var p_pixels,local return_value
#define global rl_UpdateTextureRec(%1,%2,%3) dummy_p3@raylibhsp=%3:__rl_UpdateTextureRec@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _rl_UpdateTextureRec@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_p p_rec,struct_gettotal(rl_Rectangle)*1
callfuncex_p_value p_pixels,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_GenTextureMipmaps "GenTextureMipmaps"
#deffunc local __rl_GenTextureMipmaps var p_texture,local return_value
#define global rl_GenTextureMipmaps(%1) dummy_p1@raylibhsp=%1:__rl_GenTextureMipmaps@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_GenTextureMipmaps@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_texture,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_SetTextureFilter "SetTextureFilter"
#deffunc local __rl_SetTextureFilter var p_texture,var p_filter,local return_value
#define global rl_SetTextureFilter(%1,%2) dummy_p2@raylibhsp=%2:__rl_SetTextureFilter@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_SetTextureFilter@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_p_value p_filter,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_SetTextureWrap "SetTextureWrap"
#deffunc local __rl_SetTextureWrap var p_texture,var p_wrap,local return_value
#define global rl_SetTextureWrap(%1,%2) dummy_p2@raylibhsp=%2:__rl_SetTextureWrap@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_SetTextureWrap@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_p_value p_wrap,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_DrawTexture "DrawTexture"
#deffunc local __rl_DrawTexture var p_texture,var p_posX,var p_posY,var p_tint,local return_value
#define global rl_DrawTexture(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_DrawTexture@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,%4
callfuncex_func _rl_DrawTexture@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_p_value p_posX,struct_typesize(int)*1
callfuncex_p_value p_posY,struct_typesize(int)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawTextureV "DrawTextureV"
#deffunc local __rl_DrawTextureV var p_texture,var p_position,var p_tint,local return_value
#define global rl_DrawTextureV(%1,%2,%3) __rl_DrawTextureV@raylibhsp %1,%2,%3
callfuncex_func _rl_DrawTextureV@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_p p_position,struct_gettotal(rl_Vector2)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawTextureEx "DrawTextureEx"
#deffunc local __rl_DrawTextureEx var p_texture,var p_position,var p_rotation,var p_scale,var p_tint,local return_value
#define global rl_DrawTextureEx(%1,%2,%3,%4,%5) dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DrawTextureEx@raylibhsp %1,%2,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawTextureEx@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_p p_position,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_rotation,struct_typesize(float)*1
callfuncex_p_value p_scale,struct_typesize(float)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawTextureRec "DrawTextureRec"
#deffunc local __rl_DrawTextureRec var p_texture,var p_source,var p_position,var p_tint,local return_value
#define global rl_DrawTextureRec(%1,%2,%3,%4) __rl_DrawTextureRec@raylibhsp %1,%2,%3,%4
callfuncex_func _rl_DrawTextureRec@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_p p_source,struct_gettotal(rl_Rectangle)*1
callfuncex_p p_position,struct_gettotal(rl_Vector2)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawTexturePro "DrawTexturePro"
#deffunc local __rl_DrawTexturePro var p_texture,var p_source,var p_dest,var p_origin,var p_rotation,var p_tint,local return_value
#define global rl_DrawTexturePro(%1,%2,%3,%4,%5,%6) dummy_p5@raylibhsp=%5:__rl_DrawTexturePro@raylibhsp %1,%2,%3,%4,dummy_p5@raylibhsp,%6
callfuncex_func _rl_DrawTexturePro@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_p p_source,struct_gettotal(rl_Rectangle)*1
callfuncex_p p_dest,struct_gettotal(rl_Rectangle)*1
callfuncex_p p_origin,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_rotation,struct_typesize(float)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawTextureNPatch "DrawTextureNPatch"
#deffunc local __rl_DrawTextureNPatch var p_texture,var p_nPatchInfo,var p_dest,var p_origin,var p_rotation,var p_tint,local return_value
#define global rl_DrawTextureNPatch(%1,%2,%3,%4,%5,%6) dummy_p5@raylibhsp=%5:__rl_DrawTextureNPatch@raylibhsp %1,%2,%3,%4,dummy_p5@raylibhsp,%6
callfuncex_func _rl_DrawTextureNPatch@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_p p_nPatchInfo,struct_gettotal(rl_NPatchInfo)*1
callfuncex_p p_dest,struct_gettotal(rl_Rectangle)*1
callfuncex_p p_origin,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_rotation,struct_typesize(float)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_Fade "Fade"
#deffunc local __rl_Fade var return_var,var p_color,var p_alpha,local return_value
#define global rl_Fade(%1,%2,%3) dummy_p3@raylibhsp=%3:__rl_Fade@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _rl_Fade@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Color)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_p_value p_alpha,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_ColorToInt "ColorToInt"
#deffunc local __rl_ColorToInt var p_color,local return_value
#define global rl_ColorToInt(%1) __rl_ColorToInt@raylibhsp %1
callfuncex_func _rl_ColorToInt@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ColorNormalize "ColorNormalize"
#deffunc local __rl_ColorNormalize var return_var,var p_color,local return_value
#define global rl_ColorNormalize(%1,%2) __rl_ColorNormalize@raylibhsp %1,%2
callfuncex_func _rl_ColorNormalize@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Vector4)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ColorFromNormalized "ColorFromNormalized"
#deffunc local __rl_ColorFromNormalized var return_var,var p_normalized,local return_value
#define global rl_ColorFromNormalized(%1,%2) __rl_ColorFromNormalized@raylibhsp %1,%2
callfuncex_func _rl_ColorFromNormalized@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Color)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_normalized,struct_gettotal(rl_Vector4)*1
callfuncex_call return_value
return return_value

#func _rl_ColorToHSV "ColorToHSV"
#deffunc local __rl_ColorToHSV var return_var,var p_color,local return_value
#define global rl_ColorToHSV(%1,%2) __rl_ColorToHSV@raylibhsp %1,%2
callfuncex_func _rl_ColorToHSV@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ColorFromHSV "ColorFromHSV"
#deffunc local __rl_ColorFromHSV var return_var,var p_hue,var p_saturation,var p_value,local return_value
#define global rl_ColorFromHSV(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_ColorFromHSV@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_ColorFromHSV@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Color)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_hue,struct_typesize(float)*1
callfuncex_p_value p_saturation,struct_typesize(float)*1
callfuncex_p_value p_value,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_ColorTint "ColorTint"
#deffunc local __rl_ColorTint var return_var,var p_color,var p_tint,local return_value
#define global rl_ColorTint(%1,%2,%3) __rl_ColorTint@raylibhsp %1,%2,%3
callfuncex_func _rl_ColorTint@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Color)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_ColorBrightness "ColorBrightness"
#deffunc local __rl_ColorBrightness var return_var,var p_color,var p_factor,local return_value
#define global rl_ColorBrightness(%1,%2,%3) dummy_p3@raylibhsp=%3:__rl_ColorBrightness@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _rl_ColorBrightness@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Color)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_p_value p_factor,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_ColorContrast "ColorContrast"
#deffunc local __rl_ColorContrast var return_var,var p_color,var p_contrast,local return_value
#define global rl_ColorContrast(%1,%2,%3) dummy_p3@raylibhsp=%3:__rl_ColorContrast@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _rl_ColorContrast@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Color)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_p_value p_contrast,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_ColorAlpha "ColorAlpha"
#deffunc local __rl_ColorAlpha var return_var,var p_color,var p_alpha,local return_value
#define global rl_ColorAlpha(%1,%2,%3) dummy_p3@raylibhsp=%3:__rl_ColorAlpha@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _rl_ColorAlpha@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Color)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_p_value p_alpha,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_ColorAlphaBlend "ColorAlphaBlend"
#deffunc local __rl_ColorAlphaBlend var return_var,var p_dst,var p_src,var p_tint,local return_value
#define global rl_ColorAlphaBlend(%1,%2,%3,%4) __rl_ColorAlphaBlend@raylibhsp %1,%2,%3,%4
callfuncex_func _rl_ColorAlphaBlend@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Color)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_dst,struct_gettotal(rl_Color)*1
callfuncex_p p_src,struct_gettotal(rl_Color)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_GetColor "GetColor"
#deffunc local __rl_GetColor var return_var,var p_hexValue,local return_value
#define global rl_GetColor(%1,%2) dummy_p2@raylibhsp=%2:__rl_GetColor@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_GetColor@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Color)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_hexValue,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rl_GetPixelColor "GetPixelColor"
#deffunc local __rl_GetPixelColor var return_var,var p_srcPtr,var p_format,local return_value
#define global rl_GetPixelColor(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_GetPixelColor@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_GetPixelColor@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Color)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_srcPtr,struct_typesize(pointer)*1
callfuncex_p_value p_format,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_SetPixelColor "SetPixelColor"
#deffunc local __rl_SetPixelColor var p_dstPtr,var p_color,var p_format,local return_value
#define global rl_SetPixelColor(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p3@raylibhsp=%3:__rl_SetPixelColor@raylibhsp dummy_p1@raylibhsp,%2,dummy_p3@raylibhsp
callfuncex_func _rl_SetPixelColor@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_dstPtr,struct_typesize(pointer)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_p_value p_format,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetPixelDataSize "GetPixelDataSize"
#deffunc local __rl_GetPixelDataSize var p_width,var p_height,var p_format,local return_value
#define global rl_GetPixelDataSize(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_GetPixelDataSize@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_GetPixelDataSize@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p_value p_format,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetFontDefault "GetFontDefault"
#deffunc local __rl_GetFontDefault var return_var,local return_value
#define global rl_GetFontDefault(%1)  __rl_GetFontDefault@raylibhsp %1
callfuncex_func _rl_GetFontDefault@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Font)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _rl_LoadFont "LoadFont"
#deffunc local __rl_LoadFont var return_var,var p_fileName,local return_value
#define global rl_LoadFont(%1,%2) dummy_p2@raylibhsp=%2:__rl_LoadFont@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_LoadFont@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Font)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_LoadFontEx "LoadFontEx"
#deffunc local __rl_LoadFontEx var return_var,var p_fileName,var p_fontSize,var p_fontChars,var p_glyphCount,local return_value
#define global rl_LoadFontEx(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_LoadFontEx@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp
callfuncex_func _rl_LoadFontEx@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Font)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_p_value p_fontSize,struct_typesize(int)*1
callfuncex_p_value p_fontChars,struct_typesize(pointer)*1
callfuncex_p_value p_glyphCount,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_LoadFontFromImage "LoadFontFromImage"
#deffunc local __rl_LoadFontFromImage var return_var,var p_image,var p_key,var p_firstChar,local return_value
#define global rl_LoadFontFromImage(%1,%2,%3,%4) dummy_p4@raylibhsp=%4:__rl_LoadFontFromImage@raylibhsp %1,%2,%3,dummy_p4@raylibhsp
callfuncex_func _rl_LoadFontFromImage@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Font)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_image,struct_gettotal(rl_Image)*1
callfuncex_p p_key,struct_gettotal(rl_Color)*1
callfuncex_p_value p_firstChar,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_LoadFontFromMemory "LoadFontFromMemory"
#deffunc local __rl_LoadFontFromMemory var return_var,var p_fileType,var p_fileData,var p_dataSize,var p_fontSize,var p_fontChars,var p_glyphCount,local return_value
#define global rl_LoadFontFromMemory(%1,%2,%3,%4,%5,%6,%7) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:dummy_p6@raylibhsp=%6:dummy_p7@raylibhsp=%7:__rl_LoadFontFromMemory@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,dummy_p6@raylibhsp,dummy_p7@raylibhsp
callfuncex_func _rl_LoadFontFromMemory@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Font)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_fileType,struct_typesize(pointer)*1
callfuncex_p_value p_fileData,struct_typesize(pointer)*1
callfuncex_p_value p_dataSize,struct_typesize(int)*1
callfuncex_p_value p_fontSize,struct_typesize(int)*1
callfuncex_p_value p_fontChars,struct_typesize(pointer)*1
callfuncex_p_value p_glyphCount,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_IsFontReady "IsFontReady"
#deffunc local __rl_IsFontReady var p_font,local return_value
#define global rl_IsFontReady(%1) __rl_IsFontReady@raylibhsp %1
callfuncex_func _rl_IsFontReady@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_font,struct_gettotal(rl_Font)*1
callfuncex_call return_value
return return_value

#func _rl_LoadFontData "LoadFontData"
#deffunc local __rl_LoadFontData var return_var,var p_fileData,var p_dataSize,var p_fontSize,var p_fontChars,var p_glyphCount,var p_type,local return_value
#define global rl_LoadFontData(%1,%2,%3,%4,%5,%6,%7) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:dummy_p6@raylibhsp=%6:dummy_p7@raylibhsp=%7:__rl_LoadFontData@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,dummy_p6@raylibhsp,dummy_p7@raylibhsp
callfuncex_func _rl_LoadFontData@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_fileData,struct_typesize(pointer)*1
callfuncex_p_value p_dataSize,struct_typesize(int)*1
callfuncex_p_value p_fontSize,struct_typesize(int)*1
callfuncex_p_value p_fontChars,struct_typesize(pointer)*1
callfuncex_p_value p_glyphCount,struct_typesize(int)*1
callfuncex_p_value p_type,struct_typesize(int)*1
callfuncex_call return_var
return

#func _rl_GenImageFontAtlas "GenImageFontAtlas"
#deffunc local __rl_GenImageFontAtlas var return_var,var p_chars,var p_recs,var p_glyphCount,var p_fontSize,var p_padding,var p_packMethod,local return_value
#define global rl_GenImageFontAtlas(%1,%2,%3,%4,%5,%6,%7) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:dummy_p6@raylibhsp=%6:dummy_p7@raylibhsp=%7:__rl_GenImageFontAtlas@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,dummy_p6@raylibhsp,dummy_p7@raylibhsp
callfuncex_func _rl_GenImageFontAtlas@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Image)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_chars,struct_typesize(pointer)*1
callfuncex_p_value p_recs,struct_typesize(pointer)*1
callfuncex_p_value p_glyphCount,struct_typesize(int)*1
callfuncex_p_value p_fontSize,struct_typesize(int)*1
callfuncex_p_value p_padding,struct_typesize(int)*1
callfuncex_p_value p_packMethod,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadFontData "UnloadFontData"
#deffunc local __rl_UnloadFontData var p_chars,var p_glyphCount,local return_value
#define global rl_UnloadFontData(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_UnloadFontData@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_UnloadFontData@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_chars,struct_typesize(pointer)*1
callfuncex_p_value p_glyphCount,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadFont "UnloadFont"
#deffunc local __rl_UnloadFont var p_font,local return_value
#define global rl_UnloadFont(%1) __rl_UnloadFont@raylibhsp %1
callfuncex_func _rl_UnloadFont@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_font,struct_gettotal(rl_Font)*1
callfuncex_call return_value
return return_value

#func _rl_ExportFontAsCode "ExportFontAsCode"
#deffunc local __rl_ExportFontAsCode var p_font,var p_fileName,local return_value
#define global rl_ExportFontAsCode(%1,%2) dummy_p2@raylibhsp=%2:__rl_ExportFontAsCode@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_ExportFontAsCode@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_font,struct_gettotal(rl_Font)*1
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_DrawFPS "DrawFPS"
#deffunc local __rl_DrawFPS var p_posX,var p_posY,local return_value
#define global rl_DrawFPS(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_DrawFPS@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_DrawFPS@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_posX,struct_typesize(int)*1
callfuncex_p_value p_posY,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_DrawText "DrawText"
#deffunc local __rl_DrawText var p_text,var p_posX,var p_posY,var p_fontSize,var p_color,local return_value
#define global rl_DrawText(%1,%2,%3,%4,%5) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DrawText@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawText@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_posX,struct_typesize(int)*1
callfuncex_p_value p_posY,struct_typesize(int)*1
callfuncex_p_value p_fontSize,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawTextEx "DrawTextEx"
#deffunc local __rl_DrawTextEx var p_font,var p_text,var p_position,var p_fontSize,var p_spacing,var p_tint,local return_value
#define global rl_DrawTextEx(%1,%2,%3,%4,%5,%6) dummy_p2@raylibhsp=%2:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_DrawTextEx@raylibhsp %1,dummy_p2@raylibhsp,%3,dummy_p4@raylibhsp,dummy_p5@raylibhsp,%6
callfuncex_func _rl_DrawTextEx@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_font,struct_gettotal(rl_Font)*1
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p p_position,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_fontSize,struct_typesize(float)*1
callfuncex_p_value p_spacing,struct_typesize(float)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawTextPro "DrawTextPro"
#deffunc local __rl_DrawTextPro var p_font,var p_text,var p_position,var p_origin,var p_rotation,var p_fontSize,var p_spacing,var p_tint,local return_value
#define global rl_DrawTextPro(%1,%2,%3,%4,%5,%6,%7,%8) dummy_p2@raylibhsp=%2:dummy_p5@raylibhsp=%5:dummy_p6@raylibhsp=%6:dummy_p7@raylibhsp=%7:__rl_DrawTextPro@raylibhsp %1,dummy_p2@raylibhsp,%3,%4,dummy_p5@raylibhsp,dummy_p6@raylibhsp,dummy_p7@raylibhsp,%8
callfuncex_func _rl_DrawTextPro@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_font,struct_gettotal(rl_Font)*1
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p p_position,struct_gettotal(rl_Vector2)*1
callfuncex_p p_origin,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_rotation,struct_typesize(float)*1
callfuncex_p_value p_fontSize,struct_typesize(float)*1
callfuncex_p_value p_spacing,struct_typesize(float)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawTextCodepoint "DrawTextCodepoint"
#deffunc local __rl_DrawTextCodepoint var p_font,var p_codepoint,var p_position,var p_fontSize,var p_tint,local return_value
#define global rl_DrawTextCodepoint(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p4@raylibhsp=%4:__rl_DrawTextCodepoint@raylibhsp %1,dummy_p2@raylibhsp,%3,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawTextCodepoint@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_font,struct_gettotal(rl_Font)*1
callfuncex_p_value p_codepoint,struct_typesize(int)*1
callfuncex_p p_position,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_fontSize,struct_typesize(float)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawTextCodepoints "DrawTextCodepoints"
#deffunc local __rl_DrawTextCodepoints var p_font,var p_codepoints,var p_count,var p_position,var p_fontSize,var p_spacing,var p_tint,local return_value
#define global rl_DrawTextCodepoints(%1,%2,%3,%4,%5,%6,%7) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p5@raylibhsp=%5:dummy_p6@raylibhsp=%6:__rl_DrawTextCodepoints@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,%4,dummy_p5@raylibhsp,dummy_p6@raylibhsp,%7
callfuncex_func _rl_DrawTextCodepoints@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_font,struct_gettotal(rl_Font)*1
callfuncex_p_value p_codepoints,struct_typesize(pointer)*1
callfuncex_p_value p_count,struct_typesize(int)*1
callfuncex_p p_position,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_fontSize,struct_typesize(float)*1
callfuncex_p_value p_spacing,struct_typesize(float)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_MeasureText "MeasureText"
#deffunc local __rl_MeasureText var p_text,var p_fontSize,local return_value
#define global rl_MeasureText(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_MeasureText@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_MeasureText@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_fontSize,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_MeasureTextEx "MeasureTextEx"
#deffunc local __rl_MeasureTextEx var return_var,var p_font,var p_text,var p_fontSize,var p_spacing,local return_value
#define global rl_MeasureTextEx(%1,%2,%3,%4,%5) dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_MeasureTextEx@raylibhsp %1,%2,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp
callfuncex_func _rl_MeasureTextEx@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_font,struct_gettotal(rl_Font)*1
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_fontSize,struct_typesize(float)*1
callfuncex_p_value p_spacing,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_GetGlyphIndex "GetGlyphIndex"
#deffunc local __rl_GetGlyphIndex var p_font,var p_codepoint,local return_value
#define global rl_GetGlyphIndex(%1,%2) dummy_p2@raylibhsp=%2:__rl_GetGlyphIndex@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_GetGlyphIndex@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p p_font,struct_gettotal(rl_Font)*1
callfuncex_p_value p_codepoint,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetGlyphInfo "GetGlyphInfo"
#deffunc local __rl_GetGlyphInfo var return_var,var p_font,var p_codepoint,local return_value
#define global rl_GetGlyphInfo(%1,%2,%3) dummy_p3@raylibhsp=%3:__rl_GetGlyphInfo@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _rl_GetGlyphInfo@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_GlyphInfo)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_font,struct_gettotal(rl_Font)*1
callfuncex_p_value p_codepoint,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GetGlyphAtlasRec "GetGlyphAtlasRec"
#deffunc local __rl_GetGlyphAtlasRec var return_var,var p_font,var p_codepoint,local return_value
#define global rl_GetGlyphAtlasRec(%1,%2,%3) dummy_p3@raylibhsp=%3:__rl_GetGlyphAtlasRec@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _rl_GetGlyphAtlasRec@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Rectangle)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_font,struct_gettotal(rl_Font)*1
callfuncex_p_value p_codepoint,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_LoadUTF8 "LoadUTF8"
#deffunc local __rl_LoadUTF8 var return_var,var p_codepoints,var p_length,local return_value
#define global rl_LoadUTF8(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_LoadUTF8@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_LoadUTF8@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_codepoints,struct_typesize(pointer)*1
callfuncex_p_value p_length,struct_typesize(int)*1
callfuncex_call return_var
return

#func _rl_UnloadUTF8 "UnloadUTF8"
#deffunc local __rl_UnloadUTF8 var p_text,local return_value
#define global rl_UnloadUTF8(%1) dummy_p1@raylibhsp=%1:__rl_UnloadUTF8@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_UnloadUTF8@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_LoadCodepoints "LoadCodepoints"
#deffunc local __rl_LoadCodepoints var return_var,var p_text,var p_count,local return_value
#define global rl_LoadCodepoints(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_LoadCodepoints@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_LoadCodepoints@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_count,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_UnloadCodepoints "UnloadCodepoints"
#deffunc local __rl_UnloadCodepoints var p_codepoints,local return_value
#define global rl_UnloadCodepoints(%1) dummy_p1@raylibhsp=%1:__rl_UnloadCodepoints@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_UnloadCodepoints@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_codepoints,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_GetCodepointCount "GetCodepointCount"
#deffunc local __rl_GetCodepointCount var p_text,local return_value
#define global rl_GetCodepointCount(%1) dummy_p1@raylibhsp=%1:__rl_GetCodepointCount@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_GetCodepointCount@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_GetCodepoint "GetCodepoint"
#deffunc local __rl_GetCodepoint var p_text,var p_codepointSize,local return_value
#define global rl_GetCodepoint(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_GetCodepoint@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_GetCodepoint@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_codepointSize,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_GetCodepointNext "GetCodepointNext"
#deffunc local __rl_GetCodepointNext var p_text,var p_codepointSize,local return_value
#define global rl_GetCodepointNext(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_GetCodepointNext@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_GetCodepointNext@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_codepointSize,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_GetCodepointPrevious "GetCodepointPrevious"
#deffunc local __rl_GetCodepointPrevious var p_text,var p_codepointSize,local return_value
#define global rl_GetCodepointPrevious(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_GetCodepointPrevious@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_GetCodepointPrevious@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_codepointSize,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_CodepointToUTF8 "CodepointToUTF8"
#deffunc local __rl_CodepointToUTF8 var return_var,var p_codepoint,var p_utf8Size,local return_value
#define global rl_CodepointToUTF8(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_CodepointToUTF8@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_CodepointToUTF8@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_codepoint,struct_typesize(int)*1
callfuncex_p_value p_utf8Size,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_TextCopy "TextCopy"
#deffunc local __rl_TextCopy var p_dst,var p_src,local return_value
#define global rl_TextCopy(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_TextCopy@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_TextCopy@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_dst,struct_typesize(pointer)*1
callfuncex_p_value p_src,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_TextIsEqual "TextIsEqual"
#deffunc local __rl_TextIsEqual var p_text1,var p_text2,local return_value
#define global rl_TextIsEqual(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_TextIsEqual@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_TextIsEqual@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_text1,struct_typesize(pointer)*1
callfuncex_p_value p_text2,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_TextLength "TextLength"
#deffunc local __rl_TextLength var p_text,local return_value
#define global rl_TextLength(%1) dummy_p1@raylibhsp=%1:__rl_TextLength@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_TextLength@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(unsigned_int)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_TextFormat "TextFormat"
#deffunc local __rl_TextFormat var return_var,var p_text,var p_args,local return_value
#define global rl_TextFormat(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_TextFormat@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_TextFormat@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_args,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_TextSubtext "TextSubtext"
#deffunc local __rl_TextSubtext var return_var,var p_text,var p_position,var p_length,local return_value
#define global rl_TextSubtext(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_TextSubtext@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_TextSubtext@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_position,struct_typesize(int)*1
callfuncex_p_value p_length,struct_typesize(int)*1
callfuncex_call return_var
return

#func _rl_TextReplace "TextReplace"
#deffunc local __rl_TextReplace var return_var,var p_text,var p_replace,var p_by,local return_value
#define global rl_TextReplace(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_TextReplace@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_TextReplace@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_replace,struct_typesize(pointer)*1
callfuncex_p_value p_by,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_TextInsert "TextInsert"
#deffunc local __rl_TextInsert var return_var,var p_text,var p_insert,var p_position,local return_value
#define global rl_TextInsert(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_TextInsert@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_TextInsert@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_insert,struct_typesize(pointer)*1
callfuncex_p_value p_position,struct_typesize(int)*1
callfuncex_call return_var
return

#func _rl_TextJoin "TextJoin"
#deffunc local __rl_TextJoin var return_var,var p_textList,var p_count,var p_delimiter,local return_value
#define global rl_TextJoin(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_TextJoin@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_TextJoin@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_textList,struct_typesize(pointer)*1
callfuncex_p_value p_count,struct_typesize(int)*1
callfuncex_p_value p_delimiter,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_TextSplit "TextSplit"
#deffunc local __rl_TextSplit var return_var,var p_text,var p_delimiter,var p_count,local return_value
#define global rl_TextSplit(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_TextSplit@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_TextSplit@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_delimiter,struct_typesize(char)*1
callfuncex_p_value p_count,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_TextAppend "TextAppend"
#deffunc local __rl_TextAppend var p_text,var p_append,var p_position,local return_value
#define global rl_TextAppend(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_TextAppend@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_TextAppend@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_append,struct_typesize(pointer)*1
callfuncex_p_value p_position,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_TextFindIndex "TextFindIndex"
#deffunc local __rl_TextFindIndex var p_text,var p_find,local return_value
#define global rl_TextFindIndex(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_TextFindIndex@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_TextFindIndex@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_p_value p_find,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_TextToUpper "TextToUpper"
#deffunc local __rl_TextToUpper var return_var,var p_text,local return_value
#define global rl_TextToUpper(%1,%2) dummy_p2@raylibhsp=%2:__rl_TextToUpper@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_TextToUpper@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_TextToLower "TextToLower"
#deffunc local __rl_TextToLower var return_var,var p_text,local return_value
#define global rl_TextToLower(%1,%2) dummy_p2@raylibhsp=%2:__rl_TextToLower@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_TextToLower@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_TextToPascal "TextToPascal"
#deffunc local __rl_TextToPascal var return_var,var p_text,local return_value
#define global rl_TextToPascal(%1,%2) dummy_p2@raylibhsp=%2:__rl_TextToPascal@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_TextToPascal@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_TextToInteger "TextToInteger"
#deffunc local __rl_TextToInteger var p_text,local return_value
#define global rl_TextToInteger(%1) dummy_p1@raylibhsp=%1:__rl_TextToInteger@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_TextToInteger@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_text,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_DrawLine3D "DrawLine3D"
#deffunc local __rl_DrawLine3D var p_startPos,var p_endPos,var p_color,local return_value
#define global rl_DrawLine3D(%1,%2,%3) __rl_DrawLine3D@raylibhsp %1,%2,%3
callfuncex_func _rl_DrawLine3D@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_startPos,struct_gettotal(rl_Vector3)*1
callfuncex_p p_endPos,struct_gettotal(rl_Vector3)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawPoint3D "DrawPoint3D"
#deffunc local __rl_DrawPoint3D var p_position,var p_color,local return_value
#define global rl_DrawPoint3D(%1,%2) __rl_DrawPoint3D@raylibhsp %1,%2
callfuncex_func _rl_DrawPoint3D@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_position,struct_gettotal(rl_Vector3)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawCircle3D "DrawCircle3D"
#deffunc local __rl_DrawCircle3D var p_center,var p_radius,var p_rotationAxis,var p_rotationAngle,var p_color,local return_value
#define global rl_DrawCircle3D(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p4@raylibhsp=%4:__rl_DrawCircle3D@raylibhsp %1,dummy_p2@raylibhsp,%3,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawCircle3D@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_center,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p p_rotationAxis,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_rotationAngle,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawTriangle3D "DrawTriangle3D"
#deffunc local __rl_DrawTriangle3D var p_v1,var p_v2,var p_v3,var p_color,local return_value
#define global rl_DrawTriangle3D(%1,%2,%3,%4) __rl_DrawTriangle3D@raylibhsp %1,%2,%3,%4
callfuncex_func _rl_DrawTriangle3D@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_v1,struct_gettotal(rl_Vector3)*1
callfuncex_p p_v2,struct_gettotal(rl_Vector3)*1
callfuncex_p p_v3,struct_gettotal(rl_Vector3)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawTriangleStrip3D "DrawTriangleStrip3D"
#deffunc local __rl_DrawTriangleStrip3D var p_points,var p_pointCount,var p_color,local return_value
#define global rl_DrawTriangleStrip3D(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_DrawTriangleStrip3D@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,%3
callfuncex_func _rl_DrawTriangleStrip3D@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_points,struct_typesize(pointer)*1
callfuncex_p_value p_pointCount,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawCube "DrawCube"
#deffunc local __rl_DrawCube var p_position,var p_width,var p_height,var p_length,var p_color,local return_value
#define global rl_DrawCube(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DrawCube@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawCube@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_position,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_width,struct_typesize(float)*1
callfuncex_p_value p_height,struct_typesize(float)*1
callfuncex_p_value p_length,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawCubeV "DrawCubeV"
#deffunc local __rl_DrawCubeV var p_position,var p_size,var p_color,local return_value
#define global rl_DrawCubeV(%1,%2,%3) __rl_DrawCubeV@raylibhsp %1,%2,%3
callfuncex_func _rl_DrawCubeV@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_position,struct_gettotal(rl_Vector3)*1
callfuncex_p p_size,struct_gettotal(rl_Vector3)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawCubeWires "DrawCubeWires"
#deffunc local __rl_DrawCubeWires var p_position,var p_width,var p_height,var p_length,var p_color,local return_value
#define global rl_DrawCubeWires(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DrawCubeWires@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawCubeWires@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_position,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_width,struct_typesize(float)*1
callfuncex_p_value p_height,struct_typesize(float)*1
callfuncex_p_value p_length,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawCubeWiresV "DrawCubeWiresV"
#deffunc local __rl_DrawCubeWiresV var p_position,var p_size,var p_color,local return_value
#define global rl_DrawCubeWiresV(%1,%2,%3) __rl_DrawCubeWiresV@raylibhsp %1,%2,%3
callfuncex_func _rl_DrawCubeWiresV@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_position,struct_gettotal(rl_Vector3)*1
callfuncex_p p_size,struct_gettotal(rl_Vector3)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawSphere "DrawSphere"
#deffunc local __rl_DrawSphere var p_centerPos,var p_radius,var p_color,local return_value
#define global rl_DrawSphere(%1,%2,%3) dummy_p2@raylibhsp=%2:__rl_DrawSphere@raylibhsp %1,dummy_p2@raylibhsp,%3
callfuncex_func _rl_DrawSphere@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_centerPos,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawSphereEx "DrawSphereEx"
#deffunc local __rl_DrawSphereEx var p_centerPos,var p_radius,var p_rings,var p_slices,var p_color,local return_value
#define global rl_DrawSphereEx(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DrawSphereEx@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawSphereEx@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_centerPos,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p_value p_rings,struct_typesize(int)*1
callfuncex_p_value p_slices,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawSphereWires "DrawSphereWires"
#deffunc local __rl_DrawSphereWires var p_centerPos,var p_radius,var p_rings,var p_slices,var p_color,local return_value
#define global rl_DrawSphereWires(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DrawSphereWires@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawSphereWires@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_centerPos,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p_value p_rings,struct_typesize(int)*1
callfuncex_p_value p_slices,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawCylinder "DrawCylinder"
#deffunc local __rl_DrawCylinder var p_position,var p_radiusTop,var p_radiusBottom,var p_height,var p_slices,var p_color,local return_value
#define global rl_DrawCylinder(%1,%2,%3,%4,%5,%6) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_DrawCylinder@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,%6
callfuncex_func _rl_DrawCylinder@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_position,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_radiusTop,struct_typesize(float)*1
callfuncex_p_value p_radiusBottom,struct_typesize(float)*1
callfuncex_p_value p_height,struct_typesize(float)*1
callfuncex_p_value p_slices,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawCylinderEx "DrawCylinderEx"
#deffunc local __rl_DrawCylinderEx var p_startPos,var p_endPos,var p_startRadius,var p_endRadius,var p_sides,var p_color,local return_value
#define global rl_DrawCylinderEx(%1,%2,%3,%4,%5,%6) dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_DrawCylinderEx@raylibhsp %1,%2,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,%6
callfuncex_func _rl_DrawCylinderEx@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_startPos,struct_gettotal(rl_Vector3)*1
callfuncex_p p_endPos,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_startRadius,struct_typesize(float)*1
callfuncex_p_value p_endRadius,struct_typesize(float)*1
callfuncex_p_value p_sides,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawCylinderWires "DrawCylinderWires"
#deffunc local __rl_DrawCylinderWires var p_position,var p_radiusTop,var p_radiusBottom,var p_height,var p_slices,var p_color,local return_value
#define global rl_DrawCylinderWires(%1,%2,%3,%4,%5,%6) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_DrawCylinderWires@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,%6
callfuncex_func _rl_DrawCylinderWires@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_position,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_radiusTop,struct_typesize(float)*1
callfuncex_p_value p_radiusBottom,struct_typesize(float)*1
callfuncex_p_value p_height,struct_typesize(float)*1
callfuncex_p_value p_slices,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawCylinderWiresEx "DrawCylinderWiresEx"
#deffunc local __rl_DrawCylinderWiresEx var p_startPos,var p_endPos,var p_startRadius,var p_endRadius,var p_sides,var p_color,local return_value
#define global rl_DrawCylinderWiresEx(%1,%2,%3,%4,%5,%6) dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_DrawCylinderWiresEx@raylibhsp %1,%2,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,%6
callfuncex_func _rl_DrawCylinderWiresEx@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_startPos,struct_gettotal(rl_Vector3)*1
callfuncex_p p_endPos,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_startRadius,struct_typesize(float)*1
callfuncex_p_value p_endRadius,struct_typesize(float)*1
callfuncex_p_value p_sides,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawCapsule "DrawCapsule"
#deffunc local __rl_DrawCapsule var p_startPos,var p_endPos,var p_radius,var p_slices,var p_rings,var p_color,local return_value
#define global rl_DrawCapsule(%1,%2,%3,%4,%5,%6) dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_DrawCapsule@raylibhsp %1,%2,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,%6
callfuncex_func _rl_DrawCapsule@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_startPos,struct_gettotal(rl_Vector3)*1
callfuncex_p p_endPos,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p_value p_slices,struct_typesize(int)*1
callfuncex_p_value p_rings,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawCapsuleWires "DrawCapsuleWires"
#deffunc local __rl_DrawCapsuleWires var p_startPos,var p_endPos,var p_radius,var p_slices,var p_rings,var p_color,local return_value
#define global rl_DrawCapsuleWires(%1,%2,%3,%4,%5,%6) dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_DrawCapsuleWires@raylibhsp %1,%2,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,%6
callfuncex_func _rl_DrawCapsuleWires@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_startPos,struct_gettotal(rl_Vector3)*1
callfuncex_p p_endPos,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p_value p_slices,struct_typesize(int)*1
callfuncex_p_value p_rings,struct_typesize(int)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawPlane "DrawPlane"
#deffunc local __rl_DrawPlane var p_centerPos,var p_size,var p_color,local return_value
#define global rl_DrawPlane(%1,%2,%3) __rl_DrawPlane@raylibhsp %1,%2,%3
callfuncex_func _rl_DrawPlane@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_centerPos,struct_gettotal(rl_Vector3)*1
callfuncex_p p_size,struct_gettotal(rl_Vector2)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawRay "DrawRay"
#deffunc local __rl_DrawRay var p_ray,var p_color,local return_value
#define global rl_DrawRay(%1,%2) __rl_DrawRay@raylibhsp %1,%2
callfuncex_func _rl_DrawRay@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_ray,struct_gettotal(rl_Ray)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawGrid "DrawGrid"
#deffunc local __rl_DrawGrid var p_slices,var p_spacing,local return_value
#define global rl_DrawGrid(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_DrawGrid@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_DrawGrid@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_slices,struct_typesize(int)*1
callfuncex_p_value p_spacing,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_LoadModel "LoadModel"
#deffunc local __rl_LoadModel var return_var,var p_fileName,local return_value
#define global rl_LoadModel(%1,%2) dummy_p2@raylibhsp=%2:__rl_LoadModel@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_LoadModel@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Model)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_LoadModelFromMesh "LoadModelFromMesh"
#deffunc local __rl_LoadModelFromMesh var return_var,var p_mesh,local return_value
#define global rl_LoadModelFromMesh(%1,%2) __rl_LoadModelFromMesh@raylibhsp %1,%2
callfuncex_func _rl_LoadModelFromMesh@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Model)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_mesh,struct_gettotal(rl_Mesh)*1
callfuncex_call return_value
return return_value

#func _rl_IsModelReady "IsModelReady"
#deffunc local __rl_IsModelReady var p_model,local return_value
#define global rl_IsModelReady(%1) __rl_IsModelReady@raylibhsp %1
callfuncex_func _rl_IsModelReady@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_model,struct_gettotal(rl_Model)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadModel "UnloadModel"
#deffunc local __rl_UnloadModel var p_model,local return_value
#define global rl_UnloadModel(%1) __rl_UnloadModel@raylibhsp %1
callfuncex_func _rl_UnloadModel@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_model,struct_gettotal(rl_Model)*1
callfuncex_call return_value
return return_value

#func _rl_GetModelBoundingBox "GetModelBoundingBox"
#deffunc local __rl_GetModelBoundingBox var return_var,var p_model,local return_value
#define global rl_GetModelBoundingBox(%1,%2) __rl_GetModelBoundingBox@raylibhsp %1,%2
callfuncex_func _rl_GetModelBoundingBox@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_BoundingBox)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_model,struct_gettotal(rl_Model)*1
callfuncex_call return_value
return return_value

#func _rl_DrawModel "DrawModel"
#deffunc local __rl_DrawModel var p_model,var p_position,var p_scale,var p_tint,local return_value
#define global rl_DrawModel(%1,%2,%3,%4) dummy_p3@raylibhsp=%3:__rl_DrawModel@raylibhsp %1,%2,dummy_p3@raylibhsp,%4
callfuncex_func _rl_DrawModel@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_model,struct_gettotal(rl_Model)*1
callfuncex_p p_position,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_scale,struct_typesize(float)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawModelEx "DrawModelEx"
#deffunc local __rl_DrawModelEx var p_model,var p_position,var p_rotationAxis,var p_rotationAngle,var p_scale,var p_tint,local return_value
#define global rl_DrawModelEx(%1,%2,%3,%4,%5,%6) dummy_p4@raylibhsp=%4:__rl_DrawModelEx@raylibhsp %1,%2,%3,dummy_p4@raylibhsp,%5,%6
callfuncex_func _rl_DrawModelEx@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_model,struct_gettotal(rl_Model)*1
callfuncex_p p_position,struct_gettotal(rl_Vector3)*1
callfuncex_p p_rotationAxis,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_rotationAngle,struct_typesize(float)*1
callfuncex_p p_scale,struct_gettotal(rl_Vector3)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawModelWires "DrawModelWires"
#deffunc local __rl_DrawModelWires var p_model,var p_position,var p_scale,var p_tint,local return_value
#define global rl_DrawModelWires(%1,%2,%3,%4) dummy_p3@raylibhsp=%3:__rl_DrawModelWires@raylibhsp %1,%2,dummy_p3@raylibhsp,%4
callfuncex_func _rl_DrawModelWires@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_model,struct_gettotal(rl_Model)*1
callfuncex_p p_position,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_scale,struct_typesize(float)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawModelWiresEx "DrawModelWiresEx"
#deffunc local __rl_DrawModelWiresEx var p_model,var p_position,var p_rotationAxis,var p_rotationAngle,var p_scale,var p_tint,local return_value
#define global rl_DrawModelWiresEx(%1,%2,%3,%4,%5,%6) dummy_p4@raylibhsp=%4:__rl_DrawModelWiresEx@raylibhsp %1,%2,%3,dummy_p4@raylibhsp,%5,%6
callfuncex_func _rl_DrawModelWiresEx@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_model,struct_gettotal(rl_Model)*1
callfuncex_p p_position,struct_gettotal(rl_Vector3)*1
callfuncex_p p_rotationAxis,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_rotationAngle,struct_typesize(float)*1
callfuncex_p p_scale,struct_gettotal(rl_Vector3)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawBoundingBox "DrawBoundingBox"
#deffunc local __rl_DrawBoundingBox var p_box,var p_color,local return_value
#define global rl_DrawBoundingBox(%1,%2) __rl_DrawBoundingBox@raylibhsp %1,%2
callfuncex_func _rl_DrawBoundingBox@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_box,struct_gettotal(rl_BoundingBox)*1
callfuncex_p p_color,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawBillboard "DrawBillboard"
#deffunc local __rl_DrawBillboard var p_camera,var p_texture,var p_position,var p_size,var p_tint,local return_value
#define global rl_DrawBillboard(%1,%2,%3,%4,%5) dummy_p4@raylibhsp=%4:__rl_DrawBillboard@raylibhsp %1,%2,%3,dummy_p4@raylibhsp,%5
callfuncex_func _rl_DrawBillboard@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_camera,struct_gettotal(rl_Camera)*1
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_p p_position,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_size,struct_typesize(float)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawBillboardRec "DrawBillboardRec"
#deffunc local __rl_DrawBillboardRec var p_camera,var p_texture,var p_source,var p_position,var p_size,var p_tint,local return_value
#define global rl_DrawBillboardRec(%1,%2,%3,%4,%5,%6) __rl_DrawBillboardRec@raylibhsp %1,%2,%3,%4,%5,%6
callfuncex_func _rl_DrawBillboardRec@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_camera,struct_gettotal(rl_Camera)*1
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_p p_source,struct_gettotal(rl_Rectangle)*1
callfuncex_p p_position,struct_gettotal(rl_Vector3)*1
callfuncex_p p_size,struct_gettotal(rl_Vector2)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_DrawBillboardPro "DrawBillboardPro"
#deffunc local __rl_DrawBillboardPro var p_camera,var p_texture,var p_source,var p_position,var p_up,var p_size,var p_origin,var p_rotation,var p_tint,local return_value
#define global rl_DrawBillboardPro(%1,%2,%3,%4,%5,%6,%7,%8,%9) dummy_p8@raylibhsp=%8:__rl_DrawBillboardPro@raylibhsp %1,%2,%3,%4,%5,%6,%7,dummy_p8@raylibhsp,%9
callfuncex_func _rl_DrawBillboardPro@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_camera,struct_gettotal(rl_Camera)*1
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_p p_source,struct_gettotal(rl_Rectangle)*1
callfuncex_p p_position,struct_gettotal(rl_Vector3)*1
callfuncex_p p_up,struct_gettotal(rl_Vector3)*1
callfuncex_p p_size,struct_gettotal(rl_Vector2)*1
callfuncex_p p_origin,struct_gettotal(rl_Vector2)*1
callfuncex_p_value p_rotation,struct_typesize(float)*1
callfuncex_p p_tint,struct_gettotal(rl_Color)*1
callfuncex_call return_value
return return_value

#func _rl_UploadMesh "UploadMesh"
#deffunc local __rl_UploadMesh var p_mesh,var p_dynamic,local return_value
#define global rl_UploadMesh(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_UploadMesh@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_UploadMesh@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_mesh,struct_typesize(pointer)*1
callfuncex_p_value p_dynamic,struct_typesize(bool)*1
callfuncex_call return_value
return return_value

#func _rl_UpdateMeshBuffer "UpdateMeshBuffer"
#deffunc local __rl_UpdateMeshBuffer var p_mesh,var p_index,var p_data,var p_dataSize,var p_offset,local return_value
#define global rl_UpdateMeshBuffer(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_UpdateMeshBuffer@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp
callfuncex_func _rl_UpdateMeshBuffer@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_mesh,struct_gettotal(rl_Mesh)*1
callfuncex_p_value p_index,struct_typesize(int)*1
callfuncex_p_value p_data,struct_typesize(pointer)*1
callfuncex_p_value p_dataSize,struct_typesize(int)*1
callfuncex_p_value p_offset,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadMesh "UnloadMesh"
#deffunc local __rl_UnloadMesh var p_mesh,local return_value
#define global rl_UnloadMesh(%1) __rl_UnloadMesh@raylibhsp %1
callfuncex_func _rl_UnloadMesh@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_mesh,struct_gettotal(rl_Mesh)*1
callfuncex_call return_value
return return_value

#func _rl_DrawMesh "DrawMesh"
#deffunc local __rl_DrawMesh var p_mesh,var p_material,var p_transform,local return_value
#define global rl_DrawMesh(%1,%2,%3) __rl_DrawMesh@raylibhsp %1,%2,%3
callfuncex_func _rl_DrawMesh@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_mesh,struct_gettotal(rl_Mesh)*1
callfuncex_p p_material,struct_gettotal(rl_Material)*1
callfuncex_p p_transform,struct_gettotal(rl_Matrix)*1
callfuncex_call return_value
return return_value

#func _rl_DrawMeshInstanced "DrawMeshInstanced"
#deffunc local __rl_DrawMeshInstanced var p_mesh,var p_material,var p_transforms,var p_instances,local return_value
#define global rl_DrawMeshInstanced(%1,%2,%3,%4) dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_DrawMeshInstanced@raylibhsp %1,%2,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_DrawMeshInstanced@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_mesh,struct_gettotal(rl_Mesh)*1
callfuncex_p p_material,struct_gettotal(rl_Material)*1
callfuncex_p_value p_transforms,struct_typesize(pointer)*1
callfuncex_p_value p_instances,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_ExportMesh "ExportMesh"
#deffunc local __rl_ExportMesh var p_mesh,var p_fileName,local return_value
#define global rl_ExportMesh(%1,%2) dummy_p2@raylibhsp=%2:__rl_ExportMesh@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_ExportMesh@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_mesh,struct_gettotal(rl_Mesh)*1
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_GetMeshBoundingBox "GetMeshBoundingBox"
#deffunc local __rl_GetMeshBoundingBox var return_var,var p_mesh,local return_value
#define global rl_GetMeshBoundingBox(%1,%2) __rl_GetMeshBoundingBox@raylibhsp %1,%2
callfuncex_func _rl_GetMeshBoundingBox@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_BoundingBox)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_mesh,struct_gettotal(rl_Mesh)*1
callfuncex_call return_value
return return_value

#func _rl_GenMeshTangents "GenMeshTangents"
#deffunc local __rl_GenMeshTangents var p_mesh,local return_value
#define global rl_GenMeshTangents(%1) dummy_p1@raylibhsp=%1:__rl_GenMeshTangents@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_GenMeshTangents@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_mesh,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_GenMeshPoly "GenMeshPoly"
#deffunc local __rl_GenMeshPoly var return_var,var p_sides,var p_radius,local return_value
#define global rl_GenMeshPoly(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_GenMeshPoly@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_GenMeshPoly@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Mesh)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_sides,struct_typesize(int)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_GenMeshPlane "GenMeshPlane"
#deffunc local __rl_GenMeshPlane var return_var,var p_width,var p_length,var p_resX,var p_resZ,local return_value
#define global rl_GenMeshPlane(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_GenMeshPlane@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp
callfuncex_func _rl_GenMeshPlane@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Mesh)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_width,struct_typesize(float)*1
callfuncex_p_value p_length,struct_typesize(float)*1
callfuncex_p_value p_resX,struct_typesize(int)*1
callfuncex_p_value p_resZ,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GenMeshCube "GenMeshCube"
#deffunc local __rl_GenMeshCube var return_var,var p_width,var p_height,var p_length,local return_value
#define global rl_GenMeshCube(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_GenMeshCube@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_GenMeshCube@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Mesh)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_width,struct_typesize(float)*1
callfuncex_p_value p_height,struct_typesize(float)*1
callfuncex_p_value p_length,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_GenMeshSphere "GenMeshSphere"
#deffunc local __rl_GenMeshSphere var return_var,var p_radius,var p_rings,var p_slices,local return_value
#define global rl_GenMeshSphere(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_GenMeshSphere@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_GenMeshSphere@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Mesh)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p_value p_rings,struct_typesize(int)*1
callfuncex_p_value p_slices,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GenMeshHemiSphere "GenMeshHemiSphere"
#deffunc local __rl_GenMeshHemiSphere var return_var,var p_radius,var p_rings,var p_slices,local return_value
#define global rl_GenMeshHemiSphere(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_GenMeshHemiSphere@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_GenMeshHemiSphere@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Mesh)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p_value p_rings,struct_typesize(int)*1
callfuncex_p_value p_slices,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GenMeshCylinder "GenMeshCylinder"
#deffunc local __rl_GenMeshCylinder var return_var,var p_radius,var p_height,var p_slices,local return_value
#define global rl_GenMeshCylinder(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_GenMeshCylinder@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_GenMeshCylinder@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Mesh)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p_value p_height,struct_typesize(float)*1
callfuncex_p_value p_slices,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GenMeshCone "GenMeshCone"
#deffunc local __rl_GenMeshCone var return_var,var p_radius,var p_height,var p_slices,local return_value
#define global rl_GenMeshCone(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_GenMeshCone@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_GenMeshCone@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Mesh)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p_value p_height,struct_typesize(float)*1
callfuncex_p_value p_slices,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GenMeshTorus "GenMeshTorus"
#deffunc local __rl_GenMeshTorus var return_var,var p_radius,var p_size,var p_radSeg,var p_sides,local return_value
#define global rl_GenMeshTorus(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_GenMeshTorus@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp
callfuncex_func _rl_GenMeshTorus@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Mesh)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p_value p_size,struct_typesize(float)*1
callfuncex_p_value p_radSeg,struct_typesize(int)*1
callfuncex_p_value p_sides,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GenMeshKnot "GenMeshKnot"
#deffunc local __rl_GenMeshKnot var return_var,var p_radius,var p_size,var p_radSeg,var p_sides,local return_value
#define global rl_GenMeshKnot(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rl_GenMeshKnot@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp
callfuncex_func _rl_GenMeshKnot@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Mesh)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_p_value p_size,struct_typesize(float)*1
callfuncex_p_value p_radSeg,struct_typesize(int)*1
callfuncex_p_value p_sides,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_GenMeshHeightmap "GenMeshHeightmap"
#deffunc local __rl_GenMeshHeightmap var return_var,var p_heightmap,var p_size,local return_value
#define global rl_GenMeshHeightmap(%1,%2,%3) __rl_GenMeshHeightmap@raylibhsp %1,%2,%3
callfuncex_func _rl_GenMeshHeightmap@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Mesh)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_heightmap,struct_gettotal(rl_Image)*1
callfuncex_p p_size,struct_gettotal(rl_Vector3)*1
callfuncex_call return_value
return return_value

#func _rl_GenMeshCubicmap "GenMeshCubicmap"
#deffunc local __rl_GenMeshCubicmap var return_var,var p_cubicmap,var p_cubeSize,local return_value
#define global rl_GenMeshCubicmap(%1,%2,%3) __rl_GenMeshCubicmap@raylibhsp %1,%2,%3
callfuncex_func _rl_GenMeshCubicmap@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Mesh)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_cubicmap,struct_gettotal(rl_Image)*1
callfuncex_p p_cubeSize,struct_gettotal(rl_Vector3)*1
callfuncex_call return_value
return return_value

#func _rl_LoadMaterials "LoadMaterials"
#deffunc local __rl_LoadMaterials var return_var,var p_fileName,var p_materialCount,local return_value
#define global rl_LoadMaterials(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_LoadMaterials@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_LoadMaterials@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_p_value p_materialCount,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_LoadMaterialDefault "LoadMaterialDefault"
#deffunc local __rl_LoadMaterialDefault var return_var,local return_value
#define global rl_LoadMaterialDefault(%1)  __rl_LoadMaterialDefault@raylibhsp %1
callfuncex_func _rl_LoadMaterialDefault@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Material)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _rl_IsMaterialReady "IsMaterialReady"
#deffunc local __rl_IsMaterialReady var p_material,local return_value
#define global rl_IsMaterialReady(%1) __rl_IsMaterialReady@raylibhsp %1
callfuncex_func _rl_IsMaterialReady@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_material,struct_gettotal(rl_Material)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadMaterial "UnloadMaterial"
#deffunc local __rl_UnloadMaterial var p_material,local return_value
#define global rl_UnloadMaterial(%1) __rl_UnloadMaterial@raylibhsp %1
callfuncex_func _rl_UnloadMaterial@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_material,struct_gettotal(rl_Material)*1
callfuncex_call return_value
return return_value

#func _rl_SetMaterialTexture "SetMaterialTexture"
#deffunc local __rl_SetMaterialTexture var p_material,var p_mapType,var p_texture,local return_value
#define global rl_SetMaterialTexture(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_SetMaterialTexture@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,%3
callfuncex_func _rl_SetMaterialTexture@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_material,struct_typesize(pointer)*1
callfuncex_p_value p_mapType,struct_typesize(int)*1
callfuncex_p p_texture,struct_gettotal(rl_Texture2D)*1
callfuncex_call return_value
return return_value

#func _rl_SetModelMeshMaterial "SetModelMeshMaterial"
#deffunc local __rl_SetModelMeshMaterial var p_model,var p_meshId,var p_materialId,local return_value
#define global rl_SetModelMeshMaterial(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_SetModelMeshMaterial@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_SetModelMeshMaterial@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_model,struct_typesize(pointer)*1
callfuncex_p_value p_meshId,struct_typesize(int)*1
callfuncex_p_value p_materialId,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_LoadModelAnimations "LoadModelAnimations"
#deffunc local __rl_LoadModelAnimations var return_var,var p_fileName,var p_animCount,local return_value
#define global rl_LoadModelAnimations(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_LoadModelAnimations@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_LoadModelAnimations@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_p_value p_animCount,struct_typesize(pointer)*1
callfuncex_call return_var
return

#func _rl_UpdateModelAnimation "UpdateModelAnimation"
#deffunc local __rl_UpdateModelAnimation var p_model,var p_anim,var p_frame,local return_value
#define global rl_UpdateModelAnimation(%1,%2,%3) dummy_p3@raylibhsp=%3:__rl_UpdateModelAnimation@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _rl_UpdateModelAnimation@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_model,struct_gettotal(rl_Model)*1
callfuncex_p p_anim,struct_gettotal(rl_ModelAnimation)*1
callfuncex_p_value p_frame,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadModelAnimation "UnloadModelAnimation"
#deffunc local __rl_UnloadModelAnimation var p_anim,local return_value
#define global rl_UnloadModelAnimation(%1) __rl_UnloadModelAnimation@raylibhsp %1
callfuncex_func _rl_UnloadModelAnimation@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_anim,struct_gettotal(rl_ModelAnimation)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadModelAnimations "UnloadModelAnimations"
#deffunc local __rl_UnloadModelAnimations var p_animations,var p_count,local return_value
#define global rl_UnloadModelAnimations(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rl_UnloadModelAnimations@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rl_UnloadModelAnimations@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_animations,struct_typesize(pointer)*1
callfuncex_p_value p_count,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rl_IsModelAnimationValid "IsModelAnimationValid"
#deffunc local __rl_IsModelAnimationValid var p_model,var p_anim,local return_value
#define global rl_IsModelAnimationValid(%1,%2) __rl_IsModelAnimationValid@raylibhsp %1,%2
callfuncex_func _rl_IsModelAnimationValid@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_model,struct_gettotal(rl_Model)*1
callfuncex_p p_anim,struct_gettotal(rl_ModelAnimation)*1
callfuncex_call return_value
return return_value

#func _rl_CheckCollisionSpheres "CheckCollisionSpheres"
#deffunc local __rl_CheckCollisionSpheres var p_center1,var p_radius1,var p_center2,var p_radius2,local return_value
#define global rl_CheckCollisionSpheres(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p4@raylibhsp=%4:__rl_CheckCollisionSpheres@raylibhsp %1,dummy_p2@raylibhsp,%3,dummy_p4@raylibhsp
callfuncex_func _rl_CheckCollisionSpheres@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_center1,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_radius1,struct_typesize(float)*1
callfuncex_p p_center2,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_radius2,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_CheckCollisionBoxes "CheckCollisionBoxes"
#deffunc local __rl_CheckCollisionBoxes var p_box1,var p_box2,local return_value
#define global rl_CheckCollisionBoxes(%1,%2) __rl_CheckCollisionBoxes@raylibhsp %1,%2
callfuncex_func _rl_CheckCollisionBoxes@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_box1,struct_gettotal(rl_BoundingBox)*1
callfuncex_p p_box2,struct_gettotal(rl_BoundingBox)*1
callfuncex_call return_value
return return_value

#func _rl_CheckCollisionBoxSphere "CheckCollisionBoxSphere"
#deffunc local __rl_CheckCollisionBoxSphere var p_box,var p_center,var p_radius,local return_value
#define global rl_CheckCollisionBoxSphere(%1,%2,%3) dummy_p3@raylibhsp=%3:__rl_CheckCollisionBoxSphere@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _rl_CheckCollisionBoxSphere@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_box,struct_gettotal(rl_BoundingBox)*1
callfuncex_p p_center,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_GetRayCollisionSphere "GetRayCollisionSphere"
#deffunc local __rl_GetRayCollisionSphere var return_var,var p_ray,var p_center,var p_radius,local return_value
#define global rl_GetRayCollisionSphere(%1,%2,%3,%4) dummy_p4@raylibhsp=%4:__rl_GetRayCollisionSphere@raylibhsp %1,%2,%3,dummy_p4@raylibhsp
callfuncex_func _rl_GetRayCollisionSphere@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_RayCollision)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_ray,struct_gettotal(rl_Ray)*1
callfuncex_p p_center,struct_gettotal(rl_Vector3)*1
callfuncex_p_value p_radius,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_GetRayCollisionBox "GetRayCollisionBox"
#deffunc local __rl_GetRayCollisionBox var return_var,var p_ray,var p_box,local return_value
#define global rl_GetRayCollisionBox(%1,%2,%3) __rl_GetRayCollisionBox@raylibhsp %1,%2,%3
callfuncex_func _rl_GetRayCollisionBox@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_RayCollision)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_ray,struct_gettotal(rl_Ray)*1
callfuncex_p p_box,struct_gettotal(rl_BoundingBox)*1
callfuncex_call return_value
return return_value

#func _rl_GetRayCollisionMesh "GetRayCollisionMesh"
#deffunc local __rl_GetRayCollisionMesh var return_var,var p_ray,var p_mesh,var p_transform,local return_value
#define global rl_GetRayCollisionMesh(%1,%2,%3,%4) __rl_GetRayCollisionMesh@raylibhsp %1,%2,%3,%4
callfuncex_func _rl_GetRayCollisionMesh@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_RayCollision)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_ray,struct_gettotal(rl_Ray)*1
callfuncex_p p_mesh,struct_gettotal(rl_Mesh)*1
callfuncex_p p_transform,struct_gettotal(rl_Matrix)*1
callfuncex_call return_value
return return_value

#func _rl_GetRayCollisionTriangle "GetRayCollisionTriangle"
#deffunc local __rl_GetRayCollisionTriangle var return_var,var p_ray,var p_p1,var p_p2,var p_p3,local return_value
#define global rl_GetRayCollisionTriangle(%1,%2,%3,%4,%5) __rl_GetRayCollisionTriangle@raylibhsp %1,%2,%3,%4,%5
callfuncex_func _rl_GetRayCollisionTriangle@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_RayCollision)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_ray,struct_gettotal(rl_Ray)*1
callfuncex_p p_p1,struct_gettotal(rl_Vector3)*1
callfuncex_p p_p2,struct_gettotal(rl_Vector3)*1
callfuncex_p p_p3,struct_gettotal(rl_Vector3)*1
callfuncex_call return_value
return return_value

#func _rl_GetRayCollisionQuad "GetRayCollisionQuad"
#deffunc local __rl_GetRayCollisionQuad var return_var,var p_ray,var p_p1,var p_p2,var p_p3,var p_p4,local return_value
#define global rl_GetRayCollisionQuad(%1,%2,%3,%4,%5,%6) __rl_GetRayCollisionQuad@raylibhsp %1,%2,%3,%4,%5,%6
callfuncex_func _rl_GetRayCollisionQuad@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_RayCollision)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_ray,struct_gettotal(rl_Ray)*1
callfuncex_p p_p1,struct_gettotal(rl_Vector3)*1
callfuncex_p p_p2,struct_gettotal(rl_Vector3)*1
callfuncex_p p_p3,struct_gettotal(rl_Vector3)*1
callfuncex_p p_p4,struct_gettotal(rl_Vector3)*1
callfuncex_call return_value
return return_value

#func _rl_InitAudioDevice "InitAudioDevice"
#deffunc local __rl_InitAudioDevice local return_value
#define global rl_InitAudioDevice __rl_InitAudioDevice@raylibhsp
callfuncex_func _rl_InitAudioDevice@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_CloseAudioDevice "CloseAudioDevice"
#deffunc local __rl_CloseAudioDevice local return_value
#define global rl_CloseAudioDevice __rl_CloseAudioDevice@raylibhsp
callfuncex_func _rl_CloseAudioDevice@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rl_IsAudioDeviceReady "IsAudioDeviceReady"
#deffunc local __rl_IsAudioDeviceReady local return_value
#define global rl_IsAudioDeviceReady __rl_IsAudioDeviceReady@raylibhsp
callfuncex_func _rl_IsAudioDeviceReady@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_call return_value
return return_value

#func _rl_SetMasterVolume "SetMasterVolume"
#deffunc local __rl_SetMasterVolume var p_volume,local return_value
#define global rl_SetMasterVolume(%1) dummy_p1@raylibhsp=%1:__rl_SetMasterVolume@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_SetMasterVolume@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_volume,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_LoadWave "LoadWave"
#deffunc local __rl_LoadWave var return_var,var p_fileName,local return_value
#define global rl_LoadWave(%1,%2) dummy_p2@raylibhsp=%2:__rl_LoadWave@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_LoadWave@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Wave)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_LoadWaveFromMemory "LoadWaveFromMemory"
#deffunc local __rl_LoadWaveFromMemory var return_var,var p_fileType,var p_fileData,var p_dataSize,local return_value
#define global rl_LoadWaveFromMemory(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_LoadWaveFromMemory@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_LoadWaveFromMemory@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Wave)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_fileType,struct_typesize(pointer)*1
callfuncex_p_value p_fileData,struct_typesize(pointer)*1
callfuncex_p_value p_dataSize,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_IsWaveReady "IsWaveReady"
#deffunc local __rl_IsWaveReady var p_wave,local return_value
#define global rl_IsWaveReady(%1) __rl_IsWaveReady@raylibhsp %1
callfuncex_func _rl_IsWaveReady@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_wave,struct_gettotal(rl_Wave)*1
callfuncex_call return_value
return return_value

#func _rl_LoadSound "LoadSound"
#deffunc local __rl_LoadSound var return_var,var p_fileName,local return_value
#define global rl_LoadSound(%1,%2) dummy_p2@raylibhsp=%2:__rl_LoadSound@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_LoadSound@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Sound)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_LoadSoundFromWave "LoadSoundFromWave"
#deffunc local __rl_LoadSoundFromWave var return_var,var p_wave,local return_value
#define global rl_LoadSoundFromWave(%1,%2) __rl_LoadSoundFromWave@raylibhsp %1,%2
callfuncex_func _rl_LoadSoundFromWave@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Sound)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_wave,struct_gettotal(rl_Wave)*1
callfuncex_call return_value
return return_value

#func _rl_IsSoundReady "IsSoundReady"
#deffunc local __rl_IsSoundReady var p_sound,local return_value
#define global rl_IsSoundReady(%1) __rl_IsSoundReady@raylibhsp %1
callfuncex_func _rl_IsSoundReady@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_sound,struct_gettotal(rl_Sound)*1
callfuncex_call return_value
return return_value

#func _rl_UpdateSound "UpdateSound"
#deffunc local __rl_UpdateSound var p_sound,var p_data,var p_sampleCount,local return_value
#define global rl_UpdateSound(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_UpdateSound@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_UpdateSound@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_sound,struct_gettotal(rl_Sound)*1
callfuncex_p_value p_data,struct_typesize(pointer)*1
callfuncex_p_value p_sampleCount,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadWave "UnloadWave"
#deffunc local __rl_UnloadWave var p_wave,local return_value
#define global rl_UnloadWave(%1) __rl_UnloadWave@raylibhsp %1
callfuncex_func _rl_UnloadWave@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_wave,struct_gettotal(rl_Wave)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadSound "UnloadSound"
#deffunc local __rl_UnloadSound var p_sound,local return_value
#define global rl_UnloadSound(%1) __rl_UnloadSound@raylibhsp %1
callfuncex_func _rl_UnloadSound@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_sound,struct_gettotal(rl_Sound)*1
callfuncex_call return_value
return return_value

#func _rl_ExportWave "ExportWave"
#deffunc local __rl_ExportWave var p_wave,var p_fileName,local return_value
#define global rl_ExportWave(%1,%2) dummy_p2@raylibhsp=%2:__rl_ExportWave@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_ExportWave@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_wave,struct_gettotal(rl_Wave)*1
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_ExportWaveAsCode "ExportWaveAsCode"
#deffunc local __rl_ExportWaveAsCode var p_wave,var p_fileName,local return_value
#define global rl_ExportWaveAsCode(%1,%2) dummy_p2@raylibhsp=%2:__rl_ExportWaveAsCode@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_ExportWaveAsCode@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_wave,struct_gettotal(rl_Wave)*1
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_PlaySound "PlaySound"
#deffunc local __rl_PlaySound var p_sound,local return_value
#define global rl_PlaySound(%1) __rl_PlaySound@raylibhsp %1
callfuncex_func _rl_PlaySound@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_sound,struct_gettotal(rl_Sound)*1
callfuncex_call return_value
return return_value

#func _rl_StopSound "StopSound"
#deffunc local __rl_StopSound var p_sound,local return_value
#define global rl_StopSound(%1) __rl_StopSound@raylibhsp %1
callfuncex_func _rl_StopSound@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_sound,struct_gettotal(rl_Sound)*1
callfuncex_call return_value
return return_value

#func _rl_PauseSound "PauseSound"
#deffunc local __rl_PauseSound var p_sound,local return_value
#define global rl_PauseSound(%1) __rl_PauseSound@raylibhsp %1
callfuncex_func _rl_PauseSound@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_sound,struct_gettotal(rl_Sound)*1
callfuncex_call return_value
return return_value

#func _rl_ResumeSound "ResumeSound"
#deffunc local __rl_ResumeSound var p_sound,local return_value
#define global rl_ResumeSound(%1) __rl_ResumeSound@raylibhsp %1
callfuncex_func _rl_ResumeSound@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_sound,struct_gettotal(rl_Sound)*1
callfuncex_call return_value
return return_value

#func _rl_IsSoundPlaying "IsSoundPlaying"
#deffunc local __rl_IsSoundPlaying var p_sound,local return_value
#define global rl_IsSoundPlaying(%1) __rl_IsSoundPlaying@raylibhsp %1
callfuncex_func _rl_IsSoundPlaying@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_sound,struct_gettotal(rl_Sound)*1
callfuncex_call return_value
return return_value

#func _rl_SetSoundVolume "SetSoundVolume"
#deffunc local __rl_SetSoundVolume var p_sound,var p_volume,local return_value
#define global rl_SetSoundVolume(%1,%2) dummy_p2@raylibhsp=%2:__rl_SetSoundVolume@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_SetSoundVolume@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_sound,struct_gettotal(rl_Sound)*1
callfuncex_p_value p_volume,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_SetSoundPitch "SetSoundPitch"
#deffunc local __rl_SetSoundPitch var p_sound,var p_pitch,local return_value
#define global rl_SetSoundPitch(%1,%2) dummy_p2@raylibhsp=%2:__rl_SetSoundPitch@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_SetSoundPitch@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_sound,struct_gettotal(rl_Sound)*1
callfuncex_p_value p_pitch,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_SetSoundPan "SetSoundPan"
#deffunc local __rl_SetSoundPan var p_sound,var p_pan,local return_value
#define global rl_SetSoundPan(%1,%2) dummy_p2@raylibhsp=%2:__rl_SetSoundPan@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_SetSoundPan@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_sound,struct_gettotal(rl_Sound)*1
callfuncex_p_value p_pan,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_WaveCopy "WaveCopy"
#deffunc local __rl_WaveCopy var return_var,var p_wave,local return_value
#define global rl_WaveCopy(%1,%2) __rl_WaveCopy@raylibhsp %1,%2
callfuncex_func _rl_WaveCopy@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Wave)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_wave,struct_gettotal(rl_Wave)*1
callfuncex_call return_value
return return_value

#func _rl_WaveCrop "WaveCrop"
#deffunc local __rl_WaveCrop var p_wave,var p_initSample,var p_finalSample,local return_value
#define global rl_WaveCrop(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_WaveCrop@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_WaveCrop@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_wave,struct_typesize(pointer)*1
callfuncex_p_value p_initSample,struct_typesize(int)*1
callfuncex_p_value p_finalSample,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_WaveFormat "WaveFormat"
#deffunc local __rl_WaveFormat var p_wave,var p_sampleRate,var p_sampleSize,var p_channels,local return_value
#define global rl_WaveFormat(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_WaveFormat@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_WaveFormat@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_wave,struct_typesize(pointer)*1
callfuncex_p_value p_sampleRate,struct_typesize(int)*1
callfuncex_p_value p_sampleSize,struct_typesize(int)*1
callfuncex_p_value p_channels,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_LoadWaveSamples "LoadWaveSamples"
#deffunc local __rl_LoadWaveSamples var return_var,var p_wave,local return_value
#define global rl_LoadWaveSamples(%1,%2) __rl_LoadWaveSamples@raylibhsp %1,%2
callfuncex_func _rl_LoadWaveSamples@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p p_wave,struct_gettotal(rl_Wave)*1
callfuncex_call return_var
return

#func _rl_UnloadWaveSamples "UnloadWaveSamples"
#deffunc local __rl_UnloadWaveSamples var p_samples,local return_value
#define global rl_UnloadWaveSamples(%1) dummy_p1@raylibhsp=%1:__rl_UnloadWaveSamples@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_UnloadWaveSamples@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_samples,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_LoadMusicStream "LoadMusicStream"
#deffunc local __rl_LoadMusicStream var return_var,var p_fileName,local return_value
#define global rl_LoadMusicStream(%1,%2) dummy_p2@raylibhsp=%2:__rl_LoadMusicStream@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_LoadMusicStream@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Music)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_fileName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rl_LoadMusicStreamFromMemory "LoadMusicStreamFromMemory"
#deffunc local __rl_LoadMusicStreamFromMemory var return_var,var p_fileType,var p_data,var p_dataSize,local return_value
#define global rl_LoadMusicStreamFromMemory(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_LoadMusicStreamFromMemory@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_LoadMusicStreamFromMemory@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_Music)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_fileType,struct_typesize(pointer)*1
callfuncex_p_value p_data,struct_typesize(pointer)*1
callfuncex_p_value p_dataSize,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_IsMusicReady "IsMusicReady"
#deffunc local __rl_IsMusicReady var p_music,local return_value
#define global rl_IsMusicReady(%1) __rl_IsMusicReady@raylibhsp %1
callfuncex_func _rl_IsMusicReady@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_music,struct_gettotal(rl_Music)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadMusicStream "UnloadMusicStream"
#deffunc local __rl_UnloadMusicStream var p_music,local return_value
#define global rl_UnloadMusicStream(%1) __rl_UnloadMusicStream@raylibhsp %1
callfuncex_func _rl_UnloadMusicStream@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_music,struct_gettotal(rl_Music)*1
callfuncex_call return_value
return return_value

#func _rl_PlayMusicStream "PlayMusicStream"
#deffunc local __rl_PlayMusicStream var p_music,local return_value
#define global rl_PlayMusicStream(%1) __rl_PlayMusicStream@raylibhsp %1
callfuncex_func _rl_PlayMusicStream@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_music,struct_gettotal(rl_Music)*1
callfuncex_call return_value
return return_value

#func _rl_IsMusicStreamPlaying "IsMusicStreamPlaying"
#deffunc local __rl_IsMusicStreamPlaying var p_music,local return_value
#define global rl_IsMusicStreamPlaying(%1) __rl_IsMusicStreamPlaying@raylibhsp %1
callfuncex_func _rl_IsMusicStreamPlaying@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_music,struct_gettotal(rl_Music)*1
callfuncex_call return_value
return return_value

#func _rl_UpdateMusicStream "UpdateMusicStream"
#deffunc local __rl_UpdateMusicStream var p_music,local return_value
#define global rl_UpdateMusicStream(%1) __rl_UpdateMusicStream@raylibhsp %1
callfuncex_func _rl_UpdateMusicStream@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_music,struct_gettotal(rl_Music)*1
callfuncex_call return_value
return return_value

#func _rl_StopMusicStream "StopMusicStream"
#deffunc local __rl_StopMusicStream var p_music,local return_value
#define global rl_StopMusicStream(%1) __rl_StopMusicStream@raylibhsp %1
callfuncex_func _rl_StopMusicStream@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_music,struct_gettotal(rl_Music)*1
callfuncex_call return_value
return return_value

#func _rl_PauseMusicStream "PauseMusicStream"
#deffunc local __rl_PauseMusicStream var p_music,local return_value
#define global rl_PauseMusicStream(%1) __rl_PauseMusicStream@raylibhsp %1
callfuncex_func _rl_PauseMusicStream@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_music,struct_gettotal(rl_Music)*1
callfuncex_call return_value
return return_value

#func _rl_ResumeMusicStream "ResumeMusicStream"
#deffunc local __rl_ResumeMusicStream var p_music,local return_value
#define global rl_ResumeMusicStream(%1) __rl_ResumeMusicStream@raylibhsp %1
callfuncex_func _rl_ResumeMusicStream@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_music,struct_gettotal(rl_Music)*1
callfuncex_call return_value
return return_value

#func _rl_SeekMusicStream "SeekMusicStream"
#deffunc local __rl_SeekMusicStream var p_music,var p_position,local return_value
#define global rl_SeekMusicStream(%1,%2) dummy_p2@raylibhsp=%2:__rl_SeekMusicStream@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_SeekMusicStream@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_music,struct_gettotal(rl_Music)*1
callfuncex_p_value p_position,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_SetMusicVolume "SetMusicVolume"
#deffunc local __rl_SetMusicVolume var p_music,var p_volume,local return_value
#define global rl_SetMusicVolume(%1,%2) dummy_p2@raylibhsp=%2:__rl_SetMusicVolume@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_SetMusicVolume@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_music,struct_gettotal(rl_Music)*1
callfuncex_p_value p_volume,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_SetMusicPitch "SetMusicPitch"
#deffunc local __rl_SetMusicPitch var p_music,var p_pitch,local return_value
#define global rl_SetMusicPitch(%1,%2) dummy_p2@raylibhsp=%2:__rl_SetMusicPitch@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_SetMusicPitch@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_music,struct_gettotal(rl_Music)*1
callfuncex_p_value p_pitch,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_SetMusicPan "SetMusicPan"
#deffunc local __rl_SetMusicPan var p_music,var p_pan,local return_value
#define global rl_SetMusicPan(%1,%2) dummy_p2@raylibhsp=%2:__rl_SetMusicPan@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_SetMusicPan@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_music,struct_gettotal(rl_Music)*1
callfuncex_p_value p_pan,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_GetMusicTimeLength "GetMusicTimeLength"
#deffunc local __rl_GetMusicTimeLength var p_music,local return_value
#define global rl_GetMusicTimeLength(%1) __rl_GetMusicTimeLength@raylibhsp %1
callfuncex_func _rl_GetMusicTimeLength@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_music,struct_gettotal(rl_Music)*1
callfuncex_call return_value
return return_value

#func _rl_GetMusicTimePlayed "GetMusicTimePlayed"
#deffunc local __rl_GetMusicTimePlayed var p_music,local return_value
#define global rl_GetMusicTimePlayed(%1) __rl_GetMusicTimePlayed@raylibhsp %1
callfuncex_func _rl_GetMusicTimePlayed@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_music,struct_gettotal(rl_Music)*1
callfuncex_call return_value
return return_value

#func _rl_LoadAudioStream "LoadAudioStream"
#deffunc local __rl_LoadAudioStream var return_var,var p_sampleRate,var p_sampleSize,var p_channels,local return_value
#define global rl_LoadAudioStream(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rl_LoadAudioStream@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rl_LoadAudioStream@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rl_AudioStream)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_sampleRate,struct_typesize(unsigned_int)*1
callfuncex_p_value p_sampleSize,struct_typesize(unsigned_int)*1
callfuncex_p_value p_channels,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rl_IsAudioStreamReady "IsAudioStreamReady"
#deffunc local __rl_IsAudioStreamReady var p_stream,local return_value
#define global rl_IsAudioStreamReady(%1) __rl_IsAudioStreamReady@raylibhsp %1
callfuncex_func _rl_IsAudioStreamReady@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_stream,struct_gettotal(rl_AudioStream)*1
callfuncex_call return_value
return return_value

#func _rl_UnloadAudioStream "UnloadAudioStream"
#deffunc local __rl_UnloadAudioStream var p_stream,local return_value
#define global rl_UnloadAudioStream(%1) __rl_UnloadAudioStream@raylibhsp %1
callfuncex_func _rl_UnloadAudioStream@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_stream,struct_gettotal(rl_AudioStream)*1
callfuncex_call return_value
return return_value

#func _rl_UpdateAudioStream "UpdateAudioStream"
#deffunc local __rl_UpdateAudioStream var p_stream,var p_data,var p_frameCount,local return_value
#define global rl_UpdateAudioStream(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rl_UpdateAudioStream@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rl_UpdateAudioStream@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_stream,struct_gettotal(rl_AudioStream)*1
callfuncex_p_value p_data,struct_typesize(pointer)*1
callfuncex_p_value p_frameCount,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_IsAudioStreamProcessed "IsAudioStreamProcessed"
#deffunc local __rl_IsAudioStreamProcessed var p_stream,local return_value
#define global rl_IsAudioStreamProcessed(%1) __rl_IsAudioStreamProcessed@raylibhsp %1
callfuncex_func _rl_IsAudioStreamProcessed@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_stream,struct_gettotal(rl_AudioStream)*1
callfuncex_call return_value
return return_value

#func _rl_PlayAudioStream "PlayAudioStream"
#deffunc local __rl_PlayAudioStream var p_stream,local return_value
#define global rl_PlayAudioStream(%1) __rl_PlayAudioStream@raylibhsp %1
callfuncex_func _rl_PlayAudioStream@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_stream,struct_gettotal(rl_AudioStream)*1
callfuncex_call return_value
return return_value

#func _rl_PauseAudioStream "PauseAudioStream"
#deffunc local __rl_PauseAudioStream var p_stream,local return_value
#define global rl_PauseAudioStream(%1) __rl_PauseAudioStream@raylibhsp %1
callfuncex_func _rl_PauseAudioStream@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_stream,struct_gettotal(rl_AudioStream)*1
callfuncex_call return_value
return return_value

#func _rl_ResumeAudioStream "ResumeAudioStream"
#deffunc local __rl_ResumeAudioStream var p_stream,local return_value
#define global rl_ResumeAudioStream(%1) __rl_ResumeAudioStream@raylibhsp %1
callfuncex_func _rl_ResumeAudioStream@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_stream,struct_gettotal(rl_AudioStream)*1
callfuncex_call return_value
return return_value

#func _rl_IsAudioStreamPlaying "IsAudioStreamPlaying"
#deffunc local __rl_IsAudioStreamPlaying var p_stream,local return_value
#define global rl_IsAudioStreamPlaying(%1) __rl_IsAudioStreamPlaying@raylibhsp %1
callfuncex_func _rl_IsAudioStreamPlaying@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p p_stream,struct_gettotal(rl_AudioStream)*1
callfuncex_call return_value
return return_value

#func _rl_StopAudioStream "StopAudioStream"
#deffunc local __rl_StopAudioStream var p_stream,local return_value
#define global rl_StopAudioStream(%1) __rl_StopAudioStream@raylibhsp %1
callfuncex_func _rl_StopAudioStream@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_stream,struct_gettotal(rl_AudioStream)*1
callfuncex_call return_value
return return_value

#func _rl_SetAudioStreamVolume "SetAudioStreamVolume"
#deffunc local __rl_SetAudioStreamVolume var p_stream,var p_volume,local return_value
#define global rl_SetAudioStreamVolume(%1,%2) dummy_p2@raylibhsp=%2:__rl_SetAudioStreamVolume@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_SetAudioStreamVolume@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_stream,struct_gettotal(rl_AudioStream)*1
callfuncex_p_value p_volume,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_SetAudioStreamPitch "SetAudioStreamPitch"
#deffunc local __rl_SetAudioStreamPitch var p_stream,var p_pitch,local return_value
#define global rl_SetAudioStreamPitch(%1,%2) dummy_p2@raylibhsp=%2:__rl_SetAudioStreamPitch@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_SetAudioStreamPitch@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_stream,struct_gettotal(rl_AudioStream)*1
callfuncex_p_value p_pitch,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_SetAudioStreamPan "SetAudioStreamPan"
#deffunc local __rl_SetAudioStreamPan var p_stream,var p_pan,local return_value
#define global rl_SetAudioStreamPan(%1,%2) dummy_p2@raylibhsp=%2:__rl_SetAudioStreamPan@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rl_SetAudioStreamPan@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_stream,struct_gettotal(rl_AudioStream)*1
callfuncex_p_value p_pan,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rl_SetAudioStreamBufferSizeDefault "SetAudioStreamBufferSizeDefault"
#deffunc local __rl_SetAudioStreamBufferSizeDefault var p_size,local return_value
#define global rl_SetAudioStreamBufferSizeDefault(%1) dummy_p1@raylibhsp=%1:__rl_SetAudioStreamBufferSizeDefault@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rl_SetAudioStreamBufferSizeDefault@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_size,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rl_SetAudioStreamCallback "SetAudioStreamCallback"
#deffunc local __rl_SetAudioStreamCallback var p_stream,var p_callback,local return_value
#define global rl_SetAudioStreamCallback(%1,%2) __rl_SetAudioStreamCallback@raylibhsp %1,%2
callfuncex_func _rl_SetAudioStreamCallback@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_stream,struct_gettotal(rl_AudioStream)*1
callfuncex_p p_callback,struct_gettotal(rl_AudioCallback)*1
callfuncex_call return_value
return return_value

#func _rl_AttachAudioStreamProcessor "AttachAudioStreamProcessor"
#deffunc local __rl_AttachAudioStreamProcessor var p_stream,var p_processor,local return_value
#define global rl_AttachAudioStreamProcessor(%1,%2) __rl_AttachAudioStreamProcessor@raylibhsp %1,%2
callfuncex_func _rl_AttachAudioStreamProcessor@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_stream,struct_gettotal(rl_AudioStream)*1
callfuncex_p p_processor,struct_gettotal(rl_AudioCallback)*1
callfuncex_call return_value
return return_value

#func _rl_DetachAudioStreamProcessor "DetachAudioStreamProcessor"
#deffunc local __rl_DetachAudioStreamProcessor var p_stream,var p_processor,local return_value
#define global rl_DetachAudioStreamProcessor(%1,%2) __rl_DetachAudioStreamProcessor@raylibhsp %1,%2
callfuncex_func _rl_DetachAudioStreamProcessor@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_stream,struct_gettotal(rl_AudioStream)*1
callfuncex_p p_processor,struct_gettotal(rl_AudioCallback)*1
callfuncex_call return_value
return return_value

#func _rl_AttachAudioMixedProcessor "AttachAudioMixedProcessor"
#deffunc local __rl_AttachAudioMixedProcessor var p_processor,local return_value
#define global rl_AttachAudioMixedProcessor(%1) __rl_AttachAudioMixedProcessor@raylibhsp %1
callfuncex_func _rl_AttachAudioMixedProcessor@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_processor,struct_gettotal(rl_AudioCallback)*1
callfuncex_call return_value
return return_value

#func _rl_DetachAudioMixedProcessor "DetachAudioMixedProcessor"
#deffunc local __rl_DetachAudioMixedProcessor var p_processor,local return_value
#define global rl_DetachAudioMixedProcessor(%1) __rl_DetachAudioMixedProcessor@raylibhsp %1
callfuncex_func _rl_DetachAudioMixedProcessor@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_processor,struct_gettotal(rl_AudioCallback)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlMatrixMode "rlMatrixMode"
#deffunc local __rlgl_rlMatrixMode var p_mode,local return_value
#define global rlgl_rlMatrixMode(%1) dummy_p1@raylibhsp=%1:__rlgl_rlMatrixMode@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlMatrixMode@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_mode,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlPushMatrix "rlPushMatrix"
#deffunc local __rlgl_rlPushMatrix local return_value
#define global rlgl_rlPushMatrix __rlgl_rlPushMatrix@raylibhsp
callfuncex_func _rlgl_rlPushMatrix@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlPopMatrix "rlPopMatrix"
#deffunc local __rlgl_rlPopMatrix local return_value
#define global rlgl_rlPopMatrix __rlgl_rlPopMatrix@raylibhsp
callfuncex_func _rlgl_rlPopMatrix@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlLoadIdentity "rlLoadIdentity"
#deffunc local __rlgl_rlLoadIdentity local return_value
#define global rlgl_rlLoadIdentity __rlgl_rlLoadIdentity@raylibhsp
callfuncex_func _rlgl_rlLoadIdentity@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlTranslatef "rlTranslatef"
#deffunc local __rlgl_rlTranslatef var p_x,var p_y,var p_z,local return_value
#define global rlgl_rlTranslatef(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlTranslatef@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlTranslatef@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_x,struct_typesize(float)*1
callfuncex_p_value p_y,struct_typesize(float)*1
callfuncex_p_value p_z,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlRotatef "rlRotatef"
#deffunc local __rlgl_rlRotatef var p_angle,var p_x,var p_y,var p_z,local return_value
#define global rlgl_rlRotatef(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rlgl_rlRotatef@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rlgl_rlRotatef@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_angle,struct_typesize(float)*1
callfuncex_p_value p_x,struct_typesize(float)*1
callfuncex_p_value p_y,struct_typesize(float)*1
callfuncex_p_value p_z,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlScalef "rlScalef"
#deffunc local __rlgl_rlScalef var p_x,var p_y,var p_z,local return_value
#define global rlgl_rlScalef(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlScalef@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlScalef@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_x,struct_typesize(float)*1
callfuncex_p_value p_y,struct_typesize(float)*1
callfuncex_p_value p_z,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlMultMatrixf "rlMultMatrixf"
#deffunc local __rlgl_rlMultMatrixf var p_matf,local return_value
#define global rlgl_rlMultMatrixf(%1) dummy_p1@raylibhsp=%1:__rlgl_rlMultMatrixf@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlMultMatrixf@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_matf,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlFrustum "rlFrustum"
#deffunc local __rlgl_rlFrustum var p_left,var p_right,var p_bottom,var p_top,var p_znear,var p_zfar,local return_value
#define global rlgl_rlFrustum(%1,%2,%3,%4,%5,%6) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:dummy_p6@raylibhsp=%6:__rlgl_rlFrustum@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,dummy_p6@raylibhsp
callfuncex_func _rlgl_rlFrustum@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_left,struct_typesize(double)*1
callfuncex_p_value p_right,struct_typesize(double)*1
callfuncex_p_value p_bottom,struct_typesize(double)*1
callfuncex_p_value p_top,struct_typesize(double)*1
callfuncex_p_value p_znear,struct_typesize(double)*1
callfuncex_p_value p_zfar,struct_typesize(double)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlOrtho "rlOrtho"
#deffunc local __rlgl_rlOrtho var p_left,var p_right,var p_bottom,var p_top,var p_znear,var p_zfar,local return_value
#define global rlgl_rlOrtho(%1,%2,%3,%4,%5,%6) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:dummy_p6@raylibhsp=%6:__rlgl_rlOrtho@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,dummy_p6@raylibhsp
callfuncex_func _rlgl_rlOrtho@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_left,struct_typesize(double)*1
callfuncex_p_value p_right,struct_typesize(double)*1
callfuncex_p_value p_bottom,struct_typesize(double)*1
callfuncex_p_value p_top,struct_typesize(double)*1
callfuncex_p_value p_znear,struct_typesize(double)*1
callfuncex_p_value p_zfar,struct_typesize(double)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlViewport "rlViewport"
#deffunc local __rlgl_rlViewport var p_x,var p_y,var p_width,var p_height,local return_value
#define global rlgl_rlViewport(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rlgl_rlViewport@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rlgl_rlViewport@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_x,struct_typesize(int)*1
callfuncex_p_value p_y,struct_typesize(int)*1
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlBegin "rlBegin"
#deffunc local __rlgl_rlBegin var p_mode,local return_value
#define global rlgl_rlBegin(%1) dummy_p1@raylibhsp=%1:__rlgl_rlBegin@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlBegin@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_mode,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlEnd "rlEnd"
#deffunc local __rlgl_rlEnd local return_value
#define global rlgl_rlEnd __rlgl_rlEnd@raylibhsp
callfuncex_func _rlgl_rlEnd@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlVertex2i "rlVertex2i"
#deffunc local __rlgl_rlVertex2i var p_x,var p_y,local return_value
#define global rlgl_rlVertex2i(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rlgl_rlVertex2i@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlVertex2i@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_x,struct_typesize(int)*1
callfuncex_p_value p_y,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlVertex2f "rlVertex2f"
#deffunc local __rlgl_rlVertex2f var p_x,var p_y,local return_value
#define global rlgl_rlVertex2f(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rlgl_rlVertex2f@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlVertex2f@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_x,struct_typesize(float)*1
callfuncex_p_value p_y,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlVertex3f "rlVertex3f"
#deffunc local __rlgl_rlVertex3f var p_x,var p_y,var p_z,local return_value
#define global rlgl_rlVertex3f(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlVertex3f@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlVertex3f@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_x,struct_typesize(float)*1
callfuncex_p_value p_y,struct_typesize(float)*1
callfuncex_p_value p_z,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlTexCoord2f "rlTexCoord2f"
#deffunc local __rlgl_rlTexCoord2f var p_x,var p_y,local return_value
#define global rlgl_rlTexCoord2f(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rlgl_rlTexCoord2f@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlTexCoord2f@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_x,struct_typesize(float)*1
callfuncex_p_value p_y,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlNormal3f "rlNormal3f"
#deffunc local __rlgl_rlNormal3f var p_x,var p_y,var p_z,local return_value
#define global rlgl_rlNormal3f(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlNormal3f@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlNormal3f@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_x,struct_typesize(float)*1
callfuncex_p_value p_y,struct_typesize(float)*1
callfuncex_p_value p_z,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlColor4ub "rlColor4ub"
#deffunc local __rlgl_rlColor4ub var p_r,var p_g,var p_b,var p_a,local return_value
#define global rlgl_rlColor4ub(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rlgl_rlColor4ub@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rlgl_rlColor4ub@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_r,struct_typesize(unsigned_char)*1
callfuncex_p_value p_g,struct_typesize(unsigned_char)*1
callfuncex_p_value p_b,struct_typesize(unsigned_char)*1
callfuncex_p_value p_a,struct_typesize(unsigned_char)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlColor3f "rlColor3f"
#deffunc local __rlgl_rlColor3f var p_x,var p_y,var p_z,local return_value
#define global rlgl_rlColor3f(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlColor3f@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlColor3f@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_x,struct_typesize(float)*1
callfuncex_p_value p_y,struct_typesize(float)*1
callfuncex_p_value p_z,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlColor4f "rlColor4f"
#deffunc local __rlgl_rlColor4f var p_x,var p_y,var p_z,var p_w,local return_value
#define global rlgl_rlColor4f(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rlgl_rlColor4f@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rlgl_rlColor4f@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_x,struct_typesize(float)*1
callfuncex_p_value p_y,struct_typesize(float)*1
callfuncex_p_value p_z,struct_typesize(float)*1
callfuncex_p_value p_w,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlEnableVertexArray "rlEnableVertexArray"
#deffunc local __rlgl_rlEnableVertexArray var p_vaoId,local return_value
#define global rlgl_rlEnableVertexArray(%1) dummy_p1@raylibhsp=%1:__rlgl_rlEnableVertexArray@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlEnableVertexArray@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_vaoId,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlDisableVertexArray "rlDisableVertexArray"
#deffunc local __rlgl_rlDisableVertexArray local return_value
#define global rlgl_rlDisableVertexArray __rlgl_rlDisableVertexArray@raylibhsp
callfuncex_func _rlgl_rlDisableVertexArray@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlEnableVertexBuffer "rlEnableVertexBuffer"
#deffunc local __rlgl_rlEnableVertexBuffer var p_id,local return_value
#define global rlgl_rlEnableVertexBuffer(%1) dummy_p1@raylibhsp=%1:__rlgl_rlEnableVertexBuffer@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlEnableVertexBuffer@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlDisableVertexBuffer "rlDisableVertexBuffer"
#deffunc local __rlgl_rlDisableVertexBuffer local return_value
#define global rlgl_rlDisableVertexBuffer __rlgl_rlDisableVertexBuffer@raylibhsp
callfuncex_func _rlgl_rlDisableVertexBuffer@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlEnableVertexBufferElement "rlEnableVertexBufferElement"
#deffunc local __rlgl_rlEnableVertexBufferElement var p_id,local return_value
#define global rlgl_rlEnableVertexBufferElement(%1) dummy_p1@raylibhsp=%1:__rlgl_rlEnableVertexBufferElement@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlEnableVertexBufferElement@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlDisableVertexBufferElement "rlDisableVertexBufferElement"
#deffunc local __rlgl_rlDisableVertexBufferElement local return_value
#define global rlgl_rlDisableVertexBufferElement __rlgl_rlDisableVertexBufferElement@raylibhsp
callfuncex_func _rlgl_rlDisableVertexBufferElement@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlEnableVertexAttribute "rlEnableVertexAttribute"
#deffunc local __rlgl_rlEnableVertexAttribute var p_index,local return_value
#define global rlgl_rlEnableVertexAttribute(%1) dummy_p1@raylibhsp=%1:__rlgl_rlEnableVertexAttribute@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlEnableVertexAttribute@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_index,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlDisableVertexAttribute "rlDisableVertexAttribute"
#deffunc local __rlgl_rlDisableVertexAttribute var p_index,local return_value
#define global rlgl_rlDisableVertexAttribute(%1) dummy_p1@raylibhsp=%1:__rlgl_rlDisableVertexAttribute@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlDisableVertexAttribute@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_index,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlEnableStatePointer "rlEnableStatePointer"
#deffunc local __rlgl_rlEnableStatePointer var p_vertexAttribType,var p_buffer,local return_value
#define global rlgl_rlEnableStatePointer(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rlgl_rlEnableStatePointer@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlEnableStatePointer@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_vertexAttribType,struct_typesize(int)*1
callfuncex_p_value p_buffer,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlDisableStatePointer "rlDisableStatePointer"
#deffunc local __rlgl_rlDisableStatePointer var p_vertexAttribType,local return_value
#define global rlgl_rlDisableStatePointer(%1) dummy_p1@raylibhsp=%1:__rlgl_rlDisableStatePointer@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlDisableStatePointer@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_vertexAttribType,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlActiveTextureSlot "rlActiveTextureSlot"
#deffunc local __rlgl_rlActiveTextureSlot var p_slot,local return_value
#define global rlgl_rlActiveTextureSlot(%1) dummy_p1@raylibhsp=%1:__rlgl_rlActiveTextureSlot@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlActiveTextureSlot@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_slot,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlEnableTexture "rlEnableTexture"
#deffunc local __rlgl_rlEnableTexture var p_id,local return_value
#define global rlgl_rlEnableTexture(%1) dummy_p1@raylibhsp=%1:__rlgl_rlEnableTexture@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlEnableTexture@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlDisableTexture "rlDisableTexture"
#deffunc local __rlgl_rlDisableTexture local return_value
#define global rlgl_rlDisableTexture __rlgl_rlDisableTexture@raylibhsp
callfuncex_func _rlgl_rlDisableTexture@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlEnableTextureCubemap "rlEnableTextureCubemap"
#deffunc local __rlgl_rlEnableTextureCubemap var p_id,local return_value
#define global rlgl_rlEnableTextureCubemap(%1) dummy_p1@raylibhsp=%1:__rlgl_rlEnableTextureCubemap@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlEnableTextureCubemap@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlDisableTextureCubemap "rlDisableTextureCubemap"
#deffunc local __rlgl_rlDisableTextureCubemap local return_value
#define global rlgl_rlDisableTextureCubemap __rlgl_rlDisableTextureCubemap@raylibhsp
callfuncex_func _rlgl_rlDisableTextureCubemap@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlTextureParameters "rlTextureParameters"
#deffunc local __rlgl_rlTextureParameters var p_id,var p_param,var p_value,local return_value
#define global rlgl_rlTextureParameters(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlTextureParameters@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlTextureParameters@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_p_value p_param,struct_typesize(int)*1
callfuncex_p_value p_value,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlCubemapParameters "rlCubemapParameters"
#deffunc local __rlgl_rlCubemapParameters var p_id,var p_param,var p_value,local return_value
#define global rlgl_rlCubemapParameters(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlCubemapParameters@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlCubemapParameters@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_p_value p_param,struct_typesize(int)*1
callfuncex_p_value p_value,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlEnableShader "rlEnableShader"
#deffunc local __rlgl_rlEnableShader var p_id,local return_value
#define global rlgl_rlEnableShader(%1) dummy_p1@raylibhsp=%1:__rlgl_rlEnableShader@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlEnableShader@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlDisableShader "rlDisableShader"
#deffunc local __rlgl_rlDisableShader local return_value
#define global rlgl_rlDisableShader __rlgl_rlDisableShader@raylibhsp
callfuncex_func _rlgl_rlDisableShader@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlEnableFramebuffer "rlEnableFramebuffer"
#deffunc local __rlgl_rlEnableFramebuffer var p_id,local return_value
#define global rlgl_rlEnableFramebuffer(%1) dummy_p1@raylibhsp=%1:__rlgl_rlEnableFramebuffer@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlEnableFramebuffer@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlDisableFramebuffer "rlDisableFramebuffer"
#deffunc local __rlgl_rlDisableFramebuffer local return_value
#define global rlgl_rlDisableFramebuffer __rlgl_rlDisableFramebuffer@raylibhsp
callfuncex_func _rlgl_rlDisableFramebuffer@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlActiveDrawBuffers "rlActiveDrawBuffers"
#deffunc local __rlgl_rlActiveDrawBuffers var p_count,local return_value
#define global rlgl_rlActiveDrawBuffers(%1) dummy_p1@raylibhsp=%1:__rlgl_rlActiveDrawBuffers@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlActiveDrawBuffers@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_count,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlEnableColorBlend "rlEnableColorBlend"
#deffunc local __rlgl_rlEnableColorBlend local return_value
#define global rlgl_rlEnableColorBlend __rlgl_rlEnableColorBlend@raylibhsp
callfuncex_func _rlgl_rlEnableColorBlend@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlDisableColorBlend "rlDisableColorBlend"
#deffunc local __rlgl_rlDisableColorBlend local return_value
#define global rlgl_rlDisableColorBlend __rlgl_rlDisableColorBlend@raylibhsp
callfuncex_func _rlgl_rlDisableColorBlend@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlEnableDepthTest "rlEnableDepthTest"
#deffunc local __rlgl_rlEnableDepthTest local return_value
#define global rlgl_rlEnableDepthTest __rlgl_rlEnableDepthTest@raylibhsp
callfuncex_func _rlgl_rlEnableDepthTest@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlDisableDepthTest "rlDisableDepthTest"
#deffunc local __rlgl_rlDisableDepthTest local return_value
#define global rlgl_rlDisableDepthTest __rlgl_rlDisableDepthTest@raylibhsp
callfuncex_func _rlgl_rlDisableDepthTest@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlEnableDepthMask "rlEnableDepthMask"
#deffunc local __rlgl_rlEnableDepthMask local return_value
#define global rlgl_rlEnableDepthMask __rlgl_rlEnableDepthMask@raylibhsp
callfuncex_func _rlgl_rlEnableDepthMask@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlDisableDepthMask "rlDisableDepthMask"
#deffunc local __rlgl_rlDisableDepthMask local return_value
#define global rlgl_rlDisableDepthMask __rlgl_rlDisableDepthMask@raylibhsp
callfuncex_func _rlgl_rlDisableDepthMask@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlEnableBackfaceCulling "rlEnableBackfaceCulling"
#deffunc local __rlgl_rlEnableBackfaceCulling local return_value
#define global rlgl_rlEnableBackfaceCulling __rlgl_rlEnableBackfaceCulling@raylibhsp
callfuncex_func _rlgl_rlEnableBackfaceCulling@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlDisableBackfaceCulling "rlDisableBackfaceCulling"
#deffunc local __rlgl_rlDisableBackfaceCulling local return_value
#define global rlgl_rlDisableBackfaceCulling __rlgl_rlDisableBackfaceCulling@raylibhsp
callfuncex_func _rlgl_rlDisableBackfaceCulling@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlSetCullFace "rlSetCullFace"
#deffunc local __rlgl_rlSetCullFace var p_mode,local return_value
#define global rlgl_rlSetCullFace(%1) dummy_p1@raylibhsp=%1:__rlgl_rlSetCullFace@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlSetCullFace@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_mode,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlEnableScissorTest "rlEnableScissorTest"
#deffunc local __rlgl_rlEnableScissorTest local return_value
#define global rlgl_rlEnableScissorTest __rlgl_rlEnableScissorTest@raylibhsp
callfuncex_func _rlgl_rlEnableScissorTest@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlDisableScissorTest "rlDisableScissorTest"
#deffunc local __rlgl_rlDisableScissorTest local return_value
#define global rlgl_rlDisableScissorTest __rlgl_rlDisableScissorTest@raylibhsp
callfuncex_func _rlgl_rlDisableScissorTest@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlScissor "rlScissor"
#deffunc local __rlgl_rlScissor var p_x,var p_y,var p_width,var p_height,local return_value
#define global rlgl_rlScissor(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rlgl_rlScissor@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rlgl_rlScissor@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_x,struct_typesize(int)*1
callfuncex_p_value p_y,struct_typesize(int)*1
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlEnableWireMode "rlEnableWireMode"
#deffunc local __rlgl_rlEnableWireMode local return_value
#define global rlgl_rlEnableWireMode __rlgl_rlEnableWireMode@raylibhsp
callfuncex_func _rlgl_rlEnableWireMode@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlDisableWireMode "rlDisableWireMode"
#deffunc local __rlgl_rlDisableWireMode local return_value
#define global rlgl_rlDisableWireMode __rlgl_rlDisableWireMode@raylibhsp
callfuncex_func _rlgl_rlDisableWireMode@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlSetLineWidth "rlSetLineWidth"
#deffunc local __rlgl_rlSetLineWidth var p_width,local return_value
#define global rlgl_rlSetLineWidth(%1) dummy_p1@raylibhsp=%1:__rlgl_rlSetLineWidth@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlSetLineWidth@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_width,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlGetLineWidth "rlGetLineWidth"
#deffunc local __rlgl_rlGetLineWidth local return_value
#define global rlgl_rlGetLineWidth __rlgl_rlGetLineWidth@raylibhsp
callfuncex_func _rlgl_rlGetLineWidth@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_call return_value
return return_value

#func _rlgl_rlEnableSmoothLines "rlEnableSmoothLines"
#deffunc local __rlgl_rlEnableSmoothLines local return_value
#define global rlgl_rlEnableSmoothLines __rlgl_rlEnableSmoothLines@raylibhsp
callfuncex_func _rlgl_rlEnableSmoothLines@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlDisableSmoothLines "rlDisableSmoothLines"
#deffunc local __rlgl_rlDisableSmoothLines local return_value
#define global rlgl_rlDisableSmoothLines __rlgl_rlDisableSmoothLines@raylibhsp
callfuncex_func _rlgl_rlDisableSmoothLines@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlEnableStereoRender "rlEnableStereoRender"
#deffunc local __rlgl_rlEnableStereoRender local return_value
#define global rlgl_rlEnableStereoRender __rlgl_rlEnableStereoRender@raylibhsp
callfuncex_func _rlgl_rlEnableStereoRender@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlDisableStereoRender "rlDisableStereoRender"
#deffunc local __rlgl_rlDisableStereoRender local return_value
#define global rlgl_rlDisableStereoRender __rlgl_rlDisableStereoRender@raylibhsp
callfuncex_func _rlgl_rlDisableStereoRender@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlIsStereoRenderEnabled "rlIsStereoRenderEnabled"
#deffunc local __rlgl_rlIsStereoRenderEnabled local return_value
#define global rlgl_rlIsStereoRenderEnabled __rlgl_rlIsStereoRenderEnabled@raylibhsp
callfuncex_func _rlgl_rlIsStereoRenderEnabled@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_call return_value
return return_value

#func _rlgl_rlClearColor "rlClearColor"
#deffunc local __rlgl_rlClearColor var p_r,var p_g,var p_b,var p_a,local return_value
#define global rlgl_rlClearColor(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rlgl_rlClearColor@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rlgl_rlClearColor@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_r,struct_typesize(unsigned_char)*1
callfuncex_p_value p_g,struct_typesize(unsigned_char)*1
callfuncex_p_value p_b,struct_typesize(unsigned_char)*1
callfuncex_p_value p_a,struct_typesize(unsigned_char)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlClearScreenBuffers "rlClearScreenBuffers"
#deffunc local __rlgl_rlClearScreenBuffers local return_value
#define global rlgl_rlClearScreenBuffers __rlgl_rlClearScreenBuffers@raylibhsp
callfuncex_func _rlgl_rlClearScreenBuffers@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlCheckErrors "rlCheckErrors"
#deffunc local __rlgl_rlCheckErrors local return_value
#define global rlgl_rlCheckErrors __rlgl_rlCheckErrors@raylibhsp
callfuncex_func _rlgl_rlCheckErrors@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlSetBlendMode "rlSetBlendMode"
#deffunc local __rlgl_rlSetBlendMode var p_mode,local return_value
#define global rlgl_rlSetBlendMode(%1) dummy_p1@raylibhsp=%1:__rlgl_rlSetBlendMode@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlSetBlendMode@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_mode,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlSetBlendFactors "rlSetBlendFactors"
#deffunc local __rlgl_rlSetBlendFactors var p_glSrcFactor,var p_glDstFactor,var p_glEquation,local return_value
#define global rlgl_rlSetBlendFactors(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlSetBlendFactors@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlSetBlendFactors@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_glSrcFactor,struct_typesize(int)*1
callfuncex_p_value p_glDstFactor,struct_typesize(int)*1
callfuncex_p_value p_glEquation,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlSetBlendFactorsSeparate "rlSetBlendFactorsSeparate"
#deffunc local __rlgl_rlSetBlendFactorsSeparate var p_glSrcRGB,var p_glDstRGB,var p_glSrcAlpha,var p_glDstAlpha,var p_glEqRGB,var p_glEqAlpha,local return_value
#define global rlgl_rlSetBlendFactorsSeparate(%1,%2,%3,%4,%5,%6) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:dummy_p6@raylibhsp=%6:__rlgl_rlSetBlendFactorsSeparate@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,dummy_p6@raylibhsp
callfuncex_func _rlgl_rlSetBlendFactorsSeparate@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_glSrcRGB,struct_typesize(int)*1
callfuncex_p_value p_glDstRGB,struct_typesize(int)*1
callfuncex_p_value p_glSrcAlpha,struct_typesize(int)*1
callfuncex_p_value p_glDstAlpha,struct_typesize(int)*1
callfuncex_p_value p_glEqRGB,struct_typesize(int)*1
callfuncex_p_value p_glEqAlpha,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlglInit "rlglInit"
#deffunc local __rlgl_rlglInit var p_width,var p_height,local return_value
#define global rlgl_rlglInit(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rlgl_rlglInit@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlglInit@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlglClose "rlglClose"
#deffunc local __rlgl_rlglClose local return_value
#define global rlgl_rlglClose __rlgl_rlglClose@raylibhsp
callfuncex_func _rlgl_rlglClose@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlLoadExtensions "rlLoadExtensions"
#deffunc local __rlgl_rlLoadExtensions var p_loader,local return_value
#define global rlgl_rlLoadExtensions(%1) dummy_p1@raylibhsp=%1:__rlgl_rlLoadExtensions@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlLoadExtensions@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_loader,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlGetVersion "rlGetVersion"
#deffunc local __rlgl_rlGetVersion local return_value
#define global rlgl_rlGetVersion __rlgl_rlGetVersion@raylibhsp
callfuncex_func _rlgl_rlGetVersion@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rlgl_rlSetFramebufferWidth "rlSetFramebufferWidth"
#deffunc local __rlgl_rlSetFramebufferWidth var p_width,local return_value
#define global rlgl_rlSetFramebufferWidth(%1) dummy_p1@raylibhsp=%1:__rlgl_rlSetFramebufferWidth@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlSetFramebufferWidth@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlGetFramebufferWidth "rlGetFramebufferWidth"
#deffunc local __rlgl_rlGetFramebufferWidth local return_value
#define global rlgl_rlGetFramebufferWidth __rlgl_rlGetFramebufferWidth@raylibhsp
callfuncex_func _rlgl_rlGetFramebufferWidth@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rlgl_rlSetFramebufferHeight "rlSetFramebufferHeight"
#deffunc local __rlgl_rlSetFramebufferHeight var p_height,local return_value
#define global rlgl_rlSetFramebufferHeight(%1) dummy_p1@raylibhsp=%1:__rlgl_rlSetFramebufferHeight@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlSetFramebufferHeight@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlGetFramebufferHeight "rlGetFramebufferHeight"
#deffunc local __rlgl_rlGetFramebufferHeight local return_value
#define global rlgl_rlGetFramebufferHeight __rlgl_rlGetFramebufferHeight@raylibhsp
callfuncex_func _rlgl_rlGetFramebufferHeight@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_call return_value
return return_value

#func _rlgl_rlGetTextureIdDefault "rlGetTextureIdDefault"
#deffunc local __rlgl_rlGetTextureIdDefault local return_value
#define global rlgl_rlGetTextureIdDefault __rlgl_rlGetTextureIdDefault@raylibhsp
callfuncex_func _rlgl_rlGetTextureIdDefault@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(unsigned_int)
callfuncex_call return_value
return return_value

#func _rlgl_rlGetShaderIdDefault "rlGetShaderIdDefault"
#deffunc local __rlgl_rlGetShaderIdDefault local return_value
#define global rlgl_rlGetShaderIdDefault __rlgl_rlGetShaderIdDefault@raylibhsp
callfuncex_func _rlgl_rlGetShaderIdDefault@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(unsigned_int)
callfuncex_call return_value
return return_value

#func _rlgl_rlGetShaderLocsDefault "rlGetShaderLocsDefault"
#deffunc local __rlgl_rlGetShaderLocsDefault var return_var,local return_value
#define global rlgl_rlGetShaderLocsDefault(%1)  __rlgl_rlGetShaderLocsDefault@raylibhsp %1
callfuncex_func _rlgl_rlGetShaderLocsDefault@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_call return_var
return

#func _rlgl_rlLoadRenderBatch "rlLoadRenderBatch"
#deffunc local __rlgl_rlLoadRenderBatch var return_var,var p_numBuffers,var p_bufferElements,local return_value
#define global rlgl_rlLoadRenderBatch(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlLoadRenderBatch@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlLoadRenderBatch@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rlgl_rlRenderBatch)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_numBuffers,struct_typesize(int)*1
callfuncex_p_value p_bufferElements,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlUnloadRenderBatch "rlUnloadRenderBatch"
#deffunc local __rlgl_rlUnloadRenderBatch var p_batch,local return_value
#define global rlgl_rlUnloadRenderBatch(%1) __rlgl_rlUnloadRenderBatch@raylibhsp %1
callfuncex_func _rlgl_rlUnloadRenderBatch@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_batch,struct_gettotal(rlgl_rlRenderBatch)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlDrawRenderBatch "rlDrawRenderBatch"
#deffunc local __rlgl_rlDrawRenderBatch var p_batch,local return_value
#define global rlgl_rlDrawRenderBatch(%1) dummy_p1@raylibhsp=%1:__rlgl_rlDrawRenderBatch@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlDrawRenderBatch@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_batch,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlSetRenderBatchActive "rlSetRenderBatchActive"
#deffunc local __rlgl_rlSetRenderBatchActive var p_batch,local return_value
#define global rlgl_rlSetRenderBatchActive(%1) dummy_p1@raylibhsp=%1:__rlgl_rlSetRenderBatchActive@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlSetRenderBatchActive@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_batch,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlDrawRenderBatchActive "rlDrawRenderBatchActive"
#deffunc local __rlgl_rlDrawRenderBatchActive local return_value
#define global rlgl_rlDrawRenderBatchActive __rlgl_rlDrawRenderBatchActive@raylibhsp
callfuncex_func _rlgl_rlDrawRenderBatchActive@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlCheckRenderBatchLimit "rlCheckRenderBatchLimit"
#deffunc local __rlgl_rlCheckRenderBatchLimit var p_vCount,local return_value
#define global rlgl_rlCheckRenderBatchLimit(%1) dummy_p1@raylibhsp=%1:__rlgl_rlCheckRenderBatchLimit@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlCheckRenderBatchLimit@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_vCount,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlSetTexture "rlSetTexture"
#deffunc local __rlgl_rlSetTexture var p_id,local return_value
#define global rlgl_rlSetTexture(%1) dummy_p1@raylibhsp=%1:__rlgl_rlSetTexture@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlSetTexture@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlLoadVertexArray "rlLoadVertexArray"
#deffunc local __rlgl_rlLoadVertexArray local return_value
#define global rlgl_rlLoadVertexArray __rlgl_rlLoadVertexArray@raylibhsp
callfuncex_func _rlgl_rlLoadVertexArray@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(unsigned_int)
callfuncex_call return_value
return return_value

#func _rlgl_rlLoadVertexBuffer "rlLoadVertexBuffer"
#deffunc local __rlgl_rlLoadVertexBuffer var p_buffer,var p_size,var p_dynamic,local return_value
#define global rlgl_rlLoadVertexBuffer(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlLoadVertexBuffer@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlLoadVertexBuffer@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(unsigned_int)
callfuncex_p_value p_buffer,struct_typesize(pointer)*1
callfuncex_p_value p_size,struct_typesize(int)*1
callfuncex_p_value p_dynamic,struct_typesize(bool)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlLoadVertexBufferElement "rlLoadVertexBufferElement"
#deffunc local __rlgl_rlLoadVertexBufferElement var p_buffer,var p_size,var p_dynamic,local return_value
#define global rlgl_rlLoadVertexBufferElement(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlLoadVertexBufferElement@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlLoadVertexBufferElement@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(unsigned_int)
callfuncex_p_value p_buffer,struct_typesize(pointer)*1
callfuncex_p_value p_size,struct_typesize(int)*1
callfuncex_p_value p_dynamic,struct_typesize(bool)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlUpdateVertexBuffer "rlUpdateVertexBuffer"
#deffunc local __rlgl_rlUpdateVertexBuffer var p_bufferId,var p_data,var p_dataSize,var p_offset,local return_value
#define global rlgl_rlUpdateVertexBuffer(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rlgl_rlUpdateVertexBuffer@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rlgl_rlUpdateVertexBuffer@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_bufferId,struct_typesize(unsigned_int)*1
callfuncex_p_value p_data,struct_typesize(pointer)*1
callfuncex_p_value p_dataSize,struct_typesize(int)*1
callfuncex_p_value p_offset,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlUpdateVertexBufferElements "rlUpdateVertexBufferElements"
#deffunc local __rlgl_rlUpdateVertexBufferElements var p_id,var p_data,var p_dataSize,var p_offset,local return_value
#define global rlgl_rlUpdateVertexBufferElements(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rlgl_rlUpdateVertexBufferElements@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rlgl_rlUpdateVertexBufferElements@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_p_value p_data,struct_typesize(pointer)*1
callfuncex_p_value p_dataSize,struct_typesize(int)*1
callfuncex_p_value p_offset,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlUnloadVertexArray "rlUnloadVertexArray"
#deffunc local __rlgl_rlUnloadVertexArray var p_vaoId,local return_value
#define global rlgl_rlUnloadVertexArray(%1) dummy_p1@raylibhsp=%1:__rlgl_rlUnloadVertexArray@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlUnloadVertexArray@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_vaoId,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlUnloadVertexBuffer "rlUnloadVertexBuffer"
#deffunc local __rlgl_rlUnloadVertexBuffer var p_vboId,local return_value
#define global rlgl_rlUnloadVertexBuffer(%1) dummy_p1@raylibhsp=%1:__rlgl_rlUnloadVertexBuffer@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlUnloadVertexBuffer@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_vboId,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlSetVertexAttribute "rlSetVertexAttribute"
#deffunc local __rlgl_rlSetVertexAttribute var p_index,var p_compSize,var p_type,var p_normalized,var p_stride,var p_pointer,local return_value
#define global rlgl_rlSetVertexAttribute(%1,%2,%3,%4,%5,%6) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:dummy_p6@raylibhsp=%6:__rlgl_rlSetVertexAttribute@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,dummy_p6@raylibhsp
callfuncex_func _rlgl_rlSetVertexAttribute@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_index,struct_typesize(unsigned_int)*1
callfuncex_p_value p_compSize,struct_typesize(int)*1
callfuncex_p_value p_type,struct_typesize(int)*1
callfuncex_p_value p_normalized,struct_typesize(bool)*1
callfuncex_p_value p_stride,struct_typesize(int)*1
callfuncex_p_value p_pointer,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlSetVertexAttributeDivisor "rlSetVertexAttributeDivisor"
#deffunc local __rlgl_rlSetVertexAttributeDivisor var p_index,var p_divisor,local return_value
#define global rlgl_rlSetVertexAttributeDivisor(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rlgl_rlSetVertexAttributeDivisor@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlSetVertexAttributeDivisor@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_index,struct_typesize(unsigned_int)*1
callfuncex_p_value p_divisor,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlSetVertexAttributeDefault "rlSetVertexAttributeDefault"
#deffunc local __rlgl_rlSetVertexAttributeDefault var p_locIndex,var p_value,var p_attribType,var p_count,local return_value
#define global rlgl_rlSetVertexAttributeDefault(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rlgl_rlSetVertexAttributeDefault@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rlgl_rlSetVertexAttributeDefault@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_locIndex,struct_typesize(int)*1
callfuncex_p_value p_value,struct_typesize(pointer)*1
callfuncex_p_value p_attribType,struct_typesize(int)*1
callfuncex_p_value p_count,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlDrawVertexArray "rlDrawVertexArray"
#deffunc local __rlgl_rlDrawVertexArray var p_offset,var p_count,local return_value
#define global rlgl_rlDrawVertexArray(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rlgl_rlDrawVertexArray@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlDrawVertexArray@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_offset,struct_typesize(int)*1
callfuncex_p_value p_count,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlDrawVertexArrayElements "rlDrawVertexArrayElements"
#deffunc local __rlgl_rlDrawVertexArrayElements var p_offset,var p_count,var p_buffer,local return_value
#define global rlgl_rlDrawVertexArrayElements(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlDrawVertexArrayElements@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlDrawVertexArrayElements@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_offset,struct_typesize(int)*1
callfuncex_p_value p_count,struct_typesize(int)*1
callfuncex_p_value p_buffer,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlDrawVertexArrayInstanced "rlDrawVertexArrayInstanced"
#deffunc local __rlgl_rlDrawVertexArrayInstanced var p_offset,var p_count,var p_instances,local return_value
#define global rlgl_rlDrawVertexArrayInstanced(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlDrawVertexArrayInstanced@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlDrawVertexArrayInstanced@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_offset,struct_typesize(int)*1
callfuncex_p_value p_count,struct_typesize(int)*1
callfuncex_p_value p_instances,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlDrawVertexArrayElementsInstanced "rlDrawVertexArrayElementsInstanced"
#deffunc local __rlgl_rlDrawVertexArrayElementsInstanced var p_offset,var p_count,var p_buffer,var p_instances,local return_value
#define global rlgl_rlDrawVertexArrayElementsInstanced(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rlgl_rlDrawVertexArrayElementsInstanced@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rlgl_rlDrawVertexArrayElementsInstanced@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_offset,struct_typesize(int)*1
callfuncex_p_value p_count,struct_typesize(int)*1
callfuncex_p_value p_buffer,struct_typesize(pointer)*1
callfuncex_p_value p_instances,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlLoadTexture "rlLoadTexture"
#deffunc local __rlgl_rlLoadTexture var p_data,var p_width,var p_height,var p_format,var p_mipmapCount,local return_value
#define global rlgl_rlLoadTexture(%1,%2,%3,%4,%5) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rlgl_rlLoadTexture@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp
callfuncex_func _rlgl_rlLoadTexture@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(unsigned_int)
callfuncex_p_value p_data,struct_typesize(pointer)*1
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p_value p_format,struct_typesize(int)*1
callfuncex_p_value p_mipmapCount,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlLoadTextureDepth "rlLoadTextureDepth"
#deffunc local __rlgl_rlLoadTextureDepth var p_width,var p_height,var p_useRenderBuffer,local return_value
#define global rlgl_rlLoadTextureDepth(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlLoadTextureDepth@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlLoadTextureDepth@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(unsigned_int)
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p_value p_useRenderBuffer,struct_typesize(bool)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlLoadTextureCubemap "rlLoadTextureCubemap"
#deffunc local __rlgl_rlLoadTextureCubemap var p_data,var p_size,var p_format,local return_value
#define global rlgl_rlLoadTextureCubemap(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlLoadTextureCubemap@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlLoadTextureCubemap@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(unsigned_int)
callfuncex_p_value p_data,struct_typesize(pointer)*1
callfuncex_p_value p_size,struct_typesize(int)*1
callfuncex_p_value p_format,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlUpdateTexture "rlUpdateTexture"
#deffunc local __rlgl_rlUpdateTexture var p_id,var p_offsetX,var p_offsetY,var p_width,var p_height,var p_format,var p_data,local return_value
#define global rlgl_rlUpdateTexture(%1,%2,%3,%4,%5,%6,%7) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:dummy_p6@raylibhsp=%6:dummy_p7@raylibhsp=%7:__rlgl_rlUpdateTexture@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,dummy_p6@raylibhsp,dummy_p7@raylibhsp
callfuncex_func _rlgl_rlUpdateTexture@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_p_value p_offsetX,struct_typesize(int)*1
callfuncex_p_value p_offsetY,struct_typesize(int)*1
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p_value p_format,struct_typesize(int)*1
callfuncex_p_value p_data,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlGetGlTextureFormats "rlGetGlTextureFormats"
#deffunc local __rlgl_rlGetGlTextureFormats var p_format,var p_glInternalFormat,var p_glFormat,var p_glType,local return_value
#define global rlgl_rlGetGlTextureFormats(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rlgl_rlGetGlTextureFormats@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rlgl_rlGetGlTextureFormats@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_format,struct_typesize(int)*1
callfuncex_p_value p_glInternalFormat,struct_typesize(pointer)*1
callfuncex_p_value p_glFormat,struct_typesize(pointer)*1
callfuncex_p_value p_glType,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlGetPixelFormatName "rlGetPixelFormatName"
#deffunc local __rlgl_rlGetPixelFormatName var return_var,var p_format,local return_value
#define global rlgl_rlGetPixelFormatName(%1,%2) dummy_p2@raylibhsp=%2:__rlgl_rlGetPixelFormatName@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlGetPixelFormatName@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_format,struct_typesize(unsigned_int)*1
callfuncex_call return_var
return

#func _rlgl_rlUnloadTexture "rlUnloadTexture"
#deffunc local __rlgl_rlUnloadTexture var p_id,local return_value
#define global rlgl_rlUnloadTexture(%1) dummy_p1@raylibhsp=%1:__rlgl_rlUnloadTexture@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlUnloadTexture@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlGenTextureMipmaps "rlGenTextureMipmaps"
#deffunc local __rlgl_rlGenTextureMipmaps var p_id,var p_width,var p_height,var p_format,var p_mipmaps,local return_value
#define global rlgl_rlGenTextureMipmaps(%1,%2,%3,%4,%5) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rlgl_rlGenTextureMipmaps@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp
callfuncex_func _rlgl_rlGenTextureMipmaps@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p_value p_format,struct_typesize(int)*1
callfuncex_p_value p_mipmaps,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlReadTexturePixels "rlReadTexturePixels"
#deffunc local __rlgl_rlReadTexturePixels var return_var,var p_id,var p_width,var p_height,var p_format,local return_value
#define global rlgl_rlReadTexturePixels(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rlgl_rlReadTexturePixels@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp
callfuncex_func _rlgl_rlReadTexturePixels@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_p_value p_format,struct_typesize(int)*1
callfuncex_call return_var
return

#func _rlgl_rlReadScreenPixels "rlReadScreenPixels"
#deffunc local __rlgl_rlReadScreenPixels var return_var,var p_width,var p_height,local return_value
#define global rlgl_rlReadScreenPixels(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlReadScreenPixels@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlReadScreenPixels@raylibhsp,CALLFUNCEX_RETURN_POINTER,struct_typesize(pointer)
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_call return_var
return

#func _rlgl_rlLoadFramebuffer "rlLoadFramebuffer"
#deffunc local __rlgl_rlLoadFramebuffer var p_width,var p_height,local return_value
#define global rlgl_rlLoadFramebuffer(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rlgl_rlLoadFramebuffer@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlLoadFramebuffer@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(unsigned_int)
callfuncex_p_value p_width,struct_typesize(int)*1
callfuncex_p_value p_height,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlFramebufferAttach "rlFramebufferAttach"
#deffunc local __rlgl_rlFramebufferAttach var p_fboId,var p_texId,var p_attachType,var p_texType,var p_mipLevel,local return_value
#define global rlgl_rlFramebufferAttach(%1,%2,%3,%4,%5) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rlgl_rlFramebufferAttach@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp
callfuncex_func _rlgl_rlFramebufferAttach@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_fboId,struct_typesize(unsigned_int)*1
callfuncex_p_value p_texId,struct_typesize(unsigned_int)*1
callfuncex_p_value p_attachType,struct_typesize(int)*1
callfuncex_p_value p_texType,struct_typesize(int)*1
callfuncex_p_value p_mipLevel,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlFramebufferComplete "rlFramebufferComplete"
#deffunc local __rlgl_rlFramebufferComplete var p_id,local return_value
#define global rlgl_rlFramebufferComplete(%1) dummy_p1@raylibhsp=%1:__rlgl_rlFramebufferComplete@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlFramebufferComplete@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(bool)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlUnloadFramebuffer "rlUnloadFramebuffer"
#deffunc local __rlgl_rlUnloadFramebuffer var p_id,local return_value
#define global rlgl_rlUnloadFramebuffer(%1) dummy_p1@raylibhsp=%1:__rlgl_rlUnloadFramebuffer@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlUnloadFramebuffer@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlLoadShaderCode "rlLoadShaderCode"
#deffunc local __rlgl_rlLoadShaderCode var p_vsCode,var p_fsCode,local return_value
#define global rlgl_rlLoadShaderCode(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rlgl_rlLoadShaderCode@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlLoadShaderCode@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(unsigned_int)
callfuncex_p_value p_vsCode,struct_typesize(pointer)*1
callfuncex_p_value p_fsCode,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlCompileShader "rlCompileShader"
#deffunc local __rlgl_rlCompileShader var p_shaderCode,var p_type,local return_value
#define global rlgl_rlCompileShader(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rlgl_rlCompileShader@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlCompileShader@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(unsigned_int)
callfuncex_p_value p_shaderCode,struct_typesize(pointer)*1
callfuncex_p_value p_type,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlLoadShaderProgram "rlLoadShaderProgram"
#deffunc local __rlgl_rlLoadShaderProgram var p_vShaderId,var p_fShaderId,local return_value
#define global rlgl_rlLoadShaderProgram(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rlgl_rlLoadShaderProgram@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlLoadShaderProgram@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(unsigned_int)
callfuncex_p_value p_vShaderId,struct_typesize(unsigned_int)*1
callfuncex_p_value p_fShaderId,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlUnloadShaderProgram "rlUnloadShaderProgram"
#deffunc local __rlgl_rlUnloadShaderProgram var p_id,local return_value
#define global rlgl_rlUnloadShaderProgram(%1) dummy_p1@raylibhsp=%1:__rlgl_rlUnloadShaderProgram@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlUnloadShaderProgram@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlGetLocationUniform "rlGetLocationUniform"
#deffunc local __rlgl_rlGetLocationUniform var p_shaderId,var p_uniformName,local return_value
#define global rlgl_rlGetLocationUniform(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rlgl_rlGetLocationUniform@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlGetLocationUniform@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_shaderId,struct_typesize(unsigned_int)*1
callfuncex_p_value p_uniformName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlGetLocationAttrib "rlGetLocationAttrib"
#deffunc local __rlgl_rlGetLocationAttrib var p_shaderId,var p_attribName,local return_value
#define global rlgl_rlGetLocationAttrib(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rlgl_rlGetLocationAttrib@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlGetLocationAttrib@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_shaderId,struct_typesize(unsigned_int)*1
callfuncex_p_value p_attribName,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlSetUniform "rlSetUniform"
#deffunc local __rlgl_rlSetUniform var p_locIndex,var p_value,var p_uniformType,var p_count,local return_value
#define global rlgl_rlSetUniform(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rlgl_rlSetUniform@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rlgl_rlSetUniform@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_locIndex,struct_typesize(int)*1
callfuncex_p_value p_value,struct_typesize(pointer)*1
callfuncex_p_value p_uniformType,struct_typesize(int)*1
callfuncex_p_value p_count,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlSetUniformMatrix "rlSetUniformMatrix"
#deffunc local __rlgl_rlSetUniformMatrix var p_locIndex,var p_mat,local return_value
#define global rlgl_rlSetUniformMatrix(%1,%2) dummy_p1@raylibhsp=%1:__rlgl_rlSetUniformMatrix@raylibhsp dummy_p1@raylibhsp,%2
callfuncex_func _rlgl_rlSetUniformMatrix@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_locIndex,struct_typesize(int)*1
callfuncex_p p_mat,struct_gettotal(rlgl_Matrix)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlSetUniformSampler "rlSetUniformSampler"
#deffunc local __rlgl_rlSetUniformSampler var p_locIndex,var p_textureId,local return_value
#define global rlgl_rlSetUniformSampler(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rlgl_rlSetUniformSampler@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlSetUniformSampler@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_locIndex,struct_typesize(int)*1
callfuncex_p_value p_textureId,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlSetShader "rlSetShader"
#deffunc local __rlgl_rlSetShader var p_id,var p_locs,local return_value
#define global rlgl_rlSetShader(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rlgl_rlSetShader@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlSetShader@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_p_value p_locs,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlLoadComputeShaderProgram "rlLoadComputeShaderProgram"
#deffunc local __rlgl_rlLoadComputeShaderProgram var p_shaderId,local return_value
#define global rlgl_rlLoadComputeShaderProgram(%1) dummy_p1@raylibhsp=%1:__rlgl_rlLoadComputeShaderProgram@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlLoadComputeShaderProgram@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(unsigned_int)
callfuncex_p_value p_shaderId,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlComputeShaderDispatch "rlComputeShaderDispatch"
#deffunc local __rlgl_rlComputeShaderDispatch var p_groupX,var p_groupY,var p_groupZ,local return_value
#define global rlgl_rlComputeShaderDispatch(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlComputeShaderDispatch@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlComputeShaderDispatch@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_groupX,struct_typesize(unsigned_int)*1
callfuncex_p_value p_groupY,struct_typesize(unsigned_int)*1
callfuncex_p_value p_groupZ,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlLoadShaderBuffer "rlLoadShaderBuffer"
#deffunc local __rlgl_rlLoadShaderBuffer var p_size,var p_data,var p_usageHint,local return_value
#define global rlgl_rlLoadShaderBuffer(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__rlgl_rlLoadShaderBuffer@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _rlgl_rlLoadShaderBuffer@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(unsigned_int)
callfuncex_p_value p_size,struct_typesize(unsigned_int)*1
callfuncex_p_value p_data,struct_typesize(pointer)*1
callfuncex_p_value p_usageHint,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlUnloadShaderBuffer "rlUnloadShaderBuffer"
#deffunc local __rlgl_rlUnloadShaderBuffer var p_ssboId,local return_value
#define global rlgl_rlUnloadShaderBuffer(%1) dummy_p1@raylibhsp=%1:__rlgl_rlUnloadShaderBuffer@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlUnloadShaderBuffer@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_ssboId,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlUpdateShaderBuffer "rlUpdateShaderBuffer"
#deffunc local __rlgl_rlUpdateShaderBuffer var p_id,var p_data,var p_dataSize,var p_offset,local return_value
#define global rlgl_rlUpdateShaderBuffer(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rlgl_rlUpdateShaderBuffer@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rlgl_rlUpdateShaderBuffer@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_p_value p_data,struct_typesize(pointer)*1
callfuncex_p_value p_dataSize,struct_typesize(unsigned_int)*1
callfuncex_p_value p_offset,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlBindShaderBuffer "rlBindShaderBuffer"
#deffunc local __rlgl_rlBindShaderBuffer var p_id,var p_index,local return_value
#define global rlgl_rlBindShaderBuffer(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__rlgl_rlBindShaderBuffer@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlBindShaderBuffer@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_p_value p_index,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlReadShaderBuffer "rlReadShaderBuffer"
#deffunc local __rlgl_rlReadShaderBuffer var p_id,var p_dest,var p_count,var p_offset,local return_value
#define global rlgl_rlReadShaderBuffer(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rlgl_rlReadShaderBuffer@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rlgl_rlReadShaderBuffer@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_p_value p_dest,struct_typesize(pointer)*1
callfuncex_p_value p_count,struct_typesize(unsigned_int)*1
callfuncex_p_value p_offset,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlCopyShaderBuffer "rlCopyShaderBuffer"
#deffunc local __rlgl_rlCopyShaderBuffer var p_destId,var p_srcId,var p_destOffset,var p_srcOffset,var p_count,local return_value
#define global rlgl_rlCopyShaderBuffer(%1,%2,%3,%4,%5) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__rlgl_rlCopyShaderBuffer@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp
callfuncex_func _rlgl_rlCopyShaderBuffer@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_destId,struct_typesize(unsigned_int)*1
callfuncex_p_value p_srcId,struct_typesize(unsigned_int)*1
callfuncex_p_value p_destOffset,struct_typesize(unsigned_int)*1
callfuncex_p_value p_srcOffset,struct_typesize(unsigned_int)*1
callfuncex_p_value p_count,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlGetShaderBufferSize "rlGetShaderBufferSize"
#deffunc local __rlgl_rlGetShaderBufferSize var p_id,local return_value
#define global rlgl_rlGetShaderBufferSize(%1) dummy_p1@raylibhsp=%1:__rlgl_rlGetShaderBufferSize@raylibhsp dummy_p1@raylibhsp
callfuncex_func _rlgl_rlGetShaderBufferSize@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(unsigned_int)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlBindImageTexture "rlBindImageTexture"
#deffunc local __rlgl_rlBindImageTexture var p_id,var p_index,var p_format,var p_readonly,local return_value
#define global rlgl_rlBindImageTexture(%1,%2,%3,%4) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__rlgl_rlBindImageTexture@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _rlgl_rlBindImageTexture@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_id,struct_typesize(unsigned_int)*1
callfuncex_p_value p_index,struct_typesize(unsigned_int)*1
callfuncex_p_value p_format,struct_typesize(int)*1
callfuncex_p_value p_readonly,struct_typesize(bool)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlGetMatrixModelview "rlGetMatrixModelview"
#deffunc local __rlgl_rlGetMatrixModelview var return_var,local return_value
#define global rlgl_rlGetMatrixModelview(%1)  __rlgl_rlGetMatrixModelview@raylibhsp %1
callfuncex_func _rlgl_rlGetMatrixModelview@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rlgl_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _rlgl_rlGetMatrixProjection "rlGetMatrixProjection"
#deffunc local __rlgl_rlGetMatrixProjection var return_var,local return_value
#define global rlgl_rlGetMatrixProjection(%1)  __rlgl_rlGetMatrixProjection@raylibhsp %1
callfuncex_func _rlgl_rlGetMatrixProjection@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rlgl_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _rlgl_rlGetMatrixTransform "rlGetMatrixTransform"
#deffunc local __rlgl_rlGetMatrixTransform var return_var,local return_value
#define global rlgl_rlGetMatrixTransform(%1)  __rlgl_rlGetMatrixTransform@raylibhsp %1
callfuncex_func _rlgl_rlGetMatrixTransform@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rlgl_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _rlgl_rlGetMatrixProjectionStereo "rlGetMatrixProjectionStereo"
#deffunc local __rlgl_rlGetMatrixProjectionStereo var return_var,var p_eye,local return_value
#define global rlgl_rlGetMatrixProjectionStereo(%1,%2) dummy_p2@raylibhsp=%2:__rlgl_rlGetMatrixProjectionStereo@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlGetMatrixProjectionStereo@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rlgl_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_eye,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlGetMatrixViewOffsetStereo "rlGetMatrixViewOffsetStereo"
#deffunc local __rlgl_rlGetMatrixViewOffsetStereo var return_var,var p_eye,local return_value
#define global rlgl_rlGetMatrixViewOffsetStereo(%1,%2) dummy_p2@raylibhsp=%2:__rlgl_rlGetMatrixViewOffsetStereo@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _rlgl_rlGetMatrixViewOffsetStereo@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(rlgl_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_eye,struct_typesize(int)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlSetMatrixProjection "rlSetMatrixProjection"
#deffunc local __rlgl_rlSetMatrixProjection var p_proj,local return_value
#define global rlgl_rlSetMatrixProjection(%1) __rlgl_rlSetMatrixProjection@raylibhsp %1
callfuncex_func _rlgl_rlSetMatrixProjection@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_proj,struct_gettotal(rlgl_Matrix)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlSetMatrixModelview "rlSetMatrixModelview"
#deffunc local __rlgl_rlSetMatrixModelview var p_view,local return_value
#define global rlgl_rlSetMatrixModelview(%1) __rlgl_rlSetMatrixModelview@raylibhsp %1
callfuncex_func _rlgl_rlSetMatrixModelview@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_view,struct_gettotal(rlgl_Matrix)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlSetMatrixProjectionStereo "rlSetMatrixProjectionStereo"
#deffunc local __rlgl_rlSetMatrixProjectionStereo var p_right,var p_left,local return_value
#define global rlgl_rlSetMatrixProjectionStereo(%1,%2) __rlgl_rlSetMatrixProjectionStereo@raylibhsp %1,%2
callfuncex_func _rlgl_rlSetMatrixProjectionStereo@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_right,struct_gettotal(rlgl_Matrix)*1
callfuncex_p p_left,struct_gettotal(rlgl_Matrix)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlSetMatrixViewOffsetStereo "rlSetMatrixViewOffsetStereo"
#deffunc local __rlgl_rlSetMatrixViewOffsetStereo var p_right,var p_left,local return_value
#define global rlgl_rlSetMatrixViewOffsetStereo(%1,%2) __rlgl_rlSetMatrixViewOffsetStereo@raylibhsp %1,%2
callfuncex_func _rlgl_rlSetMatrixViewOffsetStereo@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_right,struct_gettotal(rlgl_Matrix)*1
callfuncex_p p_left,struct_gettotal(rlgl_Matrix)*1
callfuncex_call return_value
return return_value

#func _rlgl_rlLoadDrawCube "rlLoadDrawCube"
#deffunc local __rlgl_rlLoadDrawCube local return_value
#define global rlgl_rlLoadDrawCube __rlgl_rlLoadDrawCube@raylibhsp
callfuncex_func _rlgl_rlLoadDrawCube@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _rlgl_rlLoadDrawQuad "rlLoadDrawQuad"
#deffunc local __rlgl_rlLoadDrawQuad local return_value
#define global rlgl_rlLoadDrawQuad __rlgl_rlLoadDrawQuad@raylibhsp
callfuncex_func _rlgl_rlLoadDrawQuad@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_call return_value
return return_value

#func _raymath_Clamp "Clamp"
#deffunc local __raymath_Clamp var p_value,var p_min,var p_max,local return_value
#define global raymath_Clamp(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__raymath_Clamp@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _raymath_Clamp@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p_value p_value,struct_typesize(float)*1
callfuncex_p_value p_min,struct_typesize(float)*1
callfuncex_p_value p_max,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Lerp "Lerp"
#deffunc local __raymath_Lerp var p_start,var p_end,var p_amount,local return_value
#define global raymath_Lerp(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__raymath_Lerp@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _raymath_Lerp@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p_value p_start,struct_typesize(float)*1
callfuncex_p_value p_end,struct_typesize(float)*1
callfuncex_p_value p_amount,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Normalize "Normalize"
#deffunc local __raymath_Normalize var p_value,var p_start,var p_end,local return_value
#define global raymath_Normalize(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__raymath_Normalize@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _raymath_Normalize@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p_value p_value,struct_typesize(float)*1
callfuncex_p_value p_start,struct_typesize(float)*1
callfuncex_p_value p_end,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Remap "Remap"
#deffunc local __raymath_Remap var p_value,var p_inputStart,var p_inputEnd,var p_outputStart,var p_outputEnd,local return_value
#define global raymath_Remap(%1,%2,%3,%4,%5) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__raymath_Remap@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp
callfuncex_func _raymath_Remap@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p_value p_value,struct_typesize(float)*1
callfuncex_p_value p_inputStart,struct_typesize(float)*1
callfuncex_p_value p_inputEnd,struct_typesize(float)*1
callfuncex_p_value p_outputStart,struct_typesize(float)*1
callfuncex_p_value p_outputEnd,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Wrap "Wrap"
#deffunc local __raymath_Wrap var p_value,var p_min,var p_max,local return_value
#define global raymath_Wrap(%1,%2,%3) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__raymath_Wrap@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _raymath_Wrap@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p_value p_value,struct_typesize(float)*1
callfuncex_p_value p_min,struct_typesize(float)*1
callfuncex_p_value p_max,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_FloatEquals "FloatEquals"
#deffunc local __raymath_FloatEquals var p_x,var p_y,local return_value
#define global raymath_FloatEquals(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__raymath_FloatEquals@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _raymath_FloatEquals@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p_value p_x,struct_typesize(float)*1
callfuncex_p_value p_y,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2Zero "Vector2Zero"
#deffunc local __raymath_Vector2Zero var return_var,local return_value
#define global raymath_Vector2Zero(%1)  __raymath_Vector2Zero@raylibhsp %1
callfuncex_func _raymath_Vector2Zero@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _raymath_Vector2One "Vector2One"
#deffunc local __raymath_Vector2One var return_var,local return_value
#define global raymath_Vector2One(%1)  __raymath_Vector2One@raylibhsp %1
callfuncex_func _raymath_Vector2One@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _raymath_Vector2Add "Vector2Add"
#deffunc local __raymath_Vector2Add var return_var,var p_v1,var p_v2,local return_value
#define global raymath_Vector2Add(%1,%2,%3) __raymath_Vector2Add@raylibhsp %1,%2,%3
callfuncex_func _raymath_Vector2Add@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v1,struct_gettotal(raymath_Vector2)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector2)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2AddValue "Vector2AddValue"
#deffunc local __raymath_Vector2AddValue var return_var,var p_v,var p_add,local return_value
#define global raymath_Vector2AddValue(%1,%2,%3) dummy_p3@raylibhsp=%3:__raymath_Vector2AddValue@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _raymath_Vector2AddValue@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector2)*1
callfuncex_p_value p_add,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2Subtract "Vector2Subtract"
#deffunc local __raymath_Vector2Subtract var return_var,var p_v1,var p_v2,local return_value
#define global raymath_Vector2Subtract(%1,%2,%3) __raymath_Vector2Subtract@raylibhsp %1,%2,%3
callfuncex_func _raymath_Vector2Subtract@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v1,struct_gettotal(raymath_Vector2)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector2)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2SubtractValue "Vector2SubtractValue"
#deffunc local __raymath_Vector2SubtractValue var return_var,var p_v,var p_sub,local return_value
#define global raymath_Vector2SubtractValue(%1,%2,%3) dummy_p3@raylibhsp=%3:__raymath_Vector2SubtractValue@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _raymath_Vector2SubtractValue@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector2)*1
callfuncex_p_value p_sub,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2Length "Vector2Length"
#deffunc local __raymath_Vector2Length var p_v,local return_value
#define global raymath_Vector2Length(%1) __raymath_Vector2Length@raylibhsp %1
callfuncex_func _raymath_Vector2Length@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_v,struct_gettotal(raymath_Vector2)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2LengthSqr "Vector2LengthSqr"
#deffunc local __raymath_Vector2LengthSqr var p_v,local return_value
#define global raymath_Vector2LengthSqr(%1) __raymath_Vector2LengthSqr@raylibhsp %1
callfuncex_func _raymath_Vector2LengthSqr@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_v,struct_gettotal(raymath_Vector2)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2DotProduct "Vector2DotProduct"
#deffunc local __raymath_Vector2DotProduct var p_v1,var p_v2,local return_value
#define global raymath_Vector2DotProduct(%1,%2) __raymath_Vector2DotProduct@raylibhsp %1,%2
callfuncex_func _raymath_Vector2DotProduct@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_v1,struct_gettotal(raymath_Vector2)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector2)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2Distance "Vector2Distance"
#deffunc local __raymath_Vector2Distance var p_v1,var p_v2,local return_value
#define global raymath_Vector2Distance(%1,%2) __raymath_Vector2Distance@raylibhsp %1,%2
callfuncex_func _raymath_Vector2Distance@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_v1,struct_gettotal(raymath_Vector2)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector2)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2DistanceSqr "Vector2DistanceSqr"
#deffunc local __raymath_Vector2DistanceSqr var p_v1,var p_v2,local return_value
#define global raymath_Vector2DistanceSqr(%1,%2) __raymath_Vector2DistanceSqr@raylibhsp %1,%2
callfuncex_func _raymath_Vector2DistanceSqr@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_v1,struct_gettotal(raymath_Vector2)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector2)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2Angle "Vector2Angle"
#deffunc local __raymath_Vector2Angle var p_v1,var p_v2,local return_value
#define global raymath_Vector2Angle(%1,%2) __raymath_Vector2Angle@raylibhsp %1,%2
callfuncex_func _raymath_Vector2Angle@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_v1,struct_gettotal(raymath_Vector2)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector2)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2LineAngle "Vector2LineAngle"
#deffunc local __raymath_Vector2LineAngle var p_start,var p_end,local return_value
#define global raymath_Vector2LineAngle(%1,%2) __raymath_Vector2LineAngle@raylibhsp %1,%2
callfuncex_func _raymath_Vector2LineAngle@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_start,struct_gettotal(raymath_Vector2)*1
callfuncex_p p_end,struct_gettotal(raymath_Vector2)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2Scale "Vector2Scale"
#deffunc local __raymath_Vector2Scale var return_var,var p_v,var p_scale,local return_value
#define global raymath_Vector2Scale(%1,%2,%3) dummy_p3@raylibhsp=%3:__raymath_Vector2Scale@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _raymath_Vector2Scale@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector2)*1
callfuncex_p_value p_scale,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2Multiply "Vector2Multiply"
#deffunc local __raymath_Vector2Multiply var return_var,var p_v1,var p_v2,local return_value
#define global raymath_Vector2Multiply(%1,%2,%3) __raymath_Vector2Multiply@raylibhsp %1,%2,%3
callfuncex_func _raymath_Vector2Multiply@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v1,struct_gettotal(raymath_Vector2)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector2)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2Negate "Vector2Negate"
#deffunc local __raymath_Vector2Negate var return_var,var p_v,local return_value
#define global raymath_Vector2Negate(%1,%2) __raymath_Vector2Negate@raylibhsp %1,%2
callfuncex_func _raymath_Vector2Negate@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector2)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2Divide "Vector2Divide"
#deffunc local __raymath_Vector2Divide var return_var,var p_v1,var p_v2,local return_value
#define global raymath_Vector2Divide(%1,%2,%3) __raymath_Vector2Divide@raylibhsp %1,%2,%3
callfuncex_func _raymath_Vector2Divide@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v1,struct_gettotal(raymath_Vector2)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector2)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2Normalize "Vector2Normalize"
#deffunc local __raymath_Vector2Normalize var return_var,var p_v,local return_value
#define global raymath_Vector2Normalize(%1,%2) __raymath_Vector2Normalize@raylibhsp %1,%2
callfuncex_func _raymath_Vector2Normalize@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector2)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2Transform "Vector2Transform"
#deffunc local __raymath_Vector2Transform var return_var,var p_v,var p_mat,local return_value
#define global raymath_Vector2Transform(%1,%2,%3) __raymath_Vector2Transform@raylibhsp %1,%2,%3
callfuncex_func _raymath_Vector2Transform@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector2)*1
callfuncex_p p_mat,struct_gettotal(raymath_Matrix)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2Lerp "Vector2Lerp"
#deffunc local __raymath_Vector2Lerp var return_var,var p_v1,var p_v2,var p_amount,local return_value
#define global raymath_Vector2Lerp(%1,%2,%3,%4) dummy_p4@raylibhsp=%4:__raymath_Vector2Lerp@raylibhsp %1,%2,%3,dummy_p4@raylibhsp
callfuncex_func _raymath_Vector2Lerp@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v1,struct_gettotal(raymath_Vector2)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector2)*1
callfuncex_p_value p_amount,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2Reflect "Vector2Reflect"
#deffunc local __raymath_Vector2Reflect var return_var,var p_v,var p_normal,local return_value
#define global raymath_Vector2Reflect(%1,%2,%3) __raymath_Vector2Reflect@raylibhsp %1,%2,%3
callfuncex_func _raymath_Vector2Reflect@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector2)*1
callfuncex_p p_normal,struct_gettotal(raymath_Vector2)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2Rotate "Vector2Rotate"
#deffunc local __raymath_Vector2Rotate var return_var,var p_v,var p_angle,local return_value
#define global raymath_Vector2Rotate(%1,%2,%3) dummy_p3@raylibhsp=%3:__raymath_Vector2Rotate@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _raymath_Vector2Rotate@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector2)*1
callfuncex_p_value p_angle,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2MoveTowards "Vector2MoveTowards"
#deffunc local __raymath_Vector2MoveTowards var return_var,var p_v,var p_target,var p_maxDistance,local return_value
#define global raymath_Vector2MoveTowards(%1,%2,%3,%4) dummy_p4@raylibhsp=%4:__raymath_Vector2MoveTowards@raylibhsp %1,%2,%3,dummy_p4@raylibhsp
callfuncex_func _raymath_Vector2MoveTowards@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector2)*1
callfuncex_p p_target,struct_gettotal(raymath_Vector2)*1
callfuncex_p_value p_maxDistance,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2Invert "Vector2Invert"
#deffunc local __raymath_Vector2Invert var return_var,var p_v,local return_value
#define global raymath_Vector2Invert(%1,%2) __raymath_Vector2Invert@raylibhsp %1,%2
callfuncex_func _raymath_Vector2Invert@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector2)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2Clamp "Vector2Clamp"
#deffunc local __raymath_Vector2Clamp var return_var,var p_v,var p_min,var p_max,local return_value
#define global raymath_Vector2Clamp(%1,%2,%3,%4) __raymath_Vector2Clamp@raylibhsp %1,%2,%3,%4
callfuncex_func _raymath_Vector2Clamp@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector2)*1
callfuncex_p p_min,struct_gettotal(raymath_Vector2)*1
callfuncex_p p_max,struct_gettotal(raymath_Vector2)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2ClampValue "Vector2ClampValue"
#deffunc local __raymath_Vector2ClampValue var return_var,var p_v,var p_min,var p_max,local return_value
#define global raymath_Vector2ClampValue(%1,%2,%3,%4) dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__raymath_Vector2ClampValue@raylibhsp %1,%2,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _raymath_Vector2ClampValue@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector2)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector2)*1
callfuncex_p_value p_min,struct_typesize(float)*1
callfuncex_p_value p_max,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector2Equals "Vector2Equals"
#deffunc local __raymath_Vector2Equals var p_p,var p_q,local return_value
#define global raymath_Vector2Equals(%1,%2) __raymath_Vector2Equals@raylibhsp %1,%2
callfuncex_func _raymath_Vector2Equals@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p p_p,struct_gettotal(raymath_Vector2)*1
callfuncex_p p_q,struct_gettotal(raymath_Vector2)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Zero "Vector3Zero"
#deffunc local __raymath_Vector3Zero var return_var,local return_value
#define global raymath_Vector3Zero(%1)  __raymath_Vector3Zero@raylibhsp %1
callfuncex_func _raymath_Vector3Zero@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _raymath_Vector3One "Vector3One"
#deffunc local __raymath_Vector3One var return_var,local return_value
#define global raymath_Vector3One(%1)  __raymath_Vector3One@raylibhsp %1
callfuncex_func _raymath_Vector3One@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _raymath_Vector3Add "Vector3Add"
#deffunc local __raymath_Vector3Add var return_var,var p_v1,var p_v2,local return_value
#define global raymath_Vector3Add(%1,%2,%3) __raymath_Vector3Add@raylibhsp %1,%2,%3
callfuncex_func _raymath_Vector3Add@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v1,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3AddValue "Vector3AddValue"
#deffunc local __raymath_Vector3AddValue var return_var,var p_v,var p_add,local return_value
#define global raymath_Vector3AddValue(%1,%2,%3) dummy_p3@raylibhsp=%3:__raymath_Vector3AddValue@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _raymath_Vector3AddValue@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector3)*1
callfuncex_p_value p_add,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Subtract "Vector3Subtract"
#deffunc local __raymath_Vector3Subtract var return_var,var p_v1,var p_v2,local return_value
#define global raymath_Vector3Subtract(%1,%2,%3) __raymath_Vector3Subtract@raylibhsp %1,%2,%3
callfuncex_func _raymath_Vector3Subtract@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v1,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3SubtractValue "Vector3SubtractValue"
#deffunc local __raymath_Vector3SubtractValue var return_var,var p_v,var p_sub,local return_value
#define global raymath_Vector3SubtractValue(%1,%2,%3) dummy_p3@raylibhsp=%3:__raymath_Vector3SubtractValue@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _raymath_Vector3SubtractValue@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector3)*1
callfuncex_p_value p_sub,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Scale "Vector3Scale"
#deffunc local __raymath_Vector3Scale var return_var,var p_v,var p_scalar,local return_value
#define global raymath_Vector3Scale(%1,%2,%3) dummy_p3@raylibhsp=%3:__raymath_Vector3Scale@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _raymath_Vector3Scale@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector3)*1
callfuncex_p_value p_scalar,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Multiply "Vector3Multiply"
#deffunc local __raymath_Vector3Multiply var return_var,var p_v1,var p_v2,local return_value
#define global raymath_Vector3Multiply(%1,%2,%3) __raymath_Vector3Multiply@raylibhsp %1,%2,%3
callfuncex_func _raymath_Vector3Multiply@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v1,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3CrossProduct "Vector3CrossProduct"
#deffunc local __raymath_Vector3CrossProduct var return_var,var p_v1,var p_v2,local return_value
#define global raymath_Vector3CrossProduct(%1,%2,%3) __raymath_Vector3CrossProduct@raylibhsp %1,%2,%3
callfuncex_func _raymath_Vector3CrossProduct@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v1,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Perpendicular "Vector3Perpendicular"
#deffunc local __raymath_Vector3Perpendicular var return_var,var p_v,local return_value
#define global raymath_Vector3Perpendicular(%1,%2) __raymath_Vector3Perpendicular@raylibhsp %1,%2
callfuncex_func _raymath_Vector3Perpendicular@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Length "Vector3Length"
#deffunc local __raymath_Vector3Length var p_v,local return_value
#define global raymath_Vector3Length(%1) __raymath_Vector3Length@raylibhsp %1
callfuncex_func _raymath_Vector3Length@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_v,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3LengthSqr "Vector3LengthSqr"
#deffunc local __raymath_Vector3LengthSqr var p_v,local return_value
#define global raymath_Vector3LengthSqr(%1) __raymath_Vector3LengthSqr@raylibhsp %1
callfuncex_func _raymath_Vector3LengthSqr@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_v,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3DotProduct "Vector3DotProduct"
#deffunc local __raymath_Vector3DotProduct var p_v1,var p_v2,local return_value
#define global raymath_Vector3DotProduct(%1,%2) __raymath_Vector3DotProduct@raylibhsp %1,%2
callfuncex_func _raymath_Vector3DotProduct@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_v1,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Distance "Vector3Distance"
#deffunc local __raymath_Vector3Distance var p_v1,var p_v2,local return_value
#define global raymath_Vector3Distance(%1,%2) __raymath_Vector3Distance@raylibhsp %1,%2
callfuncex_func _raymath_Vector3Distance@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_v1,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3DistanceSqr "Vector3DistanceSqr"
#deffunc local __raymath_Vector3DistanceSqr var p_v1,var p_v2,local return_value
#define global raymath_Vector3DistanceSqr(%1,%2) __raymath_Vector3DistanceSqr@raylibhsp %1,%2
callfuncex_func _raymath_Vector3DistanceSqr@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_v1,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Angle "Vector3Angle"
#deffunc local __raymath_Vector3Angle var p_v1,var p_v2,local return_value
#define global raymath_Vector3Angle(%1,%2) __raymath_Vector3Angle@raylibhsp %1,%2
callfuncex_func _raymath_Vector3Angle@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_v1,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Negate "Vector3Negate"
#deffunc local __raymath_Vector3Negate var return_var,var p_v,local return_value
#define global raymath_Vector3Negate(%1,%2) __raymath_Vector3Negate@raylibhsp %1,%2
callfuncex_func _raymath_Vector3Negate@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Divide "Vector3Divide"
#deffunc local __raymath_Vector3Divide var return_var,var p_v1,var p_v2,local return_value
#define global raymath_Vector3Divide(%1,%2,%3) __raymath_Vector3Divide@raylibhsp %1,%2,%3
callfuncex_func _raymath_Vector3Divide@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v1,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Normalize "Vector3Normalize"
#deffunc local __raymath_Vector3Normalize var return_var,var p_v,local return_value
#define global raymath_Vector3Normalize(%1,%2) __raymath_Vector3Normalize@raylibhsp %1,%2
callfuncex_func _raymath_Vector3Normalize@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3OrthoNormalize "Vector3OrthoNormalize"
#deffunc local __raymath_Vector3OrthoNormalize var p_v1,var p_v2,local return_value
#define global raymath_Vector3OrthoNormalize(%1,%2) dummy_p1@raylibhsp=%1:dummy_p2@raylibhsp=%2:__raymath_Vector3OrthoNormalize@raylibhsp dummy_p1@raylibhsp,dummy_p2@raylibhsp
callfuncex_func _raymath_Vector3OrthoNormalize@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p_value p_v1,struct_typesize(pointer)*1
callfuncex_p_value p_v2,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Transform "Vector3Transform"
#deffunc local __raymath_Vector3Transform var return_var,var p_v,var p_mat,local return_value
#define global raymath_Vector3Transform(%1,%2,%3) __raymath_Vector3Transform@raylibhsp %1,%2,%3
callfuncex_func _raymath_Vector3Transform@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_mat,struct_gettotal(raymath_Matrix)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3RotateByQuaternion "Vector3RotateByQuaternion"
#deffunc local __raymath_Vector3RotateByQuaternion var return_var,var p_v,var p_q,local return_value
#define global raymath_Vector3RotateByQuaternion(%1,%2,%3) __raymath_Vector3RotateByQuaternion@raylibhsp %1,%2,%3
callfuncex_func _raymath_Vector3RotateByQuaternion@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_q,struct_gettotal(raymath_Quaternion)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3RotateByAxisAngle "Vector3RotateByAxisAngle"
#deffunc local __raymath_Vector3RotateByAxisAngle var return_var,var p_v,var p_axis,var p_angle,local return_value
#define global raymath_Vector3RotateByAxisAngle(%1,%2,%3,%4) dummy_p4@raylibhsp=%4:__raymath_Vector3RotateByAxisAngle@raylibhsp %1,%2,%3,dummy_p4@raylibhsp
callfuncex_func _raymath_Vector3RotateByAxisAngle@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_axis,struct_gettotal(raymath_Vector3)*1
callfuncex_p_value p_angle,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Lerp "Vector3Lerp"
#deffunc local __raymath_Vector3Lerp var return_var,var p_v1,var p_v2,var p_amount,local return_value
#define global raymath_Vector3Lerp(%1,%2,%3,%4) dummy_p4@raylibhsp=%4:__raymath_Vector3Lerp@raylibhsp %1,%2,%3,dummy_p4@raylibhsp
callfuncex_func _raymath_Vector3Lerp@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v1,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector3)*1
callfuncex_p_value p_amount,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Reflect "Vector3Reflect"
#deffunc local __raymath_Vector3Reflect var return_var,var p_v,var p_normal,local return_value
#define global raymath_Vector3Reflect(%1,%2,%3) __raymath_Vector3Reflect@raylibhsp %1,%2,%3
callfuncex_func _raymath_Vector3Reflect@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_normal,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Min "Vector3Min"
#deffunc local __raymath_Vector3Min var return_var,var p_v1,var p_v2,local return_value
#define global raymath_Vector3Min(%1,%2,%3) __raymath_Vector3Min@raylibhsp %1,%2,%3
callfuncex_func _raymath_Vector3Min@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v1,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Max "Vector3Max"
#deffunc local __raymath_Vector3Max var return_var,var p_v1,var p_v2,local return_value
#define global raymath_Vector3Max(%1,%2,%3) __raymath_Vector3Max@raylibhsp %1,%2,%3
callfuncex_func _raymath_Vector3Max@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v1,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_v2,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Barycenter "Vector3Barycenter"
#deffunc local __raymath_Vector3Barycenter var return_var,var p_p,var p_a,var p_b,var p_c,local return_value
#define global raymath_Vector3Barycenter(%1,%2,%3,%4,%5) __raymath_Vector3Barycenter@raylibhsp %1,%2,%3,%4,%5
callfuncex_func _raymath_Vector3Barycenter@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_p,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_a,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_b,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_c,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Unproject "Vector3Unproject"
#deffunc local __raymath_Vector3Unproject var return_var,var p_source,var p_projection,var p_view,local return_value
#define global raymath_Vector3Unproject(%1,%2,%3,%4) __raymath_Vector3Unproject@raylibhsp %1,%2,%3,%4
callfuncex_func _raymath_Vector3Unproject@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_source,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_projection,struct_gettotal(raymath_Matrix)*1
callfuncex_p p_view,struct_gettotal(raymath_Matrix)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3ToFloatV "Vector3ToFloatV"
#deffunc local __raymath_Vector3ToFloatV var return_var,var p_v,local return_value
#define global raymath_Vector3ToFloatV(%1,%2) __raymath_Vector3ToFloatV@raylibhsp %1,%2
callfuncex_func _raymath_Vector3ToFloatV@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_float3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Invert "Vector3Invert"
#deffunc local __raymath_Vector3Invert var return_var,var p_v,local return_value
#define global raymath_Vector3Invert(%1,%2) __raymath_Vector3Invert@raylibhsp %1,%2
callfuncex_func _raymath_Vector3Invert@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Clamp "Vector3Clamp"
#deffunc local __raymath_Vector3Clamp var return_var,var p_v,var p_min,var p_max,local return_value
#define global raymath_Vector3Clamp(%1,%2,%3,%4) __raymath_Vector3Clamp@raylibhsp %1,%2,%3,%4
callfuncex_func _raymath_Vector3Clamp@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_min,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_max,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3ClampValue "Vector3ClampValue"
#deffunc local __raymath_Vector3ClampValue var return_var,var p_v,var p_min,var p_max,local return_value
#define global raymath_Vector3ClampValue(%1,%2,%3,%4) dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__raymath_Vector3ClampValue@raylibhsp %1,%2,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _raymath_Vector3ClampValue@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector3)*1
callfuncex_p_value p_min,struct_typesize(float)*1
callfuncex_p_value p_max,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Equals "Vector3Equals"
#deffunc local __raymath_Vector3Equals var p_p,var p_q,local return_value
#define global raymath_Vector3Equals(%1,%2) __raymath_Vector3Equals@raylibhsp %1,%2
callfuncex_func _raymath_Vector3Equals@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p p_p,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_q,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_Vector3Refract "Vector3Refract"
#deffunc local __raymath_Vector3Refract var return_var,var p_v,var p_n,var p_r,local return_value
#define global raymath_Vector3Refract(%1,%2,%3,%4) dummy_p4@raylibhsp=%4:__raymath_Vector3Refract@raylibhsp %1,%2,%3,dummy_p4@raylibhsp
callfuncex_func _raymath_Vector3Refract@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_v,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_n,struct_gettotal(raymath_Vector3)*1
callfuncex_p_value p_r,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixDeterminant "MatrixDeterminant"
#deffunc local __raymath_MatrixDeterminant var p_mat,local return_value
#define global raymath_MatrixDeterminant(%1) __raymath_MatrixDeterminant@raylibhsp %1
callfuncex_func _raymath_MatrixDeterminant@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_mat,struct_gettotal(raymath_Matrix)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixTrace "MatrixTrace"
#deffunc local __raymath_MatrixTrace var p_mat,local return_value
#define global raymath_MatrixTrace(%1) __raymath_MatrixTrace@raylibhsp %1
callfuncex_func _raymath_MatrixTrace@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_mat,struct_gettotal(raymath_Matrix)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixTranspose "MatrixTranspose"
#deffunc local __raymath_MatrixTranspose var return_var,var p_mat,local return_value
#define global raymath_MatrixTranspose(%1,%2) __raymath_MatrixTranspose@raylibhsp %1,%2
callfuncex_func _raymath_MatrixTranspose@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_mat,struct_gettotal(raymath_Matrix)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixInvert "MatrixInvert"
#deffunc local __raymath_MatrixInvert var return_var,var p_mat,local return_value
#define global raymath_MatrixInvert(%1,%2) __raymath_MatrixInvert@raylibhsp %1,%2
callfuncex_func _raymath_MatrixInvert@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_mat,struct_gettotal(raymath_Matrix)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixIdentity "MatrixIdentity"
#deffunc local __raymath_MatrixIdentity var return_var,local return_value
#define global raymath_MatrixIdentity(%1)  __raymath_MatrixIdentity@raylibhsp %1
callfuncex_func _raymath_MatrixIdentity@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _raymath_MatrixAdd "MatrixAdd"
#deffunc local __raymath_MatrixAdd var return_var,var p_left,var p_right,local return_value
#define global raymath_MatrixAdd(%1,%2,%3) __raymath_MatrixAdd@raylibhsp %1,%2,%3
callfuncex_func _raymath_MatrixAdd@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_left,struct_gettotal(raymath_Matrix)*1
callfuncex_p p_right,struct_gettotal(raymath_Matrix)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixSubtract "MatrixSubtract"
#deffunc local __raymath_MatrixSubtract var return_var,var p_left,var p_right,local return_value
#define global raymath_MatrixSubtract(%1,%2,%3) __raymath_MatrixSubtract@raylibhsp %1,%2,%3
callfuncex_func _raymath_MatrixSubtract@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_left,struct_gettotal(raymath_Matrix)*1
callfuncex_p p_right,struct_gettotal(raymath_Matrix)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixMultiply "MatrixMultiply"
#deffunc local __raymath_MatrixMultiply var return_var,var p_left,var p_right,local return_value
#define global raymath_MatrixMultiply(%1,%2,%3) __raymath_MatrixMultiply@raylibhsp %1,%2,%3
callfuncex_func _raymath_MatrixMultiply@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_left,struct_gettotal(raymath_Matrix)*1
callfuncex_p p_right,struct_gettotal(raymath_Matrix)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixTranslate "MatrixTranslate"
#deffunc local __raymath_MatrixTranslate var return_var,var p_x,var p_y,var p_z,local return_value
#define global raymath_MatrixTranslate(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__raymath_MatrixTranslate@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _raymath_MatrixTranslate@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_x,struct_typesize(float)*1
callfuncex_p_value p_y,struct_typesize(float)*1
callfuncex_p_value p_z,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixRotate "MatrixRotate"
#deffunc local __raymath_MatrixRotate var return_var,var p_axis,var p_angle,local return_value
#define global raymath_MatrixRotate(%1,%2,%3) dummy_p3@raylibhsp=%3:__raymath_MatrixRotate@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _raymath_MatrixRotate@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_axis,struct_gettotal(raymath_Vector3)*1
callfuncex_p_value p_angle,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixRotateX "MatrixRotateX"
#deffunc local __raymath_MatrixRotateX var return_var,var p_angle,local return_value
#define global raymath_MatrixRotateX(%1,%2) dummy_p2@raylibhsp=%2:__raymath_MatrixRotateX@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _raymath_MatrixRotateX@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_angle,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixRotateY "MatrixRotateY"
#deffunc local __raymath_MatrixRotateY var return_var,var p_angle,local return_value
#define global raymath_MatrixRotateY(%1,%2) dummy_p2@raylibhsp=%2:__raymath_MatrixRotateY@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _raymath_MatrixRotateY@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_angle,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixRotateZ "MatrixRotateZ"
#deffunc local __raymath_MatrixRotateZ var return_var,var p_angle,local return_value
#define global raymath_MatrixRotateZ(%1,%2) dummy_p2@raylibhsp=%2:__raymath_MatrixRotateZ@raylibhsp %1,dummy_p2@raylibhsp
callfuncex_func _raymath_MatrixRotateZ@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_angle,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixRotateXYZ "MatrixRotateXYZ"
#deffunc local __raymath_MatrixRotateXYZ var return_var,var p_angle,local return_value
#define global raymath_MatrixRotateXYZ(%1,%2) __raymath_MatrixRotateXYZ@raylibhsp %1,%2
callfuncex_func _raymath_MatrixRotateXYZ@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_angle,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixRotateZYX "MatrixRotateZYX"
#deffunc local __raymath_MatrixRotateZYX var return_var,var p_angle,local return_value
#define global raymath_MatrixRotateZYX(%1,%2) __raymath_MatrixRotateZYX@raylibhsp %1,%2
callfuncex_func _raymath_MatrixRotateZYX@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_angle,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixScale "MatrixScale"
#deffunc local __raymath_MatrixScale var return_var,var p_x,var p_y,var p_z,local return_value
#define global raymath_MatrixScale(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__raymath_MatrixScale@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _raymath_MatrixScale@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_x,struct_typesize(float)*1
callfuncex_p_value p_y,struct_typesize(float)*1
callfuncex_p_value p_z,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixFrustum "MatrixFrustum"
#deffunc local __raymath_MatrixFrustum var return_var,var p_left,var p_right,var p_bottom,var p_top,var p_near,var p_far,local return_value
#define global raymath_MatrixFrustum(%1,%2,%3,%4,%5,%6,%7) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:dummy_p6@raylibhsp=%6:dummy_p7@raylibhsp=%7:__raymath_MatrixFrustum@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,dummy_p6@raylibhsp,dummy_p7@raylibhsp
callfuncex_func _raymath_MatrixFrustum@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_left,struct_typesize(double)*1
callfuncex_p_value p_right,struct_typesize(double)*1
callfuncex_p_value p_bottom,struct_typesize(double)*1
callfuncex_p_value p_top,struct_typesize(double)*1
callfuncex_p_value p_near,struct_typesize(double)*1
callfuncex_p_value p_far,struct_typesize(double)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixPerspective "MatrixPerspective"
#deffunc local __raymath_MatrixPerspective var return_var,var p_fovy,var p_aspect,var p_near,var p_far,local return_value
#define global raymath_MatrixPerspective(%1,%2,%3,%4,%5) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:__raymath_MatrixPerspective@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp
callfuncex_func _raymath_MatrixPerspective@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_fovy,struct_typesize(double)*1
callfuncex_p_value p_aspect,struct_typesize(double)*1
callfuncex_p_value p_near,struct_typesize(double)*1
callfuncex_p_value p_far,struct_typesize(double)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixOrtho "MatrixOrtho"
#deffunc local __raymath_MatrixOrtho var return_var,var p_left,var p_right,var p_bottom,var p_top,var p_near,var p_far,local return_value
#define global raymath_MatrixOrtho(%1,%2,%3,%4,%5,%6,%7) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:dummy_p5@raylibhsp=%5:dummy_p6@raylibhsp=%6:dummy_p7@raylibhsp=%7:__raymath_MatrixOrtho@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp,dummy_p5@raylibhsp,dummy_p6@raylibhsp,dummy_p7@raylibhsp
callfuncex_func _raymath_MatrixOrtho@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_left,struct_typesize(double)*1
callfuncex_p_value p_right,struct_typesize(double)*1
callfuncex_p_value p_bottom,struct_typesize(double)*1
callfuncex_p_value p_top,struct_typesize(double)*1
callfuncex_p_value p_near,struct_typesize(double)*1
callfuncex_p_value p_far,struct_typesize(double)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixLookAt "MatrixLookAt"
#deffunc local __raymath_MatrixLookAt var return_var,var p_eye,var p_target,var p_up,local return_value
#define global raymath_MatrixLookAt(%1,%2,%3,%4) __raymath_MatrixLookAt@raylibhsp %1,%2,%3,%4
callfuncex_func _raymath_MatrixLookAt@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_eye,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_target,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_up,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_MatrixToFloatV "MatrixToFloatV"
#deffunc local __raymath_MatrixToFloatV var return_var,var p_mat,local return_value
#define global raymath_MatrixToFloatV(%1,%2) __raymath_MatrixToFloatV@raylibhsp %1,%2
callfuncex_func _raymath_MatrixToFloatV@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_float16)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_mat,struct_gettotal(raymath_Matrix)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionAdd "QuaternionAdd"
#deffunc local __raymath_QuaternionAdd var return_var,var p_q1,var p_q2,local return_value
#define global raymath_QuaternionAdd(%1,%2,%3) __raymath_QuaternionAdd@raylibhsp %1,%2,%3
callfuncex_func _raymath_QuaternionAdd@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_q1,struct_gettotal(raymath_Quaternion)*1
callfuncex_p p_q2,struct_gettotal(raymath_Quaternion)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionAddValue "QuaternionAddValue"
#deffunc local __raymath_QuaternionAddValue var return_var,var p_q,var p_add,local return_value
#define global raymath_QuaternionAddValue(%1,%2,%3) dummy_p3@raylibhsp=%3:__raymath_QuaternionAddValue@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _raymath_QuaternionAddValue@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_q,struct_gettotal(raymath_Quaternion)*1
callfuncex_p_value p_add,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionSubtract "QuaternionSubtract"
#deffunc local __raymath_QuaternionSubtract var return_var,var p_q1,var p_q2,local return_value
#define global raymath_QuaternionSubtract(%1,%2,%3) __raymath_QuaternionSubtract@raylibhsp %1,%2,%3
callfuncex_func _raymath_QuaternionSubtract@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_q1,struct_gettotal(raymath_Quaternion)*1
callfuncex_p p_q2,struct_gettotal(raymath_Quaternion)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionSubtractValue "QuaternionSubtractValue"
#deffunc local __raymath_QuaternionSubtractValue var return_var,var p_q,var p_sub,local return_value
#define global raymath_QuaternionSubtractValue(%1,%2,%3) dummy_p3@raylibhsp=%3:__raymath_QuaternionSubtractValue@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _raymath_QuaternionSubtractValue@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_q,struct_gettotal(raymath_Quaternion)*1
callfuncex_p_value p_sub,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionIdentity "QuaternionIdentity"
#deffunc local __raymath_QuaternionIdentity var return_var,local return_value
#define global raymath_QuaternionIdentity(%1)  __raymath_QuaternionIdentity@raylibhsp %1
callfuncex_func _raymath_QuaternionIdentity@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_call return_value
return return_value

#func _raymath_QuaternionLength "QuaternionLength"
#deffunc local __raymath_QuaternionLength var p_q,local return_value
#define global raymath_QuaternionLength(%1) __raymath_QuaternionLength@raylibhsp %1
callfuncex_func _raymath_QuaternionLength@raylibhsp,CALLFUNCEX_RETURN_FLOAT,struct_typesize(float)
callfuncex_p p_q,struct_gettotal(raymath_Quaternion)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionNormalize "QuaternionNormalize"
#deffunc local __raymath_QuaternionNormalize var return_var,var p_q,local return_value
#define global raymath_QuaternionNormalize(%1,%2) __raymath_QuaternionNormalize@raylibhsp %1,%2
callfuncex_func _raymath_QuaternionNormalize@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_q,struct_gettotal(raymath_Quaternion)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionInvert "QuaternionInvert"
#deffunc local __raymath_QuaternionInvert var return_var,var p_q,local return_value
#define global raymath_QuaternionInvert(%1,%2) __raymath_QuaternionInvert@raylibhsp %1,%2
callfuncex_func _raymath_QuaternionInvert@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_q,struct_gettotal(raymath_Quaternion)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionMultiply "QuaternionMultiply"
#deffunc local __raymath_QuaternionMultiply var return_var,var p_q1,var p_q2,local return_value
#define global raymath_QuaternionMultiply(%1,%2,%3) __raymath_QuaternionMultiply@raylibhsp %1,%2,%3
callfuncex_func _raymath_QuaternionMultiply@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_q1,struct_gettotal(raymath_Quaternion)*1
callfuncex_p p_q2,struct_gettotal(raymath_Quaternion)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionScale "QuaternionScale"
#deffunc local __raymath_QuaternionScale var return_var,var p_q,var p_mul,local return_value
#define global raymath_QuaternionScale(%1,%2,%3) dummy_p3@raylibhsp=%3:__raymath_QuaternionScale@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _raymath_QuaternionScale@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_q,struct_gettotal(raymath_Quaternion)*1
callfuncex_p_value p_mul,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionDivide "QuaternionDivide"
#deffunc local __raymath_QuaternionDivide var return_var,var p_q1,var p_q2,local return_value
#define global raymath_QuaternionDivide(%1,%2,%3) __raymath_QuaternionDivide@raylibhsp %1,%2,%3
callfuncex_func _raymath_QuaternionDivide@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_q1,struct_gettotal(raymath_Quaternion)*1
callfuncex_p p_q2,struct_gettotal(raymath_Quaternion)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionLerp "QuaternionLerp"
#deffunc local __raymath_QuaternionLerp var return_var,var p_q1,var p_q2,var p_amount,local return_value
#define global raymath_QuaternionLerp(%1,%2,%3,%4) dummy_p4@raylibhsp=%4:__raymath_QuaternionLerp@raylibhsp %1,%2,%3,dummy_p4@raylibhsp
callfuncex_func _raymath_QuaternionLerp@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_q1,struct_gettotal(raymath_Quaternion)*1
callfuncex_p p_q2,struct_gettotal(raymath_Quaternion)*1
callfuncex_p_value p_amount,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionNlerp "QuaternionNlerp"
#deffunc local __raymath_QuaternionNlerp var return_var,var p_q1,var p_q2,var p_amount,local return_value
#define global raymath_QuaternionNlerp(%1,%2,%3,%4) dummy_p4@raylibhsp=%4:__raymath_QuaternionNlerp@raylibhsp %1,%2,%3,dummy_p4@raylibhsp
callfuncex_func _raymath_QuaternionNlerp@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_q1,struct_gettotal(raymath_Quaternion)*1
callfuncex_p p_q2,struct_gettotal(raymath_Quaternion)*1
callfuncex_p_value p_amount,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionSlerp "QuaternionSlerp"
#deffunc local __raymath_QuaternionSlerp var return_var,var p_q1,var p_q2,var p_amount,local return_value
#define global raymath_QuaternionSlerp(%1,%2,%3,%4) dummy_p4@raylibhsp=%4:__raymath_QuaternionSlerp@raylibhsp %1,%2,%3,dummy_p4@raylibhsp
callfuncex_func _raymath_QuaternionSlerp@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_q1,struct_gettotal(raymath_Quaternion)*1
callfuncex_p p_q2,struct_gettotal(raymath_Quaternion)*1
callfuncex_p_value p_amount,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionFromVector3ToVector3 "QuaternionFromVector3ToVector3"
#deffunc local __raymath_QuaternionFromVector3ToVector3 var return_var,var p_from,var p_to,local return_value
#define global raymath_QuaternionFromVector3ToVector3(%1,%2,%3) __raymath_QuaternionFromVector3ToVector3@raylibhsp %1,%2,%3
callfuncex_func _raymath_QuaternionFromVector3ToVector3@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_from,struct_gettotal(raymath_Vector3)*1
callfuncex_p p_to,struct_gettotal(raymath_Vector3)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionFromMatrix "QuaternionFromMatrix"
#deffunc local __raymath_QuaternionFromMatrix var return_var,var p_mat,local return_value
#define global raymath_QuaternionFromMatrix(%1,%2) __raymath_QuaternionFromMatrix@raylibhsp %1,%2
callfuncex_func _raymath_QuaternionFromMatrix@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_mat,struct_gettotal(raymath_Matrix)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionToMatrix "QuaternionToMatrix"
#deffunc local __raymath_QuaternionToMatrix var return_var,var p_q,local return_value
#define global raymath_QuaternionToMatrix(%1,%2) __raymath_QuaternionToMatrix@raylibhsp %1,%2
callfuncex_func _raymath_QuaternionToMatrix@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Matrix)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_q,struct_gettotal(raymath_Quaternion)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionFromAxisAngle "QuaternionFromAxisAngle"
#deffunc local __raymath_QuaternionFromAxisAngle var return_var,var p_axis,var p_angle,local return_value
#define global raymath_QuaternionFromAxisAngle(%1,%2,%3) dummy_p3@raylibhsp=%3:__raymath_QuaternionFromAxisAngle@raylibhsp %1,%2,dummy_p3@raylibhsp
callfuncex_func _raymath_QuaternionFromAxisAngle@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_axis,struct_gettotal(raymath_Vector3)*1
callfuncex_p_value p_angle,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionToAxisAngle "QuaternionToAxisAngle"
#deffunc local __raymath_QuaternionToAxisAngle var p_q,var p_outAxis,var p_outAngle,local return_value
#define global raymath_QuaternionToAxisAngle(%1,%2,%3) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:__raymath_QuaternionToAxisAngle@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp
callfuncex_func _raymath_QuaternionToAxisAngle@raylibhsp,CALLFUNCEX_RETURN_VOID,struct_typesize(void)
callfuncex_p p_q,struct_gettotal(raymath_Quaternion)*1
callfuncex_p_value p_outAxis,struct_typesize(pointer)*1
callfuncex_p_value p_outAngle,struct_typesize(pointer)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionFromEuler "QuaternionFromEuler"
#deffunc local __raymath_QuaternionFromEuler var return_var,var p_pitch,var p_yaw,var p_roll,local return_value
#define global raymath_QuaternionFromEuler(%1,%2,%3,%4) dummy_p2@raylibhsp=%2:dummy_p3@raylibhsp=%3:dummy_p4@raylibhsp=%4:__raymath_QuaternionFromEuler@raylibhsp %1,dummy_p2@raylibhsp,dummy_p3@raylibhsp,dummy_p4@raylibhsp
callfuncex_func _raymath_QuaternionFromEuler@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p_value p_pitch,struct_typesize(float)*1
callfuncex_p_value p_yaw,struct_typesize(float)*1
callfuncex_p_value p_roll,struct_typesize(float)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionToEuler "QuaternionToEuler"
#deffunc local __raymath_QuaternionToEuler var return_var,var p_q,local return_value
#define global raymath_QuaternionToEuler(%1,%2) __raymath_QuaternionToEuler@raylibhsp %1,%2
callfuncex_func _raymath_QuaternionToEuler@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Vector3)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_q,struct_gettotal(raymath_Quaternion)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionTransform "QuaternionTransform"
#deffunc local __raymath_QuaternionTransform var return_var,var p_q,var p_mat,local return_value
#define global raymath_QuaternionTransform(%1,%2,%3) __raymath_QuaternionTransform@raylibhsp %1,%2,%3
callfuncex_func _raymath_QuaternionTransform@raylibhsp,CALLFUNCEX_RETURN_STRUCT,struct_gettotal(raymath_Quaternion)
#ifndef __hsp64__@
callfuncex_p_value varptr(return_var),struct_typesize(pointer)
#else
callfuncex_p_value varptr64(return_var),struct_typesize(pointer)
#endif
callfuncex_p p_q,struct_gettotal(raymath_Quaternion)*1
callfuncex_p p_mat,struct_gettotal(raymath_Matrix)*1
callfuncex_call return_value
return return_value

#func _raymath_QuaternionEquals "QuaternionEquals"
#deffunc local __raymath_QuaternionEquals var p_p,var p_q,local return_value
#define global raymath_QuaternionEquals(%1,%2) __raymath_QuaternionEquals@raylibhsp %1,%2
callfuncex_func _raymath_QuaternionEquals@raylibhsp,CALLFUNCEX_RETURN_INT,struct_typesize(int)
callfuncex_p p_p,struct_gettotal(raymath_Quaternion)*1
callfuncex_p p_q,struct_gettotal(raymath_Quaternion)*1
callfuncex_call return_value
return return_value


#global

#endif
